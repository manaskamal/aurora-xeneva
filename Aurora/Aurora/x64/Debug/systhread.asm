; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?get_thread_id@@YAGXZ				; get_thread_id
PUBLIC	?create_uthread@@YAXP6AXPEAX@ZPEAD@Z		; create_uthread
PUBLIC	?sys_sleep@@YAX_K@Z				; sys_sleep
EXTRN	p2v:PROC
EXTRN	x64_cli:PROC
EXTRN	create_child_thread:PROC
EXTRN	get_current_thread:PROC
EXTRN	force_sched:PROC
EXTRN	sleep_thread:PROC
EXTRN	?create_inc_stack@@YAPEA_KPEA_K@Z:PROC		; create_inc_stack
EXTRN	?get_current_process@@YAPEAU_process_@@XZ:PROC	; get_current_process
pdata	SEGMENT
$pdata$?get_thread_id@@YAGXZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?get_thread_id@@YAGXZ
$pdata$?create_uthread@@YAXP6AXPEAX@ZPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+149
	DD	imagerel $unwind$?create_uthread@@YAXP6AXPEAX@ZPEAD@Z
$pdata$?sys_sleep@@YAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?sys_sleep@@YAX_K@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?get_thread_id@@YAGXZ DD 010401H
	DD	04204H
$unwind$?create_uthread@@YAXP6AXPEAX@ZPEAD@Z DD 010e01H
	DD	0820eH
$unwind$?sys_sleep@@YAX_K@Z DD 010901H
	DD	06209H
xdata	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\sysserv\systhread.cpp
_TEXT	SEGMENT
t$ = 32
ms$ = 64
?sys_sleep@@YAX_K@Z PROC				; sys_sleep

; 54   : void sys_sleep (uint64_t ms) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 55   : 	x64_cli();

	call	x64_cli

; 56   : 	thread_t* t = get_current_thread();

	call	get_current_thread
	mov	QWORD PTR t$[rsp], rax

; 57   : 	sleep_thread (t, ms);

	mov	rdx, QWORD PTR ms$[rsp]
	mov	rcx, QWORD PTR t$[rsp]
	call	sleep_thread

; 58   : 	force_sched();

	call	force_sched

; 59   : }

	add	rsp, 56					; 00000038H
	ret	0
?sys_sleep@@YAX_K@Z ENDP				; sys_sleep
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\sysserv\systhread.cpp
_TEXT	SEGMENT
proc$ = 32
st$ = 40
t$ = 48
entry$ = 80
name$ = 88
?create_uthread@@YAXP6AXPEAX@ZPEAD@Z PROC		; create_uthread

; 41   : void create_uthread (void (*entry) (void*), char* name) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 42   : 	x64_cli();

	call	x64_cli

; 43   : 	process_t *proc = get_current_process();

	call	?get_current_process@@YAPEAU_process_@@XZ ; get_current_process
	mov	QWORD PTR proc$[rsp], rax

; 44   : 	uint64_t st = (uint64_t)create_inc_stack((uint64_t*)p2v((size_t)get_current_thread()->frame.cr3));

	call	get_current_thread
	mov	rcx, QWORD PTR [rax+192]
	call	p2v
	mov	rcx, rax
	call	?create_inc_stack@@YAPEA_KPEA_K@Z	; create_inc_stack
	mov	QWORD PTR st$[rsp], rax

; 45   : 	thread_t * t = create_child_thread(get_current_thread(),entry,(uint64_t)st,name);

	call	get_current_thread
	mov	r9, QWORD PTR name$[rsp]
	mov	r8, QWORD PTR st$[rsp]
	mov	rdx, QWORD PTR entry$[rsp]
	mov	rcx, rax
	call	create_child_thread
	mov	QWORD PTR t$[rsp], rax

; 46   : 	//uint64_t stack = (uint64_t)p2v((size_t)AuPmmngrAlloc()); //create_inc_stack(old_cr3);
; 47   : 	proc->threads[proc->num_thread] = t;

	mov	rax, QWORD PTR proc$[rsp]
	movzx	eax, BYTE PTR [rax+2072]
	mov	rcx, QWORD PTR proc$[rsp]
	mov	rdx, QWORD PTR t$[rsp]
	mov	QWORD PTR [rcx+rax*8+24], rdx

; 48   : 	proc->num_thread++;

	mov	rax, QWORD PTR proc$[rsp]
	movzx	eax, BYTE PTR [rax+2072]
	inc	al
	mov	rcx, QWORD PTR proc$[rsp]
	mov	BYTE PTR [rcx+2072], al

; 49   : 	
; 50   : 	return;
; 51   : }

	add	rsp, 72					; 00000048H
	ret	0
?create_uthread@@YAXP6AXPEAX@ZPEAD@Z ENDP		; create_uthread
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\sysserv\systhread.cpp
_TEXT	SEGMENT
?get_thread_id@@YAGXZ PROC				; get_thread_id

; 35   : uint16_t get_thread_id () {

$LN3:
	sub	rsp, 40					; 00000028H

; 36   : 	x64_cli ();

	call	x64_cli

; 37   : 	return get_current_thread()->id;

	call	get_current_thread
	movzx	eax, WORD PTR [rax+238]

; 38   : }

	add	rsp, 40					; 00000028H
	ret	0
?get_thread_id@@YAGXZ ENDP				; get_thread_id
_TEXT	ENDS
END
