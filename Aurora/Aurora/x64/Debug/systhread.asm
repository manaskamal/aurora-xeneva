; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?get_thread_id@@YAGXZ				; get_thread_id
PUBLIC	?create_uthread@@YAXP6AXPEAX@ZPEAD@Z		; create_uthread
PUBLIC	?sys_sleep@@YAX_K@Z				; sys_sleep
EXTRN	p2v:PROC
EXTRN	x64_cli:PROC
EXTRN	x64_read_cr3:PROC
EXTRN	?AuCreateAddressSpace@@YAPEA_KXZ:PROC		; AuCreateAddressSpace
EXTRN	get_current_thread:PROC
EXTRN	force_sched:PROC
EXTRN	sleep_thread:PROC
pdata	SEGMENT
$pdata$?get_thread_id@@YAGXZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?get_thread_id@@YAGXZ
$pdata$?create_uthread@@YAXP6AXPEAX@ZPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?create_uthread@@YAXP6AXPEAX@ZPEAD@Z
$pdata$?sys_sleep@@YAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?sys_sleep@@YAX_K@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?get_thread_id@@YAGXZ DD 010401H
	DD	04204H
$unwind$?create_uthread@@YAXP6AXPEAX@ZPEAD@Z DD 010e01H
	DD	0620eH
$unwind$?sys_sleep@@YAX_K@Z DD 010901H
	DD	06209H
xdata	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\sysserv\systhread.cpp
_TEXT	SEGMENT
t$ = 32
ms$ = 64
?sys_sleep@@YAX_K@Z PROC				; sys_sleep

; 44   : void sys_sleep (uint64_t ms) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 45   : 	x64_cli();

	call	x64_cli

; 46   : 	thread_t* t = get_current_thread();

	call	get_current_thread
	mov	QWORD PTR t$[rsp], rax

; 47   : 	sleep_thread (t, ms);

	mov	rdx, QWORD PTR ms$[rsp]
	mov	rcx, QWORD PTR t$[rsp]
	call	sleep_thread

; 48   : 	force_sched();

	call	force_sched

; 49   : }

	add	rsp, 56					; 00000038H
	ret	0
?sys_sleep@@YAX_K@Z ENDP				; sys_sleep
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\sysserv\systhread.cpp
_TEXT	SEGMENT
old_cr3$ = 32
new_cr3$ = 40
entry$ = 64
name$ = 72
?create_uthread@@YAXP6AXPEAX@ZPEAD@Z PROC		; create_uthread

; 22   : void create_uthread (void (*entry) (void*), char* name) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 23   : 	x64_cli();

	call	x64_cli

; 24   : 	/*
; 25   : 	 * Not implemented properly
; 26   : 	 *
; 27   : 	 * TODO: Update the process structure and add an
; 28   : 	 * entry for the new user thread!!
; 29   : 	 */  
; 30   : 	uint64_t *old_cr3 = (uint64_t*)p2v(x64_read_cr3());

	call	x64_read_cr3
	mov	rcx, rax
	call	p2v
	mov	QWORD PTR old_cr3$[rsp], rax

; 31   : 	uint64_t* new_cr3 = (uint64_t*)AuCreateAddressSpace();

	call	?AuCreateAddressSpace@@YAPEA_KXZ	; AuCreateAddressSpace
	mov	QWORD PTR new_cr3$[rsp], rax

; 32   : 	
; 33   : 
; 34   : 
; 35   : 	//uint64_t stack = (uint64_t)p2v((size_t)AuPmmngrAlloc()); //create_inc_stack(old_cr3);
; 36   : 
; 37   : 
; 38   : 	/* Create the new user thread */
; 39   : 	//thread_t * t = create_user_thread(entry,stack + 4096,(uint64_t)new_cr3,name,1);
; 40   : 	return;
; 41   : }

	add	rsp, 56					; 00000038H
	ret	0
?create_uthread@@YAXP6AXPEAX@ZPEAD@Z ENDP		; create_uthread
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\sysserv\systhread.cpp
_TEXT	SEGMENT
?get_thread_id@@YAGXZ PROC				; get_thread_id

; 16   : uint16_t get_thread_id () {

$LN3:
	sub	rsp, 40					; 00000028H

; 17   : 	x64_cli ();

	call	x64_cli

; 18   : 	return get_current_thread()->id;

	call	get_current_thread
	movzx	eax, WORD PTR [rax+234]

; 19   : }

	add	rsp, 40					; 00000028H
	ret	0
?get_thread_id@@YAGXZ ENDP				; get_thread_id
_TEXT	ENDS
END
