; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG3459	DB	'Current cr3 value -> %x', 0aH, 00H
	ORG $+7
$SG3460	DB	'Current entry address -> %x', 0aH, 00H
	ORG $+3
$SG3462	DB	'uthread', 00H
CONST	ENDS
PUBLIC	?get_thread_id@@YAGXZ				; get_thread_id
PUBLIC	?create_uthread@@YAXP6AXPEAX@Z@Z		; create_uthread
PUBLIC	?sys_sleep@@YAX_K@Z				; sys_sleep
EXTRN	?pmmngr_alloc@@YAPEAXXZ:PROC			; pmmngr_alloc
EXTRN	x64_cli:PROC
EXTRN	x64_read_cr3:PROC
EXTRN	?map_page@@YA_N_K0@Z:PROC			; map_page
EXTRN	?create_user_thread@@YAPEAU_thread_@@P6AXPEAX@Z_K2QEADE@Z:PROC ; create_user_thread
EXTRN	?get_current_thread@@YAPEAU_thread_@@XZ:PROC	; get_current_thread
EXTRN	force_sched:PROC
EXTRN	?sleep_thread@@YAXPEAU_thread_@@_K@Z:PROC	; sleep_thread
EXTRN	?printf@@YAXPEBDZZ:PROC				; printf
pdata	SEGMENT
$pdata$?get_thread_id@@YAGXZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?get_thread_id@@YAGXZ
$pdata$?create_uthread@@YAXP6AXPEAX@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+114
	DD	imagerel $unwind$?create_uthread@@YAXP6AXPEAX@Z@Z
$pdata$?sys_sleep@@YAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?sys_sleep@@YAX_K@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?get_thread_id@@YAGXZ DD 010401H
	DD	04204H
$unwind$?create_uthread@@YAXP6AXPEAX@Z@Z DD 010901H
	DD	08209H
$unwind$?sys_sleep@@YAX_K@Z DD 010901H
	DD	06209H
xdata	ENDS
; Function compile flags: /Odtp
; File e:\xeneva project\xeneva\aurora\aurora\sysserv\systhread.cpp
_TEXT	SEGMENT
t$ = 32
ms$ = 64
?sys_sleep@@YAX_K@Z PROC				; sys_sleep

; 31   : void sys_sleep (uint64_t ms) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 32   : 	x64_cli();

	call	x64_cli

; 33   : 	thread_t* t = get_current_thread();

	call	?get_current_thread@@YAPEAU_thread_@@XZ	; get_current_thread
	mov	QWORD PTR t$[rsp], rax

; 34   : 	sleep_thread (t, ms);

	mov	rdx, QWORD PTR ms$[rsp]
	mov	rcx, QWORD PTR t$[rsp]
	call	?sleep_thread@@YAXPEAU_thread_@@_K@Z	; sleep_thread

; 35   : 	force_sched();

	call	force_sched

; 36   : }

	add	rsp, 56					; 00000038H
	ret	0
?sys_sleep@@YAX_K@Z ENDP				; sys_sleep
_TEXT	ENDS
; Function compile flags: /Odtp
; File e:\xeneva project\xeneva\aurora\aurora\sysserv\systhread.cpp
_TEXT	SEGMENT
t$ = 48
entry$ = 80
?create_uthread@@YAXP6AXPEAX@Z@Z PROC			; create_uthread

; 22   : void create_uthread (void (*entry) (void*)) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 23   : 	x64_cli ();

	call	x64_cli

; 24   : 	map_page((uint64_t)pmmngr_alloc(), 0x0000000080000000);

	call	?pmmngr_alloc@@YAPEAXXZ			; pmmngr_alloc
	mov	edx, -2147483648			; 80000000H
	mov	rcx, rax
	call	?map_page@@YA_N_K0@Z			; map_page

; 25   : 	printf ("Current cr3 value -> %x\n", x64_read_cr3());

	call	x64_read_cr3
	mov	rdx, rax
	lea	rcx, OFFSET FLAT:$SG3459
	call	?printf@@YAXPEBDZZ			; printf

; 26   : 	printf ("Current entry address -> %x\n", entry);

	mov	rdx, QWORD PTR entry$[rsp]
	lea	rcx, OFFSET FLAT:$SG3460
	call	?printf@@YAXPEBDZZ			; printf

; 27   : 	thread_t * t = create_user_thread (entry,0x0000000080000000 + 4096, x64_read_cr3(), "uthread", 1);

	call	x64_read_cr3
	mov	BYTE PTR [rsp+32], 1
	lea	r9, OFFSET FLAT:$SG3462
	mov	r8, rax
	mov	edx, -2147479552			; 80001000H
	mov	rcx, QWORD PTR entry$[rsp]
	call	?create_user_thread@@YAPEAU_thread_@@P6AXPEAX@Z_K2QEADE@Z ; create_user_thread
	mov	QWORD PTR t$[rsp], rax

; 28   : }

	add	rsp, 72					; 00000048H
	ret	0
?create_uthread@@YAXP6AXPEAX@Z@Z ENDP			; create_uthread
_TEXT	ENDS
; Function compile flags: /Odtp
; File e:\xeneva project\xeneva\aurora\aurora\sysserv\systhread.cpp
_TEXT	SEGMENT
?get_thread_id@@YAGXZ PROC				; get_thread_id

; 16   : uint16_t get_thread_id () {

$LN3:
	sub	rsp, 40					; 00000028H

; 17   : 	x64_cli ();

	call	x64_cli

; 18   : 	return get_current_thread()->id;

	call	?get_current_thread@@YAPEAU_thread_@@XZ	; get_current_thread
	movzx	eax, WORD PTR [rax+226]

; 19   : }

	add	rsp, 40					; 00000028H
	ret	0
?get_thread_id@@YAGXZ ENDP				; get_thread_id
_TEXT	ENDS
END
