; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?mm_init@@YAXXZ					; mm_init
PUBLIC	?malloc@@YAPEAX_K@Z				; malloc
PUBLIC	?mfree@@YAXPEAX@Z				; mfree
EXTRN	?vmmngr_x86_64_init@@YAXXZ:PROC			; vmmngr_x86_64_init
EXTRN	?initialize_kmemory@@YAX_K@Z:PROC		; initialize_kmemory
EXTRN	?alloc@@YAPEAX_K@Z:PROC				; alloc
EXTRN	?free@@YAXPEAX@Z:PROC				; free
pdata	SEGMENT
$pdata$?mm_init@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?mm_init@@YAXXZ
$pdata$?malloc@@YAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?malloc@@YAPEAX_K@Z
$pdata$?mfree@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?mfree@@YAXPEAX@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?mm_init@@YAXXZ DD 010401H
	DD	04204H
$unwind$?malloc@@YAPEAX_K@Z DD 010901H
	DD	04209H
$unwind$?mfree@@YAXPEAX@Z DD 010901H
	DD	04209H
xdata	ENDS
; Function compile flags: /Odtp
; File e:\xeneva project\xeneva\aurora\aurora\mm.cpp
_TEXT	SEGMENT
address$ = 48
?mfree@@YAXPEAX@Z PROC					; mfree

; 36   : void mfree(void* address) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 37   : #ifdef ARCH_X64
; 38   : 	 free (address);

	mov	rcx, QWORD PTR address$[rsp]
	call	?free@@YAXPEAX@Z			; free

; 39   : #elif  ARCH_ARM
; 40   : 	//arm32 free routine
; 41   : #elif  ARCH_ARM64
; 42   : 	//!arm64 free routine
; 43   : #endif
; 44   : }

	add	rsp, 40					; 00000028H
	ret	0
?mfree@@YAXPEAX@Z ENDP					; mfree
_TEXT	ENDS
; Function compile flags: /Odtp
; File e:\xeneva project\xeneva\aurora\aurora\mm.cpp
_TEXT	SEGMENT
address$ = 48
?malloc@@YAPEAX_K@Z PROC				; malloc

; 25   : void* malloc (size_t address) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 26   : #ifdef ARCH_X64
; 27   : 	return alloc (address);

	mov	rcx, QWORD PTR address$[rsp]
	call	?alloc@@YAPEAX_K@Z			; alloc

; 28   : #elif  ARCH_ARM
; 29   : 	//return with arm32 allocator
; 30   : #elif  ARCH_ARM64
; 31   : 	//!return with arm64 allocator
; 32   : #endif
; 33   : }

	add	rsp, 40					; 00000028H
	ret	0
?malloc@@YAPEAX_K@Z ENDP				; malloc
_TEXT	ENDS
; Function compile flags: /Odtp
; File e:\xeneva project\xeneva\aurora\aurora\mm.cpp
_TEXT	SEGMENT
?mm_init@@YAXXZ PROC					; mm_init

; 14   : void mm_init () {

$LN3:
	sub	rsp, 40					; 00000028H

; 15   : #ifdef ARCH_X64
; 16   : 	vmmngr_x86_64_init ();

	call	?vmmngr_x86_64_init@@YAXXZ		; vmmngr_x86_64_init

; 17   : 	initialize_kmemory(0x10);

	mov	ecx, 16
	call	?initialize_kmemory@@YAX_K@Z		; initialize_kmemory

; 18   : #elif  ARCH_ARM
; 19   : 	//!initialize arm32 virtual memory manager
; 20   : #elif  ARCH_ARM64
; 21   : 	//!initialize arm64 virtual memory manager
; 22   : #endif
; 23   : }

	add	rsp, 40					; 00000028H
	ret	0
?mm_init@@YAXXZ ENDP					; mm_init
_TEXT	ENDS
END
