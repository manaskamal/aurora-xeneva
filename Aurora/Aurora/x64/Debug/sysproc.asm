; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG4040	DB	'***Process killed ', 0dH, 0aH, 00H
	ORG $+3
$SG4041	DB	'*** Current used RAM -> %d MB / total -> %d MB ', 0dH, 0aH
	DB	00H
	ORG $+2
$SG4057	DB	'Loop', 00H
CONST	ENDS
PUBLIC	?create__sys_process@@YAHPEBDPEAD@Z		; create__sys_process
PUBLIC	?sys_exit@@YAXXZ				; sys_exit
PUBLIC	?sys_kill@@YAXHH@Z				; sys_kill
PUBLIC	?sys_set_signal@@YAXHP6AXH@Z@Z			; sys_set_signal
PUBLIC	?sig_loop_tst@@YAXXZ				; sig_loop_tst
PUBLIC	?sys_sigreturn@@YAXH@Z				; sys_sigreturn
EXTRN	?pmmngr_get_used_ram@@YA_KXZ:PROC		; pmmngr_get_used_ram
EXTRN	?pmmngr_get_total_ram@@YA_KXZ:PROC		; pmmngr_get_total_ram
EXTRN	x64_cli:PROC
EXTRN	get_current_thread:PROC
EXTRN	force_sched:PROC
EXTRN	?thread_iterate_ready_list@@YAPEAU_thread_@@G@Z:PROC ; thread_iterate_ready_list
EXTRN	?thread_iterate_block_list@@YAPEAU_thread_@@H@Z:PROC ; thread_iterate_block_list
EXTRN	?AuCreateProcess@@YAHPEBDPEAD@Z:PROC		; AuCreateProcess
EXTRN	?kill_process@@YAXXZ:PROC			; kill_process
EXTRN	_debug_print_:PROC
EXTRN	?AuAllocSignal@@YAXPEAU_thread_@@H@Z:PROC	; AuAllocSignal
pdata	SEGMENT
$pdata$?create__sys_process@@YAHPEBDPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?create__sys_process@@YAHPEBDPEAD@Z
$pdata$?sys_exit@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+114
	DD	imagerel $unwind$?sys_exit@@YAXXZ
$pdata$?sys_kill@@YAXHH@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$?sys_kill@@YAXHH@Z
$pdata$?sys_set_signal@@YAXHP6AXH@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?sys_set_signal@@YAXHP6AXH@Z@Z
$pdata$?sig_loop_tst@@YAXXZ DD imagerel $LN5
	DD	imagerel $LN5+23
	DD	imagerel $unwind$?sig_loop_tst@@YAXXZ
$pdata$?sys_sigreturn@@YAXH@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?sys_sigreturn@@YAXH@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?create__sys_process@@YAHPEBDPEAD@Z DD 010e01H
	DD	0620eH
$unwind$?sys_exit@@YAXXZ DD 010401H
	DD	06204H
$unwind$?sys_kill@@YAXHH@Z DD 010c01H
	DD	0620cH
$unwind$?sys_set_signal@@YAXHP6AXH@Z@Z DD 010d01H
	DD	0420dH
$unwind$?sig_loop_tst@@YAXXZ DD 010401H
	DD	04204H
$unwind$?sys_sigreturn@@YAXH@Z DD 010801H
	DD	06208H
xdata	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\sysserv\sysproc.cpp
_TEXT	SEGMENT
current_thread$ = 32
num$ = 64
?sys_sigreturn@@YAXH@Z PROC				; sys_sigreturn

; 97   : void sys_sigreturn (int num) {

$LN3:
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 56					; 00000038H

; 98   : 	x64_cli();

	call	x64_cli

; 99   : 	thread_t *current_thread = get_current_thread();

	call	get_current_thread
	mov	QWORD PTR current_thread$[rsp], rax

; 100  : 	/* Just make a page fault here */
; 101  : }

	add	rsp, 56					; 00000038H
	ret	0
?sys_sigreturn@@YAXH@Z ENDP				; sys_sigreturn
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\sysserv\sysproc.cpp
_TEXT	SEGMENT
?sig_loop_tst@@YAXXZ PROC				; sig_loop_tst

; 89   : void sig_loop_tst() {

$LN5:
	sub	rsp, 40					; 00000028H
$LN2@sig_loop_t:

; 90   : 	for(;;) {
; 91   : 		_debug_print_ ("Loop");

	lea	rcx, OFFSET FLAT:$SG4057
	call	_debug_print_

; 92   : 	}

	jmp	SHORT $LN2@sig_loop_t

; 93   : }

	add	rsp, 40					; 00000028H
	ret	0
?sig_loop_tst@@YAXXZ ENDP				; sig_loop_tst
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\sysserv\sysproc.cpp
_TEXT	SEGMENT
signo$ = 48
handler$ = 56
?sys_set_signal@@YAXHP6AXH@Z@Z PROC			; sys_set_signal

; 84   : void sys_set_signal (int signo, sig_handler handler) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 40					; 00000028H

; 85   : 	x64_cli();

	call	x64_cli

; 86   : 	get_current_thread()->signals[signo] = handler;

	call	get_current_thread
	movsxd	rcx, DWORD PTR signo$[rsp]
	mov	rdx, QWORD PTR handler$[rsp]
	mov	QWORD PTR [rax+rcx*8+752], rdx

; 87   : }

	add	rsp, 40					; 00000028H
	ret	0
?sys_set_signal@@YAXHP6AXH@Z@Z ENDP			; sys_set_signal
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\sysserv\sysproc.cpp
_TEXT	SEGMENT
current_thread$ = 32
pid$ = 64
signo$ = 72
?sys_kill@@YAXHH@Z PROC					; sys_kill

; 68   : void sys_kill (int pid, int signo) {

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 56					; 00000038H

; 69   : 	x64_cli();

	call	x64_cli

; 70   : 	thread_t *current_thread = thread_iterate_ready_list(pid);

	movzx	ecx, WORD PTR pid$[rsp]
	call	?thread_iterate_ready_list@@YAPEAU_thread_@@G@Z ; thread_iterate_ready_list
	mov	QWORD PTR current_thread$[rsp], rax

; 71   : 	if (current_thread == NULL) 

	cmp	QWORD PTR current_thread$[rsp], 0
	jne	SHORT $LN1@sys_kill

; 72   : 		current_thread = thread_iterate_block_list(pid);

	mov	ecx, DWORD PTR pid$[rsp]
	call	?thread_iterate_block_list@@YAPEAU_thread_@@H@Z ; thread_iterate_block_list
	mov	QWORD PTR current_thread$[rsp], rax
$LN1@sys_kill:

; 73   : 
; 74   : 	/* Allocate a new signal */
; 75   : 	AuAllocSignal(current_thread,signo);

	mov	edx, DWORD PTR signo$[rsp]
	mov	rcx, QWORD PTR current_thread$[rsp]
	call	?AuAllocSignal@@YAXPEAU_thread_@@H@Z	; AuAllocSignal

; 76   : 
; 77   : }

	add	rsp, 56					; 00000038H
	ret	0
?sys_kill@@YAXHH@Z ENDP					; sys_kill
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\sysserv\sysproc.cpp
_TEXT	SEGMENT
tv67 = 32
?sys_exit@@YAXXZ PROC					; sys_exit

; 54   : void sys_exit () {

$LN3:
	sub	rsp, 56					; 00000038H

; 55   : 	x64_cli();	

	call	x64_cli

; 56   : 	kill_process();

	call	?kill_process@@YAXXZ			; kill_process

; 57   : 	_debug_print_ ("***Process killed \r\n");

	lea	rcx, OFFSET FLAT:$SG4040
	call	_debug_print_

; 58   : 	_debug_print_ ("*** Current used RAM -> %d MB / total -> %d MB \r\n", pmmngr_get_used_ram() / 1024 / 1024, pmmngr_get_total_ram() / 1024 / 1024);

	call	?pmmngr_get_total_ram@@YA_KXZ		; pmmngr_get_total_ram
	xor	edx, edx
	mov	ecx, 1024				; 00000400H
	div	rcx
	xor	edx, edx
	mov	ecx, 1024				; 00000400H
	div	rcx
	mov	QWORD PTR tv67[rsp], rax
	call	?pmmngr_get_used_ram@@YA_KXZ		; pmmngr_get_used_ram
	xor	edx, edx
	mov	ecx, 1024				; 00000400H
	div	rcx
	xor	edx, edx
	mov	ecx, 1024				; 00000400H
	div	rcx
	mov	rcx, QWORD PTR tv67[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, OFFSET FLAT:$SG4041
	call	_debug_print_

; 59   : 	force_sched();

	call	force_sched

; 60   : }

	add	rsp, 56					; 00000038H
	ret	0
?sys_exit@@YAXXZ ENDP					; sys_exit
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\sysserv\sysproc.cpp
_TEXT	SEGMENT
id$ = 32
name$ = 64
procnm$ = 72
?create__sys_process@@YAHPEBDPEAD@Z PROC		; create__sys_process

; 44   : int create__sys_process (const char* name, char* procnm) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 45   : 	x64_cli();

	call	x64_cli

; 46   : 	int id = AuCreateProcess (name, procnm);

	mov	rdx, QWORD PTR procnm$[rsp]
	mov	rcx, QWORD PTR name$[rsp]
	call	?AuCreateProcess@@YAHPEBDPEAD@Z		; AuCreateProcess
	mov	DWORD PTR id$[rsp], eax

; 47   : 	return id;

	mov	eax, DWORD PTR id$[rsp]

; 48   : }

	add	rsp, 56					; 00000038H
	ret	0
?create__sys_process@@YAHPEBDPEAD@Z ENDP		; create__sys_process
_TEXT	ENDS
END
