; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_fltused
PUBLIC	?debug@@3P6AXPEBDZZEA				; debug
_BSS	SEGMENT
?debug@@3P6AXPEBDZZEA DQ 01H DUP (?)			; debug
_BSS	ENDS
CONST	SEGMENT
$SG5831	DB	'Hello Message', 0aH, 00H
	ORG $+1
$SG5843	DB	'FX State size -> %d byte ', 0aH, 00H
	ORG $+5
$SG5844	DB	'Scheduler Initialized', 0aH, 00H
	ORG $+1
$SG5845	DB	'shell', 00H
	ORG $+2
$SG5846	DB	'/sndsrv.exe', 00H
CONST	ENDS
_DATA	SEGMENT
_fltused DD	01H
_DATA	ENDS
PUBLIC	??2@YAPEAX_K@Z					; operator new
PUBLIC	??3@YAXPEAX@Z					; operator delete
PUBLIC	message
PUBLIC	??_U@YAPEAX_K@Z					; operator new[]
PUBLIC	?debug_print@@YAXPEBDZZ				; debug_print
PUBLIC	?ue_thr@@YAXPEAX@Z				; ue_thr
PUBLIC	?_kmain@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z		; _kmain
EXTRN	x64_cli:PROC
EXTRN	x64_sti:PROC
EXTRN	x64_hlt:PROC
EXTRN	?AuHalInitialize@@YAXXZ:PROC			; AuHalInitialize
EXTRN	?AuPmmngrInit@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z:PROC ; AuPmmngrInit
EXTRN	?AuPagingInit@@YAXXZ:PROC			; AuPagingInit
EXTRN	?console_initialize@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z:PROC ; console_initialize
EXTRN	printf:PROC
EXTRN	?kybrd_init@@YAXXZ:PROC				; kybrd_init
EXTRN	?initialize_mouse@@YAXXZ:PROC			; initialize_mouse
EXTRN	?AuHeapInitialize@@YAXXZ:PROC			; AuHeapInitialize
EXTRN	?malloc@@YAPEAX_K@Z:PROC			; malloc
EXTRN	?free@@YAXPEAX@Z:PROC				; free
EXTRN	?hda_initialize@@YAXXZ:PROC			; hda_initialize
EXTRN	?ahci_initialize@@YAXXZ:PROC			; ahci_initialize
EXTRN	?e1000_initialize@@YAXXZ:PROC			; e1000_initialize
EXTRN	?initialize_rtc@@YAXXZ:PROC			; initialize_rtc
EXTRN	?initialize_acpi@@YAXPEAX@Z:PROC		; initialize_acpi
EXTRN	?vfs_init@@YAXXZ:PROC				; vfs_init
EXTRN	?initialize_scheduler@@YAXXZ:PROC		; initialize_scheduler
EXTRN	?scheduler_start@@YAXXZ:PROC			; scheduler_start
EXTRN	?message_init@@YAXXZ:PROC			; message_init
EXTRN	?dwm_ipc_init@@YAXXZ:PROC			; dwm_ipc_init
EXTRN	?initialize_screen@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z:PROC ; initialize_screen
EXTRN	?screen_set_configuration@@YAXII@Z:PROC		; screen_set_configuration
EXTRN	?create_process@@YAHPEBDPEAD@Z:PROC		; create_process
EXTRN	?process_list_initialize@@YAXXZ:PROC		; process_list_initialize
EXTRN	?initialize_serial@@YAXXZ:PROC			; initialize_serial
EXTRN	?pri_loop_init@@YAXXZ:PROC			; pri_loop_init
EXTRN	?ttype_init@@YAXXZ:PROC				; ttype_init
pdata	SEGMENT
$pdata$??2@YAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$??2@YAPEAX_K@Z
$pdata$??3@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$??3@YAXPEAX@Z
$pdata$message DD imagerel $LN3
	DD	imagerel $LN3+21
	DD	imagerel $unwind$message
$pdata$??_U@YAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$??_U@YAPEAX_K@Z
$pdata$?debug_print@@YAXPEBDZZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?debug_print@@YAXPEBDZZ
$pdata$?_kmain@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z DD imagerel $LN5
	DD	imagerel $LN5+266
	DD	imagerel $unwind$?_kmain@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$??2@YAPEAX_K@Z DD 010901H
	DD	04209H
$unwind$??3@YAXPEAX@Z DD 010901H
	DD	04209H
$unwind$message DD 010401H
	DD	04204H
$unwind$??_U@YAPEAX_K@Z DD 010901H
	DD	04209H
$unwind$?debug_print@@YAXPEBDZZ DD 011801H
	DD	04218H
$unwind$?_kmain@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z DD 010901H
	DD	04209H
xdata	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\init.cpp
_TEXT	SEGMENT
info$ = 48
?_kmain@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z PROC		; _kmain

; 125  : void _kmain (KERNEL_BOOT_INFO *info) {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 126  : 	debug = info->printf_gui;

	mov	rax, QWORD PTR info$[rsp]
	mov	rax, QWORD PTR [rax+106]
	mov	QWORD PTR ?debug@@3P6AXPEBDZZEA, rax	; debug

; 127  : 	//! Initialize the memory mappings
; 128  : 	AuPmmngrInit (info);

	mov	rcx, QWORD PTR info$[rsp]
	call	?AuPmmngrInit@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z ; AuPmmngrInit

; 129  : 	AuPagingInit();

	call	?AuPagingInit@@YAXXZ			; AuPagingInit

; 130  : 	AuHeapInitialize();

	call	?AuHeapInitialize@@YAXXZ		; AuHeapInitialize

; 131  : 	AuHalInitialize();

	call	?AuHalInitialize@@YAXXZ			; AuHalInitialize

; 132  : 
; 133  : 	initialize_serial();

	call	?initialize_serial@@YAXXZ		; initialize_serial

; 134  : 
; 135  : 	initialize_acpi (info->acpi_table_pointer);

	mov	rax, QWORD PTR info$[rsp]
	mov	rcx, QWORD PTR [rax+82]
	call	?initialize_acpi@@YAXPEAX@Z		; initialize_acpi

; 136  : 
; 137  : 	ahci_initialize();

	call	?ahci_initialize@@YAXXZ			; ahci_initialize

; 138  : 	hda_initialize();

	call	?hda_initialize@@YAXXZ			; hda_initialize

; 139  : 
; 140  : 	vfs_init();

	call	?vfs_init@@YAXXZ			; vfs_init

; 141  : 
; 142  :     initialize_screen(info);

	mov	rcx, QWORD PTR info$[rsp]
	call	?initialize_screen@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z ; initialize_screen

; 143  : 	screen_set_configuration(info->X_Resolution,info->Y_Resolution);

	mov	rax, QWORD PTR info$[rsp]
	movzx	eax, WORD PTR [rax+62]
	mov	rcx, QWORD PTR info$[rsp]
	movzx	ecx, WORD PTR [rcx+60]
	mov	edx, eax
	call	?screen_set_configuration@@YAXII@Z	; screen_set_configuration

; 144  : 	console_initialize(info);

	mov	rcx, QWORD PTR info$[rsp]
	call	?console_initialize@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z ; console_initialize

; 145  : 	initialize_rtc(); 

	call	?initialize_rtc@@YAXXZ			; initialize_rtc

; 146  : 
; 147  : 	initialize_mouse();

	call	?initialize_mouse@@YAXXZ		; initialize_mouse

; 148  : 	kybrd_init();

	call	?kybrd_init@@YAXXZ			; kybrd_init

; 149  : 	message_init ();

	call	?message_init@@YAXXZ			; message_init

; 150  : 	dwm_ipc_init();

	call	?dwm_ipc_init@@YAXXZ			; dwm_ipc_init

; 151  : 	pri_loop_init();

	call	?pri_loop_init@@YAXXZ			; pri_loop_init

; 152  : 	
; 153  : 	e1000_initialize();   //<< receiver not working

	call	?e1000_initialize@@YAXXZ		; e1000_initialize

; 154  : 	//svga_init();
; 155  : 	//sound_initialize();
; 156  : 	//driver_mngr_initialize(info);
; 157  : 	process_list_initialize();

	call	?process_list_initialize@@YAXXZ		; process_list_initialize

; 158  : 	ttype_init();

	call	?ttype_init@@YAXXZ			; ttype_init

; 159  : 
; 160  : 	printf ("FX State size -> %d byte \n", sizeof(fx_state_t));

	mov	edx, 416				; 000001a0H
	lea	rcx, OFFSET FLAT:$SG5843
	call	printf

; 161  : 	
; 162  : #ifdef ARCH_X64
; 163  : 	//================================================
; 164  : 	//! Initialize the scheduler here
; 165  : 	//!===============================================
; 166  : 	initialize_scheduler();

	call	?initialize_scheduler@@YAXXZ		; initialize_scheduler

; 167  : 
; 168  : 	printf ("Scheduler Initialized\n");

	lea	rcx, OFFSET FLAT:$SG5844
	call	printf

; 169  : 
; 170  : 	x64_cli();

	call	x64_cli

; 171  : 	/* start the sound service manager at id 1 */
; 172  : 	create_process ("/sndsrv.exe","shell");

	lea	rdx, OFFSET FLAT:$SG5845
	lea	rcx, OFFSET FLAT:$SG5846
	call	?create_process@@YAHPEBDPEAD@Z		; create_process

; 173  : 
; 174  : 	/* start the compositing window manager at id 2 */
; 175  : 	//create_process ("/priwm.exe","priwm");
; 176  : 
; 177  : 	//create_process ("/dock.exe", "dock");
; 178  : 	x64_sti();

	call	x64_sti

; 179  : 	//! Here start the scheduler (multitasking engine)
; 180  : 	scheduler_start();

	call	?scheduler_start@@YAXXZ			; scheduler_start
$LN2@kmain:

; 181  : #endif
; 182  : 
; 183  : 	//! Loop forever
; 184  : 	while(1) {

	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN1@kmain

; 185  : 		//!looping looping
; 186  : 		x64_cli();

	call	x64_cli

; 187  : 		x64_hlt();

	call	x64_hlt

; 188  : 	}

	jmp	SHORT $LN2@kmain
$LN1@kmain:

; 189  : }

	add	rsp, 40					; 00000028H
	ret	0
?_kmain@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z ENDP		; _kmain
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\init.cpp
_TEXT	SEGMENT
__formal$ = 8
?ue_thr@@YAXPEAX@Z PROC					; ue_thr

; 116  : void ue_thr(void*) {

	mov	QWORD PTR [rsp+8], rcx
$LN2@ue_thr:

; 117  : 	for(;;);

	jmp	SHORT $LN2@ue_thr

; 118  : }

	ret	0
?ue_thr@@YAXPEAX@Z ENDP					; ue_thr
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\init.cpp
_TEXT	SEGMENT
text$ = 48
?debug_print@@YAXPEBDZZ PROC				; debug_print

; 108  : void debug_print (const char* text, ...) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	sub	rsp, 40					; 00000028H

; 109  : 	debug(text);

	mov	rcx, QWORD PTR text$[rsp]
	call	QWORD PTR ?debug@@3P6AXPEBDZZEA		; debug

; 110  : }

	add	rsp, 40					; 00000028H
	ret	0
?debug_print@@YAXPEBDZZ ENDP				; debug_print
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\init.cpp
_TEXT	SEGMENT
size$ = 48
??_U@YAPEAX_K@Z PROC					; operator new[]

; 98   : void* __cdecl operator new[] (size_t size) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 99   : 	return malloc(size);

	mov	rcx, QWORD PTR size$[rsp]
	call	?malloc@@YAPEAX_K@Z			; malloc

; 100  : }

	add	rsp, 40					; 00000028H
	ret	0
??_U@YAPEAX_K@Z ENDP					; operator new[]
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\init.cpp
_TEXT	SEGMENT
message	PROC

; 112  : void message() {

$LN3:
	sub	rsp, 40					; 00000028H

; 113  : 	printf ("Hello Message\n");

	lea	rcx, OFFSET FLAT:$SG5831
	call	printf

; 114  : }

	add	rsp, 40					; 00000028H
	ret	0
message	ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\init.cpp
_TEXT	SEGMENT
p$ = 48
??3@YAXPEAX@Z PROC					; operator delete

; 102  : void __cdecl operator delete (void* p) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 103  : 	free(p);

	mov	rcx, QWORD PTR p$[rsp]
	call	?free@@YAXPEAX@Z			; free

; 104  : }

	add	rsp, 40					; 00000028H
	ret	0
??3@YAXPEAX@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\init.cpp
_TEXT	SEGMENT
size$ = 48
??2@YAPEAX_K@Z PROC					; operator new

; 94   : void* __cdecl ::operator new(size_t size) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 95   : 	return malloc(size);

	mov	rcx, QWORD PTR size$[rsp]
	call	?malloc@@YAPEAX_K@Z			; malloc

; 96   : }

	add	rsp, 40					; 00000028H
	ret	0
??2@YAPEAX_K@Z ENDP					; operator new
_TEXT	ENDS
END
