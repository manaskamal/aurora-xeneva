; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?wait@@YAXXZ					; wait
PUBLIC	?sys_unblock_id@@YAXG@Z				; sys_unblock_id
EXTRN	x64_cli:PROC
EXTRN	?block_thread@@YAXPEAU_thread_@@@Z:PROC		; block_thread
EXTRN	?unblock_thread@@YAXPEAU_thread_@@@Z:PROC	; unblock_thread
EXTRN	get_current_thread:PROC
EXTRN	force_sched:PROC
EXTRN	?thread_iterate_block_list@@YAPEAU_thread_@@H@Z:PROC ; thread_iterate_block_list
pdata	SEGMENT
$pdata$?wait@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?wait@@YAXXZ
$pdata$?sys_unblock_id@@YAXG@Z DD imagerel $LN5
	DD	imagerel $LN5+71
	DD	imagerel $unwind$?sys_unblock_id@@YAXG@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?wait@@YAXXZ DD 010401H
	DD	06204H
$unwind$?sys_unblock_id@@YAXG@Z DD 010901H
	DD	06209H
xdata	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\sysserv\syswait.cpp
_TEXT	SEGMENT
thr$ = 32
id$ = 64
?sys_unblock_id@@YAXG@Z PROC				; sys_unblock_id

; 27   : void sys_unblock_id (uint16_t id) {

$LN5:
	mov	WORD PTR [rsp+8], cx
	sub	rsp, 56					; 00000038H

; 28   : 	x64_cli();

	call	x64_cli

; 29   : 	thread_t* thr = (thread_t*)thread_iterate_block_list (id);

	movzx	eax, WORD PTR id$[rsp]
	mov	ecx, eax
	call	?thread_iterate_block_list@@YAPEAU_thread_@@H@Z ; thread_iterate_block_list
	mov	QWORD PTR thr$[rsp], rax

; 30   : 	if (thr != NULL){

	cmp	QWORD PTR thr$[rsp], 0
	je	SHORT $LN2@sys_unbloc

; 31   : 		if (thr->state == THREAD_STATE_BLOCKED) {

	mov	rax, QWORD PTR thr$[rsp]
	movzx	eax, BYTE PTR [rax+232]
	cmp	eax, 3
	jne	SHORT $LN1@sys_unbloc

; 32   : 			unblock_thread(thr);

	mov	rcx, QWORD PTR thr$[rsp]
	call	?unblock_thread@@YAXPEAU_thread_@@@Z	; unblock_thread
$LN1@sys_unbloc:
$LN2@sys_unbloc:

; 33   : 		}
; 34   : 	}
; 35   : }

	add	rsp, 56					; 00000038H
	ret	0
?sys_unblock_id@@YAXG@Z ENDP				; sys_unblock_id
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\sysserv\syswait.cpp
_TEXT	SEGMENT
t$ = 32
?wait@@YAXXZ PROC					; wait

; 20   : void wait () {

$LN3:
	sub	rsp, 56					; 00000038H

; 21   : 	x64_cli();

	call	x64_cli

; 22   : 	thread_t *t = get_current_thread ();

	call	get_current_thread
	mov	QWORD PTR t$[rsp], rax

; 23   : 	block_thread (t);

	mov	rcx, QWORD PTR t$[rsp]
	call	?block_thread@@YAXPEAU_thread_@@@Z	; block_thread

; 24   : 	force_sched();

	call	force_sched

; 25   : }

	add	rsp, 56					; 00000038H
	ret	0
?wait@@YAXXZ ENDP					; wait
_TEXT	ENDS
END
