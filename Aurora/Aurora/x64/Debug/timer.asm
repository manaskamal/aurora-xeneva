; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?timer_head@@3PEAU_timer_@@EA			; timer_head
PUBLIC	?timer_last@@3PEAU_timer_@@EA			; timer_last
PUBLIC	?utimer_id@@3IA					; utimer_id
_BSS	SEGMENT
?timer_head@@3PEAU_timer_@@EA DQ 01H DUP (?)		; timer_head
?timer_last@@3PEAU_timer_@@EA DQ 01H DUP (?)		; timer_last
?utimer_id@@3IA DD 01H DUP (?)				; utimer_id
_BSS	ENDS
PUBLIC	?create_timer@@YAHIG@Z				; create_timer
PUBLIC	?destroy_timer@@YAXH@Z				; destroy_timer
PUBLIC	?timer_fire@@YAXXZ				; timer_fire
PUBLIC	?timer_insert@@YAXPEAU_timer_@@@Z		; timer_insert
PUBLIC	?timer_delete@@YAXPEAU_timer_@@@Z		; timer_delete
EXTRN	?pmmngr_alloc@@YAPEAXXZ:PROC			; pmmngr_alloc
EXTRN	?pmmngr_free@@YAXPEAX@Z:PROC			; pmmngr_free
EXTRN	?post_box_put_msg@@YAXPEAU_post_box_message_@@G@Z:PROC ; post_box_put_msg
pdata	SEGMENT
$pdata$?create_timer@@YAHIG@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$?create_timer@@YAHIG@Z
$pdata$?destroy_timer@@YAXH@Z DD imagerel $LN7
	DD	imagerel $LN7+92
	DD	imagerel $unwind$?destroy_timer@@YAXH@Z
$pdata$?timer_fire@@YAXXZ DD imagerel $LN8
	DD	imagerel $LN8+144
	DD	imagerel $unwind$?timer_fire@@YAXXZ
$pdata$?timer_delete@@YAXPEAU_timer_@@@Z DD imagerel $LN8
	DD	imagerel $LN8+146
	DD	imagerel $unwind$?timer_delete@@YAXPEAU_timer_@@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?create_timer@@YAHIG@Z DD 010d01H
	DD	0620dH
$unwind$?destroy_timer@@YAXH@Z DD 010801H
	DD	06208H
$unwind$?timer_fire@@YAXXZ DD 010401H
	DD	0a204H
$unwind$?timer_delete@@YAXPEAU_timer_@@@Z DD 010901H
	DD	04209H
xdata	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\timer.cpp
_TEXT	SEGMENT
new_timer$ = 48
?timer_delete@@YAXPEAU_timer_@@@Z PROC			; timer_delete

; 36   : void timer_delete (timer_t* new_timer) {

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 37   : 
; 38   : 	if (timer_head == NULL)

	cmp	QWORD PTR ?timer_head@@3PEAU_timer_@@EA, 0 ; timer_head
	jne	SHORT $LN5@timer_dele

; 39   : 		return;

	jmp	SHORT $LN6@timer_dele
$LN5@timer_dele:

; 40   : 
; 41   : 	if (new_timer == timer_head) {

	mov	rax, QWORD PTR ?timer_head@@3PEAU_timer_@@EA ; timer_head
	cmp	QWORD PTR new_timer$[rsp], rax
	jne	SHORT $LN4@timer_dele

; 42   : 		timer_head = timer_head->next;

	mov	rax, QWORD PTR ?timer_head@@3PEAU_timer_@@EA ; timer_head
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR ?timer_head@@3PEAU_timer_@@EA, rax ; timer_head

; 43   : 	} else {

	jmp	SHORT $LN3@timer_dele
$LN4@timer_dele:

; 44   : 		new_timer->prev->next = new_timer->next;

	mov	rax, QWORD PTR new_timer$[rsp]
	mov	rax, QWORD PTR [rax+24]
	mov	rcx, QWORD PTR new_timer$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	QWORD PTR [rax+16], rcx
$LN3@timer_dele:

; 45   : 	}
; 46   : 
; 47   : 	if (new_timer == timer_last) {

	mov	rax, QWORD PTR ?timer_last@@3PEAU_timer_@@EA ; timer_last
	cmp	QWORD PTR new_timer$[rsp], rax
	jne	SHORT $LN2@timer_dele

; 48   : 		timer_last = new_timer->prev;

	mov	rax, QWORD PTR new_timer$[rsp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR ?timer_last@@3PEAU_timer_@@EA, rax ; timer_last

; 49   : 	} else {

	jmp	SHORT $LN1@timer_dele
$LN2@timer_dele:

; 50   : 		new_timer->next->prev = new_timer->prev;

	mov	rax, QWORD PTR new_timer$[rsp]
	mov	rax, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR new_timer$[rsp]
	mov	rcx, QWORD PTR [rcx+24]
	mov	QWORD PTR [rax+24], rcx
$LN1@timer_dele:

; 51   : 	}
; 52   : 	pmmngr_free(new_timer);

	mov	rcx, QWORD PTR new_timer$[rsp]
	call	?pmmngr_free@@YAXPEAX@Z			; pmmngr_free
$LN6@timer_dele:

; 53   : }

	add	rsp, 40					; 00000028H
	ret	0
?timer_delete@@YAXPEAU_timer_@@@Z ENDP			; timer_delete
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\timer.cpp
_TEXT	SEGMENT
new_timer$ = 8
?timer_insert@@YAXPEAU_timer_@@@Z PROC			; timer_insert

; 21   : void timer_insert (timer_t* new_timer ) {

	mov	QWORD PTR [rsp+8], rcx

; 22   : 	new_timer->next = NULL;

	mov	rax, QWORD PTR new_timer$[rsp]
	mov	QWORD PTR [rax+16], 0

; 23   : 	new_timer->prev = NULL;

	mov	rax, QWORD PTR new_timer$[rsp]
	mov	QWORD PTR [rax+24], 0

; 24   : 
; 25   : 	if (timer_head == NULL) {

	cmp	QWORD PTR ?timer_head@@3PEAU_timer_@@EA, 0 ; timer_head
	jne	SHORT $LN2@timer_inse

; 26   : 		timer_last = new_timer;

	mov	rax, QWORD PTR new_timer$[rsp]
	mov	QWORD PTR ?timer_last@@3PEAU_timer_@@EA, rax ; timer_last

; 27   : 		timer_head = new_timer;

	mov	rax, QWORD PTR new_timer$[rsp]
	mov	QWORD PTR ?timer_head@@3PEAU_timer_@@EA, rax ; timer_head

; 28   : 	} else {

	jmp	SHORT $LN1@timer_inse
$LN2@timer_inse:

; 29   : 		timer_last->next = new_timer;

	mov	rax, QWORD PTR ?timer_last@@3PEAU_timer_@@EA ; timer_last
	mov	rcx, QWORD PTR new_timer$[rsp]
	mov	QWORD PTR [rax+16], rcx

; 30   : 		new_timer->prev = timer_last;

	mov	rax, QWORD PTR new_timer$[rsp]
	mov	rcx, QWORD PTR ?timer_last@@3PEAU_timer_@@EA ; timer_last
	mov	QWORD PTR [rax+24], rcx
$LN1@timer_inse:

; 31   : 	}
; 32   : 	timer_last = new_timer;

	mov	rax, QWORD PTR new_timer$[rsp]
	mov	QWORD PTR ?timer_last@@3PEAU_timer_@@EA, rax ; timer_last

; 33   : }

	ret	0
?timer_insert@@YAXPEAU_timer_@@@Z ENDP			; timer_insert
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\timer.cpp
_TEXT	SEGMENT
t$1 = 32
msg$2 = 40
?timer_fire@@YAXXZ PROC					; timer_fire

; 96   : void timer_fire () {

$LN8:
	sub	rsp, 88					; 00000058H

; 97   : 	if (timer_head != NULL) {

	cmp	QWORD PTR ?timer_head@@3PEAU_timer_@@EA, 0 ; timer_head
	je	SHORT $LN5@timer_fire

; 98   : 		for (timer_t *t = timer_head; t != NULL; t = t->next) {

	mov	rax, QWORD PTR ?timer_head@@3PEAU_timer_@@EA ; timer_head
	mov	QWORD PTR t$1[rsp], rax
	jmp	SHORT $LN4@timer_fire
$LN3@timer_fire:
	mov	rax, QWORD PTR t$1[rsp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR t$1[rsp], rax
$LN4@timer_fire:
	cmp	QWORD PTR t$1[rsp], 0
	je	SHORT $LN2@timer_fire

; 99   : 			if (t->timer_count == t->interval ) {

	mov	rax, QWORD PTR t$1[rsp]
	mov	rcx, QWORD PTR t$1[rsp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN1@timer_fire

; 100  : 				postmsg_t msg;
; 101  : 			    msg.type = SYSTEM_MESSAGE_TIMER_EVENT;

	mov	eax, 1
	mov	WORD PTR msg$2[rsp], ax

; 102  : 			    msg.to_id = t->task_id;

	mov	rax, QWORD PTR t$1[rsp]
	movzx	eax, WORD PTR [rax+8]
	mov	WORD PTR msg$2[rsp+28], ax

; 103  : 			    post_box_put_msg (&msg,t->task_id);

	mov	rax, QWORD PTR t$1[rsp]
	movzx	edx, WORD PTR [rax+8]
	lea	rcx, QWORD PTR msg$2[rsp]
	call	?post_box_put_msg@@YAXPEAU_post_box_message_@@G@Z ; post_box_put_msg

; 104  : 			    t->timer_count = 0;

	mov	rax, QWORD PTR t$1[rsp]
	mov	DWORD PTR [rax], 0
$LN1@timer_fire:

; 105  : 		    }
; 106  : 			t->timer_count++;

	mov	rax, QWORD PTR t$1[rsp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR t$1[rsp]
	mov	DWORD PTR [rcx], eax

; 107  : 		}

	jmp	SHORT $LN3@timer_fire
$LN2@timer_fire:
$LN5@timer_fire:

; 108  : 	}
; 109  : 
; 110  : 
; 111  : }

	add	rsp, 88					; 00000058H
	ret	0
?timer_fire@@YAXXZ ENDP					; timer_fire
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\timer.cpp
_TEXT	SEGMENT
t$1 = 32
utimer_id$ = 64
?destroy_timer@@YAXH@Z PROC				; destroy_timer

; 80   : void destroy_timer (int utimer_id) {

$LN7:
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 56					; 00000038H

; 81   : 	for (timer_t *t = timer_head; t != NULL; t = t->next) {

	mov	rax, QWORD PTR ?timer_head@@3PEAU_timer_@@EA ; timer_head
	mov	QWORD PTR t$1[rsp], rax
	jmp	SHORT $LN4@destroy_ti
$LN3@destroy_ti:
	mov	rax, QWORD PTR t$1[rsp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR t$1[rsp], rax
$LN4@destroy_ti:
	cmp	QWORD PTR t$1[rsp], 0
	je	SHORT $LN2@destroy_ti

; 82   : 		if (t->utimer_id = utimer_id) {

	mov	rax, QWORD PTR t$1[rsp]
	mov	ecx, DWORD PTR utimer_id$[rsp]
	mov	DWORD PTR [rax+12], ecx
	cmp	DWORD PTR utimer_id$[rsp], 0
	je	SHORT $LN1@destroy_ti

; 83   : 			timer_delete (t);

	mov	rcx, QWORD PTR t$1[rsp]
	call	?timer_delete@@YAXPEAU_timer_@@@Z	; timer_delete

; 84   : 			break;

	jmp	SHORT $LN2@destroy_ti
$LN1@destroy_ti:

; 85   : 		}
; 86   : 	}

	jmp	SHORT $LN3@destroy_ti
$LN2@destroy_ti:

; 87   : 	utimer_id--;

	mov	eax, DWORD PTR utimer_id$[rsp]
	dec	eax
	mov	DWORD PTR utimer_id$[rsp], eax

; 88   : }

	add	rsp, 56					; 00000038H
	ret	0
?destroy_timer@@YAXH@Z ENDP				; destroy_timer
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\timer.cpp
_TEXT	SEGMENT
t$ = 32
interval$ = 64
id$ = 72
?create_timer@@YAHIG@Z PROC				; create_timer

; 63   : int create_timer (uint32_t interval, uint16_t id) {

$LN3:
	mov	WORD PTR [rsp+16], dx
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 56					; 00000038H

; 64   : 	timer_t *t = (timer_t*)pmmngr_alloc();

	call	?pmmngr_alloc@@YAPEAXXZ			; pmmngr_alloc
	mov	QWORD PTR t$[rsp], rax

; 65   : 	t->timer_count = 0;

	mov	rax, QWORD PTR t$[rsp]
	mov	DWORD PTR [rax], 0

; 66   : 	t->task_id = id;

	mov	rax, QWORD PTR t$[rsp]
	movzx	ecx, WORD PTR id$[rsp]
	mov	WORD PTR [rax+8], cx

; 67   : 	t->interval = interval;

	mov	rax, QWORD PTR t$[rsp]
	mov	ecx, DWORD PTR interval$[rsp]
	mov	DWORD PTR [rax+4], ecx

; 68   : 	t->utimer_id = utimer_id;

	mov	rax, QWORD PTR t$[rsp]
	mov	ecx, DWORD PTR ?utimer_id@@3IA		; utimer_id
	mov	DWORD PTR [rax+12], ecx

; 69   : 	timer_insert (t);

	mov	rcx, QWORD PTR t$[rsp]
	call	?timer_insert@@YAXPEAU_timer_@@@Z	; timer_insert

; 70   : 	utimer_id++;

	mov	eax, DWORD PTR ?utimer_id@@3IA		; utimer_id
	inc	eax
	mov	DWORD PTR ?utimer_id@@3IA, eax		; utimer_id

; 71   : 	return utimer_id;

	mov	eax, DWORD PTR ?utimer_id@@3IA		; utimer_id

; 72   : }

	add	rsp, 56					; 00000038H
	ret	0
?create_timer@@YAHIG@Z ENDP				; create_timer
_TEXT	ENDS
END
