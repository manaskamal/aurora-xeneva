; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?_ihd_audio@@3U_hd_audio_@@A			; _ihd_audio
PUBLIC	?rirbrp@@3GA					; rirbrp
PUBLIC	?corbwp@@3GA					; corbwp
_BSS	SEGMENT
?_ihd_audio@@3U_hd_audio_@@A DB 04dH DUP (?)		; _ihd_audio
	ALIGN	4

?rirbrp@@3GA DW	01H DUP (?)				; rirbrp
	ALIGN	4

?corbwp@@3GA DW	01H DUP (?)				; corbwp
_BSS	ENDS
CONST	SEGMENT
sounddata_data DB 080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	081H
	DB	07fH
	DB	081H
	DB	080H
	DB	07fH
	DB	085H
	DB	075H
	DB	06dH
	DB	07dH
	DB	079H
	DB	074H
	DB	084H
	DB	08cH
	DB	07eH
	DB	072H
	DB	072H
	DB	074H
	DB	078H
	DB	072H
	DB	05dH
	DB	049H
	DB	042H
	DB	04cH
	DB	074H
	DB	08eH
	DB	081H
	DB	080H
	DB	081H
	DB	078H
	DB	077H
	DB	076H
	DB	068H
	DB	057H
	DB	07bH
	DB	0b5H
	DB	0c2H
	DB	0c4H
	DB	0c6H
	DB	0bdH
	DB	0b0H
	DB	0a0H
	DB	0a2H
	DB	0acH
	DB	0a4H
	DB	0a4H
	DB	0b7H
	DB	0c5H
	DB	0bcH
	DB	0a8H
	DB	0a7H
	DB	0aaH
	DB	0a5H
	DB	0b9H
	DB	0d1H
	DB	0ceH
	DB	0c4H
	DB	0c4H
	DB	0c7H
	DB	0b9H
	DB	0a2H
	DB	09cH
	DB	0a7H
	DB	0b0H
	DB	0adH
	DB	0aaH
	DB	0a6H
	DB	097H
	DB	08eH
	DB	08cH
	DB	086H
	DB	082H
	DB	07fH
	DB	071H
	DB	056H
	DB	043H
	DB	042H
	DB	045H
	DB	04bH
	DB	049H
	DB	04bH
	DB	056H
	DB	05aH
	DB	05bH
	DB	054H
	DB	041H
	DB	030H
	DB	029H
	DB	01eH
	DB	01aH
	DB	038H
	DB	05bH
	DB	058H
	DB	048H
	DB	046H
	DB	049H
	DB	052H
	DB	059H
	DB	049H
	DB	039H
	DB	03cH
	DB	04aH
	DB	059H
	DB	05cH
	DB	04dH
	DB	03fH
	DB	03cH
	DB	035H
	DB	02fH
	DB	038H
	DB	040H
	DB	03fH
	DB	03dH
	DB	038H
	DB	036H
	DB	034H
	DB	024H
	DB	010H
	DB	016H
	DB	033H
	DB	042H
	DB	043H
	DB	046H
	DB	04cH
	DB	058H
	DB	063H
	DB	05cH
	DB	04dH
	DB	04aH
	DB	055H
	DB	064H
	DB	06aH
	DB	061H
	DB	053H
	DB	055H
	DB	060H
	DB	06cH
	DB	085H
	DB	0a0H
	DB	0a4H
	DB	090H
	DB	071H
	DB	060H
	DB	05bH
	DB	052H
	DB	04aH
	DB	04cH
	DB	059H
	DB	061H
	DB	061H
	DB	061H
	DB	052H
	DB	036H
	DB	028H
	DB	029H
	DB	029H
	DB	02bH
	DB	038H
	DB	04aH
	DB	04eH
	DB	040H
	DB	037H
	DB	040H
	DB	048H
	DB	048H
	DB	054H
	DB	066H
	DB	06cH
	DB	074H
	DB	07eH
	DB	07fH
	DB	07cH
	DB	07fH
	DB	086H
	DB	086H
	DB	08aH
	DB	094H
	DB	098H
	DB	09cH
	DB	0a4H
	DB	0a5H
	DB	0a9H
	DB	0abH
	DB	0a0H
	DB	09cH
	DB	09dH
	DB	098H
	DB	097H
	DB	091H
	DB	085H
	DB	088H
	DB	099H
	DB	0a6H
	DB	0a5H
	DB	0a3H
	DB	0a5H
	DB	0a1H
	DB	09cH
	DB	09eH
	DB	09bH
	DB	093H
	DB	094H
	DB	0a0H
	DB	0b9H
	DB	0d1H
	DB	0d7H
	DB	0dcH
	DB	0dcH
	DB	0ccH
	DB	0c8H
	DB	0d0H
	DB	0cdH
	DB	0c8H
	DB	0caH
	DB	0d1H
	DB	0d6H
	DB	0d5H
	DB	0cdH
	DB	0c6H
	DB	0c2H
	DB	0c2H
	DB	0cbH
	DB	0dbH
	DB	0e7H
	DB	0ebH
	DB	0e6H
	DB	0dbH
	DB	0c8H
	DB	0b8H
	DB	0b1H
	DB	0aaH
	DB	0aaH
	DB	0b1H
	DB	0acH
	DB	0a4H
	DB	0a3H
	DB	09eH
	DB	09cH
	DB	0a0H
	DB	0a3H
	DB	0a1H
	DB	08eH
	DB	074H
	DB	067H
	DB	060H
	DB	059H
	DB	05dH
	DB	065H
	DB	069H
	DB	06fH
	DB	074H
	DB	078H
	DB	06eH
	DB	059H
	DB	050H
	DB	04eH
	DB	04bH
	DB	049H
	DB	050H
	DB	05dH
	DB	05bH
	DB	04dH
	DB	045H
	DB	046H
	DB	04dH
	DB	05bH
	DB	062H
	DB	059H
	DB	057H
	DB	05dH
	DB	05fH
	DB	05fH
	DB	05eH
	DB	061H
	DB	060H
	DB	05bH
	DB	05eH
	DB	063H
	DB	064H
	DB	065H
	DB	05fH
	DB	053H
	DB	04eH
	DB	04fH
	DB	047H
	DB	038H
	DB	029H
	DB	025H
	DB	035H
	DB	040H
	DB	03fH
	DB	048H
	DB	052H
	DB	053H
	DB	052H
	DB	050H
	DB	049H
	DB	043H
	DB	045H
	DB	045H
	DB	042H
	DB	044H
	DB	04fH
	DB	063H
	DB	079H
	DB	08fH
	DB	0a5H
	DB	0b4H
	DB	0aeH
	DB	094H
	DB	083H
	DB	07aH
	DB	070H
	DB	073H
	DB	078H
	DB	079H
	DB	07eH
	DB	07aH
	DB	06cH
	DB	057H
	DB	048H
	DB	047H
	DB	049H
	DB	04fH
	DB	051H
	DB	053H
	DB	056H
	DB	053H
	DB	04dH
	DB	046H
	DB	047H
	DB	055H
	DB	064H
	DB	070H
	DB	076H
	DB	082H
	DB	092H
	DB	09aH
	DB	0a6H
	DB	0aeH
	DB	0acH
	DB	0acH
	DB	0a1H
	DB	093H
	DB	092H
	DB	099H
	DB	09dH
	DB	0a1H
	DB	0a5H
	DB	0a8H
	DB	0aaH
	DB	0a2H
	DB	08aH
	DB	07aH
	DB	079H
	DB	079H
	DB	07bH
	DB	080H
	DB	08aH
	DB	097H
	DB	0a1H
	DB	0a5H
	DB	0a1H
	DB	099H
	DB	096H
	DB	095H
	DB	093H
	DB	088H
	DB	081H
	DB	08cH
	DB	096H
	DB	09cH
	DB	0b0H
	DB	0c2H
	DB	0c1H
	DB	0b3H
	DB	0a8H
	DB	0a7H
	DB	0aeH
	DB	0b9H
	DB	0bcH
	DB	0b5H
	DB	0aeH
	DB	0a4H
	DB	09cH
	DB	09cH
	DB	09bH
	DB	0a3H
	DB	0b9H
	DB	0d2H
	DB	0e0H
	DB	0e5H
	DB	0ebH
	DB	0e9H
	DB	0d7H
	DB	0c3H
	DB	0b0H
	DB	0a8H
	DB	0aaH
	DB	0abH
	DB	0a8H
	DB	0a2H
	DB	0a2H
	DB	0a3H
	DB	0a5H
	DB	0aeH
	DB	0b5H
	DB	0b8H
	DB	0acH
	DB	097H
	DB	087H
	DB	07dH
	DB	07dH
	DB	084H
	DB	08aH
	DB	08bH
	DB	08bH
	DB	08bH
	DB	085H
	DB	079H
	DB	074H
	DB	075H
	DB	073H
	DB	068H
	DB	05eH
	DB	05eH
	DB	05eH
	DB	05cH
	DB	05aH
	DB	052H
	DB	046H
	DB	040H
	DB	045H
	DB	04dH
	DB	052H
	DB	057H
	DB	055H
	DB	055H
	DB	05cH
	DB	061H
	DB	069H
	DB	070H
	DB	06cH
	DB	067H
	DB	06bH
	DB	074H
	DB	07aH
	DB	079H
	DB	073H
	DB	065H
	DB	057H
	DB	050H
	DB	047H
	DB	043H
	DB	048H
	DB	046H
	DB	044H
	DB	04eH
	DB	052H
	DB	04eH
	DB	04eH
	DB	04fH
	DB	051H
	DB	04fH
	DB	044H
	DB	03bH
	DB	039H
	DB	035H
	DB	03cH
	DB	053H
	DB	06aH
	DB	07dH
	DB	092H
	DB	0aeH
	DB	0c0H
	DB	0bcH
	DB	0baH
	DB	0b4H
	DB	0a1H
	DB	09bH
	DB	09dH
	DB	09eH
	DB	09cH
	DB	098H
	DB	094H
	DB	083H
	DB	075H
	DB	06fH
	DB	064H
	DB	061H
	DB	065H
	DB	068H
	DB	06bH
	DB	06eH
	DB	071H
	DB	070H
	DB	06cH
	DB	06aH
	DB	06cH
	DB	07aH
	DB	082H
	DB	08dH
	DB	0a4H
	DB	0afH
	DB	0b4H
	DB	0b9H
	DB	0baH
	DB	0baH
	DB	0b6H
	DB	0aeH
	DB	0a7H
	DB	09bH
	DB	096H
	DB	09aH
	DB	09bH
	DB	08fH
	DB	084H
	DB	088H
	DB	08bH
	DB	07fH
	DB	072H
	DB	06cH
	DB	06bH
	DB	068H
	DB	067H
	DB	072H
	DB	078H
	DB	07cH
	DB	083H
	DB	086H
	DB	084H
	DB	07bH
	DB	073H
	DB	06dH
	DB	065H
	DB	06cH
	DB	082H
	DB	090H
	DB	09aH
	DB	0a1H
	DB	0abH
	DB	0b8H
	DB	0b8H
	DB	0abH
	DB	09bH
	DB	093H
	DB	09bH
	DB	0a5H
	DB	0a5H
	DB	097H
	DB	08eH
	DB	090H
	DB	088H
	DB	089H
	DB	098H
	DB	09eH
	DB	0a2H
	DB	0b1H
	DB	0c8H
	DB	0d1H
	DB	0ceH
	DB	0c9H
	DB	0b5H
	DB	0a3H
	DB	09fH
	DB	09aH
	DB	09aH
	DB	097H
	DB	092H
	DB	0a1H
	DB	0b0H
	DB	0aaH
	DB	0a8H
	DB	0afH
	DB	0b5H
	DB	0b0H
	DB	0a0H
	DB	094H
	DB	08dH
	DB	08aH
	DB	08cH
	DB	08cH
	DB	08bH
	DB	08cH
	DB	094H
	DB	09bH
	DB	098H
	DB	092H
	DB	087H
	DB	07bH
	DB	06fH
	DB	067H
	DB	06eH
	DB	071H
	DB	064H
	DB	051H
	DB	03eH
	DB	037H
	DB	034H
	DB	028H
	DB	021H
	DB	026H
	DB	03cH
	DB	056H
	DB	05fH
	DB	063H
	DB	06aH
	DB	06fH
	DB	071H
	DB	069H
	DB	05bH
	DB	057H
	DB	05eH
	DB	065H
	DB	06aH
	DB	067H
	DB	05aH
	DB	04cH
	DB	043H
	DB	03fH
	DB	044H
	DB	048H
	DB	044H
	DB	03fH
	DB	03aH
	DB	044H
	DB	056H
	DB	052H
	DB	044H
	DB	03cH
	DB	038H
	DB	035H
	DB	02dH
	DB	025H
	DB	028H
	DB	03aH
	DB	04dH
	DB	05cH
	DB	06eH
	DB	080H
	DB	095H
	DB	0a9H
	DB	0aeH
	DB	0a1H
	DB	097H
	DB	090H
	DB	08bH
	DB	08eH
	DB	092H
	DB	092H
	DB	093H
	DB	08eH
	DB	084H
	DB	081H
	DB	07fH
	DB	074H
	DB	063H
	DB	05eH
	DB	067H
	DB	071H
	DB	077H
	DB	07aH
	DB	080H
	DB	085H
	DB	080H
	DB	077H
	DB	076H
	DB	084H
	DB	0a0H
	DB	0c1H
	DB	0d7H
	DB	0ddH
	DB	0deH
	DB	0e2H
	DB	0e0H
	DB	0d9H
	DB	0d3H
	DB	0c8H
	DB	0b5H
	DB	0a6H
	DB	09eH
	DB	098H
	DB	094H
	DB	08bH
	DB	07dH
	DB	076H
	DB	076H
	DB	077H
	DB	07aH
	DB	07bH
	DB	07bH
	DB	07cH
	DB	07eH
	DB	07fH
	DB	07cH
	DB	07fH
	DB	08dH
	DB	08fH
	DB	083H
	DB	076H
	DB	06bH
	DB	06eH
	DB	07fH
	DB	092H
	DB	09fH
	DB	0a3H
	DB	0a5H
	DB	0a6H
	DB	0a4H
	DB	0a4H
	DB	0a0H
	DB	092H
	DB	083H
	DB	07cH
	DB	087H
	DB	093H
	DB	091H
	DB	08cH
	DB	08aH
	DB	082H
	DB	07cH
	DB	082H
	DB	088H
	DB	091H
	DB	0a3H
	DB	0b1H
	DB	0b6H
	DB	0b5H
	DB	0b3H
	DB	0b1H
	DB	0a9H
	DB	09fH
	DB	09aH
	DB	09bH
	DB	0a5H
	DB	0b0H
	DB	0b8H
	DB	0c3H
	DB	0c3H
	DB	0b7H
	DB	0adH
	DB	0a3H
	DB	09cH
	DB	09eH
	DB	0a0H
	DB	09fH
	DB	0a5H
	DB	0abH
	DB	0a4H
	DB	09aH
	DB	09aH
	DB	09fH
	DB	0a7H
	DB	0aaH
	DB	0a7H
	DB	09dH
	DB	08dH
	DB	080H
	DB	078H
	DB	073H
	DB	06fH
	DB	066H
	DB	05fH
	DB	057H
	DB	040H
	DB	032H
	DB	031H
	DB	02dH
	DB	036H
	DB	04dH
	DB	065H
	DB	07bH
	DB	088H
	DB	08bH
	DB	088H
	DB	080H
	DB	077H
	DB	070H
	DB	069H
	DB	065H
	DB	06eH
	DB	07bH
	DB	070H
	DB	05eH
	DB	058H
	DB	04eH
	DB	048H
	DB	053H
	DB	059H
	DB	050H
	DB	045H
	DB	041H
	DB	039H
	DB	03aH
	DB	040H
	DB	03bH
	DB	035H
	DB	027H
	DB	010H
	DB	012H
	DB	024H
	DB	02eH
	DB	042H
	DB	05cH
	DB	06bH
	DB	077H
	DB	087H
	DB	091H
	DB	096H
	DB	0a0H
	DB	09eH
	DB	093H
	DB	091H
	DB	090H
	DB	096H
	DB	0a0H
	DB	099H
	DB	096H
	DB	096H
	DB	08cH
	DB	080H
	DB	078H
	DB	074H
	DB	068H
	DB	05bH
	DB	058H
	DB	05aH
	DB	06aH
	DB	07bH
	DB	07bH
	DB	07bH
	DB	072H
	DB	064H
	DB	069H
	DB	077H
	DB	08eH
	DB	0b5H
	DB	0d3H
	DB	0deH
	DB	0dcH
	DB	0d6H
	DB	0d0H
	DB	0ccH
	DB	0c9H
	DB	0baH
	DB	0abH
	DB	0a6H
	DB	0a2H
	DB	09aH
	DB	08aH
	DB	080H
	DB	078H
	DB	065H
	DB	05dH
	DB	05eH
	DB	067H
	DB	077H
	DB	075H
	DB	06dH
	DB	06dH
	DB	070H
	DB	077H
	DB	079H
	DB	079H
	DB	07cH
	DB	07aH
	DB	077H
	DB	075H
	DB	07cH
	DB	08eH
	DB	09eH
	DB	0aeH
	DB	0b7H
	DB	0adH
	DB	0a8H
	DB	0a5H
	DB	095H
	DB	087H
	DB	084H
	DB	07eH
	DB	077H
	DB	07cH
	DB	07fH
	DB	07dH
	DB	085H
	DB	07eH
	DB	06fH
	DB	074H
	DB	07bH
	DB	07fH
	DB	087H
	DB	091H
	DB	09dH
	DB	0a7H
	DB	0aeH
	DB	0b0H
	DB	0b1H
	DB	0b6H
	DB	0b5H
	DB	0b8H
	DB	0c2H
	DB	0c2H
	DB	0c6H
	DB	0d5H
	DB	0dbH
	DB	0dbH
	DB	0dbH
	DB	0ceH
	DB	0b8H
	DB	0a4H
	DB	099H
	DB	09aH
	DB	0a3H
	DB	0a6H
	DB	0a2H
	DB	0a5H
	DB	0a4H
	DB	09aH
	DB	09aH
	DB	0a0H
	DB	0a1H
	DB	0a5H
	DB	0a6H
	DB	09eH
	DB	092H
	DB	08cH
	DB	082H
	DB	07aH
	DB	079H
	DB	06dH
	DB	05fH
	DB	059H
	DB	04aH
	DB	03dH
	DB	041H
	DB	04aH
	DB	058H
	DB	06eH
	DB	084H
	DB	095H
	DB	09fH
	DB	095H
	DB	07cH
	DB	06bH
	DB	063H
	DB	05bH
	DB	05cH
	DB	062H
	DB	065H
	DB	065H
	DB	05aH
	DB	051H
	DB	054H
	DB	056H
	DB	052H
	DB	052H
	DB	050H
	DB	044H
	DB	03aH
	DB	038H
	DB	035H
	DB	02fH
	DB	02aH
	DB	025H
	DB	023H
	DB	023H
	DB	01eH
	DB	01cH
	DB	01fH
	DB	028H
	DB	038H
	DB	04aH
	DB	05bH
	DB	063H
	DB	062H
	DB	065H
	DB	06eH
	DB	072H
	DB	06fH
	DB	06eH
	DB	077H
	DB	07fH
	DB	085H
	DB	08cH
	DB	08bH
	DB	080H
	DB	076H
	DB	074H
	DB	06dH
	DB	05eH
	DB	057H
	DB	053H
	DB	04fH
	DB	059H
	DB	06eH
	DB	077H
	DB	074H
	DB	075H
	DB	075H
	DB	072H
	DB	075H
	DB	074H
	DB	077H
	DB	089H
	DB	0a4H
	DB	0bfH
	DB	0ccH
	DB	0c0H
	DB	0b4H
	DB	0b4H
	DB	0afH
	DB	0a1H
	DB	098H
	DB	095H
	DB	08bH
	DB	080H
	DB	07aH
	DB	06fH
	DB	062H
	DB	059H
	DB	058H
	DB	05dH
	DB	061H
	DB	05eH
	DB	062H
	DB	068H
	DB	065H
	DB	06bH
	DB	077H
	DB	075H
	DB	079H
	DB	08cH
	DB	098H
	DB	09dH
	DB	0a4H
	DB	0a5H
	DB	0abH
	DB	0b7H
	DB	0beH
	DB	0c2H
	DB	0bfH
	DB	0b6H
	DB	0acH
	DB	0a6H
	DB	09aH
	DB	089H
	DB	084H
	DB	086H
	DB	086H
	DB	08aH
	DB	08dH
	DB	082H
	DB	078H
	DB	07bH
	DB	07bH
	DB	078H
	DB	075H
	DB	06dH
	DB	06eH
	DB	07dH
	DB	096H
	DB	0a8H
	DB	0a4H
	DB	0a3H
	DB	0b3H
	DB	0c4H
	DB	0d2H
	DB	0daH
	DB	0dcH
	DB	0e0H
	DB	0e3H
	DB	0e6H
	DB	0eeH
	DB	0edH
	DB	0daH
	DB	0cdH
	DB	0caH
	DB	0c2H
	DB	0bdH
	DB	0bcH
	DB	0b8H
	DB	0b5H
	DB	0b5H
	DB	0b6H
	DB	0aeH
	DB	0a2H
	DB	0a1H
	DB	0a8H
	DB	0b5H
	DB	0c2H
	DB	0bbH
	DB	0b0H
	DB	0aaH
	DB	09cH
	DB	097H
	DB	08fH
	DB	07fH
	DB	07dH
	DB	07dH
	DB	074H
	DB	067H
	DB	05eH
	DB	05fH
	DB	06bH
	DB	07cH
	DB	091H
	DB	0a1H
	DB	09fH
	DB	097H
	DB	099H
	DB	091H
	DB	07bH
	DB	06aH
	DB	05fH
	DB	055H
	DB	052H
	DB	056H
	DB	057H
	DB	04eH
	DB	04aH
	DB	04fH
	DB	04fH
	DB	049H
	DB	040H
	DB	03aH
	DB	03eH
	DB	03eH
	DB	040H
	DB	03bH
	DB	02bH
	DB	029H
	DB	035H
	DB	03bH
	DB	039H
	DB	033H
	DB	02fH
	DB	031H
	DB	047H
	DB	063H
	DB	06bH
	DB	069H
	DB	062H
	DB	057H
	DB	05dH
	DB	06dH
	DB	075H
	DB	072H
	DB	06eH
	DB	071H
	DB	078H
	DB	084H
	DB	088H
	DB	083H
	DB	081H
	DB	07bH
	DB	070H
	DB	069H
	DB	061H
	DB	05fH
	DB	067H
	DB	073H
	DB	07bH
	DB	07dH
	DB	082H
	DB	08cH
	DB	091H
	DB	091H
	DB	089H
	DB	086H
	DB	08eH
	DB	093H
	DB	09dH
	DB	0b0H
	DB	0bbH
	DB	0b7H
	DB	0abH
	DB	09dH
	DB	08eH
	DB	084H
	DB	084H
	DB	085H
	DB	083H
	DB	07fH
	DB	06fH
	DB	05cH
	DB	054H
	DB	053H
	DB	051H
	DB	048H
	DB	03fH
	DB	03cH
	DB	045H
	DB	05aH
	DB	070H
	DB	07aH
	DB	073H
	DB	070H
	DB	07cH
	DB	083H
	DB	087H
	DB	090H
	DB	091H
	DB	095H
	DB	0a1H
	DB	0aeH
	DB	0b8H
	DB	0b5H
	DB	0abH
	DB	0a0H
	DB	094H
	DB	08fH
	DB	08aH
	DB	07fH
	DB	077H
	DB	077H
	DB	07eH
	DB	082H
	DB	078H
	DB	06bH
	DB	064H
	DB	063H
	DB	068H
	DB	06dH
	DB	069H
	DB	05fH
	DB	05fH
	DB	06aH
	DB	079H
	DB	08aH
	DB	095H
	DB	09eH
	DB	0a5H
	DB	0aaH
	DB	0b7H
	DB	0c8H
	DB	0d6H
	DB	0e3H
	DB	0e9H
	DB	0ecH
	DB	0ecH
	DB	0e1H
	DB	0d6H
	DB	0ceH
	DB	0c2H
	DB	0bcH
	DB	0b5H
	DB	0adH
	DB	0aeH
	DB	0afH
	DB	0b0H
	DB	0aeH
	DB	0a4H
	DB	09fH
	DB	09fH
	DB	099H
	DB	095H
	DB	096H
	DB	09aH
	DB	0a6H
	DB	0acH
	DB	0a0H
	DB	092H
	DB	088H
	DB	082H
	DB	083H
	DB	07fH
	DB	070H
	DB	060H
	DB	05bH
	DB	061H
	DB	06bH
	DB	075H
	DB	07dH
	DB	07dH
	DB	078H
	DB	077H
	DB	078H
	DB	077H
	DB	070H
	DB	060H
	DB	050H
	DB	046H
	DB	041H
	DB	043H
	DB	045H
	DB	03fH
	DB	03fH
	DB	03dH
	DB	030H
	DB	029H
	DB	02eH
	DB	03aH
	DB	049H
	DB	054H
	DB	05bH
	DB	05aH
	DB	055H
	DB	058H
	DB	058H
	DB	054H
	DB	04fH
	DB	04aH
	DB	054H
	DB	05eH
	DB	063H
	DB	074H
	DB	080H
	DB	07aH
	DB	06fH
	DB	068H
	DB	063H
	DB	060H
	DB	065H
	DB	075H
	DB	080H
	DB	07fH
	DB	07cH
	DB	082H
	DB	08bH
	DB	08bH
	DB	08aH
	DB	085H
	DB	073H
	DB	069H
	DB	073H
	DB	083H
	DB	08dH
	DB	093H
	DB	095H
	DB	093H
	DB	095H
	DB	09fH
	DB	0a2H
	DB	09fH
	DB	09eH
	DB	09bH
	DB	09cH
	DB	0a0H
	DB	0a2H
	DB	0a8H
	DB	0a8H
	DB	0a3H
	DB	0a6H
	DB	0a8H
	DB	094H
	DB	079H
	DB	076H
	DB	080H
	DB	07fH
	DB	07fH
	DB	07cH
	DB	06cH
	DB	05dH
	DB	055H
	DB	04cH
	DB	043H
	DB	038H
	DB	03aH
	DB	052H
	DB	066H
	DB	06cH
	DB	07aH
	DB	089H
	DB	087H
	DB	083H
	DB	086H
	DB	085H
	DB	087H
	DB	091H
	DB	09eH
	DB	0a5H
	DB	0a6H
	DB	0a7H
	DB	0a1H
	DB	098H
	DB	097H
	DB	093H
	DB	08cH
	DB	080H
	DB	075H
	DB	074H
	DB	074H
	DB	071H
	DB	075H
	DB	073H
	DB	06cH
	DB	069H
	DB	069H
	DB	063H
	DB	05bH
	DB	062H
	DB	070H
	DB	073H
	DB	078H
	DB	085H
	DB	091H
	DB	09eH
	DB	0abH
	DB	0b6H
	DB	0bcH
	DB	0beH
	DB	0c9H
	DB	0deH
	DB	0ebH
	DB	0efH
	DB	0f1H
	DB	0f5H
	DB	0efH
	DB	0e6H
	DB	0e0H
	DB	0d6H
	DB	0c4H
	DB	0b2H
	DB	0b0H
	DB	0b7H
	DB	0bfH
	DB	0c8H
	DB	0c7H
	DB	0bdH
	DB	0afH
	DB	09fH
	DB	094H
	DB	08cH
	DB	087H
	DB	096H
	DB	0adH
	DB	0b9H
	DB	0b9H
	DB	0b2H
	DB	09dH
	DB	087H
	DB	07dH
	DB	073H
	DB	068H
	DB	065H
	DB	066H
	DB	064H
	DB	05fH
	DB	05dH
	DB	05bH
	DB	051H
	DB	049H
	DB	04aH
	DB	050H
	DB	057H
	DB	04dH
	DB	048H
	DB	048H
	DB	038H
	DB	02dH
	DB	02fH
	DB	02dH
	DB	02aH
	DB	027H
	DB	025H
	DB	01bH
	DB	010H
	DB	018H
	DB	036H
	DB	052H
	DB	05cH
	DB	05bH
	DB	05eH
	DB	05cH
	DB	058H
	DB	054H
	DB	04bH
	DB	049H
	DB	050H
	DB	05dH
	DB	071H
	DB	07fH
	DB	081H
	DB	075H
	DB	06bH
	DB	064H
	DB	05aH
	DB	055H
	DB	052H
	DB	053H
	DB	065H
	DB	07aH
	DB	086H
	DB	08bH
	DB	08dH
	DB	089H
	DB	082H
	DB	07eH
	DB	074H
	DB	06cH
	DB	078H
	DB	091H
	DB	0a8H
	DB	0b0H
	DB	0adH
	DB	0a5H
	DB	097H
	DB	08eH
	DB	090H
	DB	092H
	DB	095H
	DB	096H
	DB	09bH
	DB	0a3H
	DB	09eH
	DB	098H
	DB	090H
	DB	088H
	DB	08cH
	DB	08eH
	DB	088H
	DB	084H
	DB	07eH
	DB	07bH
	DB	07aH
	DB	076H
	DB	078H
	DB	078H
	DB	073H
	DB	073H
	DB	06cH
	DB	05bH
	DB	052H
	DB	055H
	DB	062H
	DB	078H
	DB	090H
	DB	0a3H
	DB	0abH
	DB	09cH
	DB	08aH
	DB	086H
	DB	081H
	DB	07bH
	DB	080H
	DB	08cH
	DB	09bH
	DB	0a6H
	DB	0a9H
	DB	09dH
	DB	08cH
	DB	084H
	DB	07dH
	DB	079H
	DB	079H
	DB	073H
	DB	06eH
	DB	073H
	DB	071H
	DB	065H
	DB	05cH
	DB	057H
	DB	053H
	DB	053H
	DB	056H
	DB	055H
	DB	051H
	DB	058H
	DB	06aH
	DB	078H
	DB	07fH
	DB	07eH
	DB	079H
	DB	07eH
	DB	090H
	DB	0a1H
	DB	0a7H
	DB	0a6H
	DB	0adH
	DB	0c4H
	DB	0d9H
	DB	0e0H
	DB	0e2H
	DB	0dcH
	DB	0d3H
	DB	0d5H
	DB	0d9H
	DB	0d0H
	DB	0c8H
	DB	0c5H
	DB	0bbH
	DB	0b8H
	DB	0beH
	DB	0c2H
	DB	0c6H
	DB	0c7H
	DB	0baH
	DB	0aeH
	DB	0a7H
	DB	0a0H
	DB	0a0H
	DB	0adH
	DB	0bcH
	DB	0c6H
	DB	0ceH
	DB	0c8H
	DB	0b5H
	DB	0a9H
	DB	098H
	DB	082H
	DB	077H
	DB	06eH
	DB	06eH
	DB	07dH
	DB	07eH
	DB	073H
	DB	066H
	DB	053H
	DB	044H
	DB	042H
	DB	048H
	DB	04bH
	DB	04fH
	DB	04bH
	DB	03dH
	DB	033H
	DB	031H
	DB	02bH
	DB	026H
	DB	028H
	DB	029H
	DB	023H
	DB	020H
	DB	027H
	DB	030H
	DB	03bH
	DB	048H
	DB	057H
	DB	062H
	DB	05bH
	DB	057H
	DB	05cH
	DB	054H
	DB	047H
	DB	042H
	DB	049H
	DB	05bH
	DB	06eH
	DB	07bH
	DB	07fH
	DB	071H
	DB	05fH
	DB	058H
	DB	052H
	DB	04cH
	DB	04cH
	DB	054H
	DB	060H
	DB	06dH
	DB	077H
	DB	07bH
	DB	081H
	DB	07fH
	DB	077H
	DB	079H
	DB	07aH
	DB	07eH
	DB	08bH
	DB	094H
	DB	0a2H
	DB	0adH
	DB	0a9H
	DB	09eH
	DB	08eH
	DB	07fH
	DB	079H
	DB	079H
	DB	07cH
	DB	07dH
	DB	086H
	DB	095H
	DB	09aH
	DB	09eH
	DB	091H
	DB	077H
	DB	072H
	DB	077H
	DB	077H
	DB	080H
	DB	08cH
	DB	08eH
	DB	08aH
	DB	082H
	DB	07bH
	DB	07dH
	DB	080H
	DB	07dH
	DB	080H
	DB	089H
	DB	08dH
	DB	093H
	DB	09dH
	DB	09cH
	DB	095H
	DB	09eH
	DB	0aeH
	DB	0abH
	DB	099H
	DB	08bH
	DB	07fH
	DB	07bH
	DB	082H
	DB	088H
	DB	097H
	DB	0a6H
	DB	0a6H
	DB	09eH
	DB	090H
	DB	082H
	DB	07aH
	DB	071H
	DB	06eH
	DB	073H
	DB	077H
	DB	07aH
	DB	07aH
	DB	070H
	DB	060H
	DB	055H
	DB	052H
	DB	04fH
	DB	052H
	DB	05fH
	DB	06cH
	DB	070H
	DB	06bH
	DB	067H
	DB	06fH
	DB	07eH
	DB	07dH
	DB	071H
	DB	076H
	DB	081H
	DB	088H
	DB	095H
	DB	0a2H
	DB	0adH
	DB	0b8H
	DB	0c2H
	DB	0c6H
	DB	0baH
	DB	0b3H
	DB	0bfH
	DB	0c5H
	DB	0beH
	DB	0beH
	DB	0c6H
	DB	0c9H
	DB	0c1H
	DB	0bbH
	DB	0b9H
	DB	0bcH
	DB	0c5H
	DB	0caH
	DB	0ceH
	DB	0d4H
	DB	0d5H
	DB	0cfH
	DB	0c6H
	DB	0bfH
	DB	0c1H
	DB	0cbH
	DB	0cbH
	DB	0bfH
	DB	0b2H
	DB	0a0H
	DB	089H
	DB	07bH
	DB	074H
	DB	070H
	DB	078H
	DB	081H
	DB	07aH
	DB	067H
	DB	058H
	DB	050H
	DB	03fH
	DB	02fH
	DB	02eH
	DB	038H
	DB	041H
	DB	036H
	DB	029H
	DB	02aH
	DB	02dH
	DB	02eH
	DB	02fH
	DB	036H
	DB	040H
	DB	03cH
	DB	03dH
	DB	04dH
	DB	04fH
	DB	049H
	DB	05aH
	DB	06fH
	DB	06dH
	DB	062H
	DB	064H
	DB	066H
	DB	05dH
	DB	058H
	DB	05fH
	DB	074H
	DB	089H
	DB	08dH
	DB	08cH
	DB	089H
	DB	07aH
	DB	068H
	DB	061H
	DB	063H
	DB	065H
	DB	06aH
	DB	06eH
	DB	073H
	DB	07fH
	DB	082H
	DB	081H
	DB	08bH
	DB	094H
	DB	092H
	DB	08fH
	DB	093H
	DB	090H
	DB	08bH
	DB	095H
	DB	0a8H
	DB	0acH
	DB	09bH
	DB	08bH
	DB	081H
	DB	075H
	DB	06bH
	DB	06eH
	DB	079H
	DB	085H
	DB	090H
	DB	099H
	DB	09aH
	DB	08aH
	DB	076H
	DB	067H
	DB	05eH
	DB	060H
	DB	070H
	DB	088H
	DB	096H
	DB	08fH
	DB	081H
	DB	07dH
	DB	081H
	DB	085H
	DB	091H
	DB	09eH
	DB	09cH
	DB	095H
	DB	097H
	DB	09cH
	DB	0a0H
	DB	0a2H
	DB	0a0H
	DB	099H
	DB	08fH
	DB	083H
	DB	075H
	DB	06bH
	DB	06bH
	DB	06eH
	DB	071H
	DB	07bH
	DB	086H
	DB	083H
	DB	076H
	DB	06fH
	DB	070H
	DB	068H
	DB	05aH
	DB	063H
	DB	076H
	DB	079H
	DB	07bH
	DB	083H
	DB	079H
	DB	068H
	DB	065H
	DB	070H
	DB	07fH
	DB	084H
	DB	07fH
	DB	07eH
	DB	080H
	DB	07dH
	DB	076H
	DB	07dH
	DB	085H
	DB	07bH
	DB	06fH
	DB	06bH
	DB	071H
	DB	07cH
	DB	085H
	DB	096H
	DB	0aaH
	DB	0b3H
	DB	0b5H
	DB	0b7H
	DB	0b8H
	DB	0b4H
	DB	0b0H
	DB	0b6H
	DB	0bcH
	DB	0c1H
	DB	0c6H
	DB	0cdH
	DB	0d5H
	DB	0d3H
	DB	0d1H
	DB	0d7H
	DB	0deH
	DB	0e2H
	DB	0e1H
	DB	0e4H
	DB	0e8H
	DB	0e0H
	DB	0ccH
	DB	0beH
	DB	0c0H
	DB	0c7H
	DB	0c4H
	DB	0c1H
	DB	0baH
	DB	0a8H
	DB	097H
	DB	088H
	DB	07eH
	DB	07dH
	DB	07eH
	DB	07bH
	DB	070H
	DB	05fH
	DB	04dH
	DB	040H
	DB	035H
	DB	028H
	DB	020H
	DB	022H
	DB	02bH
	DB	02fH
	DB	02cH
	DB	028H
	DB	02aH
	DB	030H
	DB	032H
	DB	030H
	DB	033H
	DB	032H
	DB	02fH
	DB	034H
	DB	039H
	DB	03fH
	DB	04bH
	DB	051H
	DB	058H
	DB	05fH
	DB	060H
	DB	062H
	DB	061H
	DB	058H
	DB	059H
	DB	06fH
	DB	089H
	DB	094H
	DB	095H
	DB	090H
	DB	07dH
	DB	06dH
	DB	065H
	DB	065H
	DB	06dH
	DB	078H
	DB	07bH
	DB	07cH
	DB	087H
	DB	08eH
	DB	08fH
	DB	099H
	DB	0a0H
	DB	09cH
	DB	098H
	DB	094H
	DB	08dH
	DB	087H
	DB	083H
	DB	080H
	DB	081H
	DB	07eH
	DB	071H
	DB	069H
	DB	06cH
	DB	065H
	DB	058H
	DB	05bH
	DB	063H
	DB	068H
	DB	072H
	DB	076H
	DB	074H
	DB	072H
	DB	062H
	DB	04eH
	DB	04eH
	DB	05bH
	DB	065H
	DB	077H
	DB	086H
	DB	087H
	DB	086H
	DB	087H
	DB	08eH
	DB	09dH
	DB	0a2H
	DB	09bH
	DB	096H
	DB	093H
	DB	08cH
	DB	08cH
	DB	097H
	DB	09aH
	DB	091H
	DB	085H
	DB	077H
	DB	073H
	DB	074H
	DB	066H
	DB	05bH
	DB	063H
	DB	06aH
	DB	06aH
	DB	06dH
	DB	068H
	DB	05cH
	DB	059H
	DB	057H
	DB	052H
	DB	055H
	DB	05bH
	DB	066H
	DB	07bH
	DB	086H
	DB	083H
	DB	081H
	DB	079H
	DB	074H
	DB	07eH
	DB	085H
	DB	084H
	DB	07fH
	DB	079H
	DB	071H
	DB	072H
	DB	079H
	DB	07cH
	DB	07bH
	DB	076H
	DB	06eH
	DB	071H
	DB	077H
	DB	072H
	DB	075H
	DB	089H
	DB	099H
	DB	09eH
	DB	0a0H
	DB	09fH
	DB	09eH
	DB	09eH
	DB	09cH
	DB	098H
	DB	09aH
	DB	0a3H
	DB	0b0H
	DB	0c1H
	DB	0d2H
	DB	0d5H
	DB	0ceH
	DB	0cdH
	DB	0d1H
	DB	0d6H
	DB	0dfH
	DB	0e2H
	DB	0dcH
	DB	0d9H
	DB	0d1H
	DB	0c7H
	DB	0c6H
	DB	0c0H
	DB	0b6H
	DB	0b2H
	DB	0b2H
	DB	0aeH
	DB	0a1H
	DB	097H
	DB	099H
	DB	096H
	DB	091H
	DB	088H
	DB	077H
	DB	068H
	DB	056H
	DB	044H
	DB	03cH
	DB	031H
	DB	02cH
	DB	034H
	DB	03dH
	DB	044H
	DB	045H
	DB	03aH
	DB	034H
	DB	038H
	DB	039H
	DB	039H
	DB	03cH
	DB	038H
	DB	031H
	DB	033H
	DB	03bH
	DB	045H
	DB	04aH
	DB	050H
	DB	05fH
	DB	073H
	DB	082H
	DB	086H
	DB	085H
	DB	086H
	DB	086H
	DB	091H
	DB	0a8H
	DB	0adH
	DB	0a8H
	DB	0a8H
	DB	0a2H
	DB	095H
	DB	091H
	DB	093H
	DB	09aH
	DB	0a8H
	DB	0b2H
	DB	0b7H
	DB	0b8H
	DB	0aeH
	DB	0a6H
	DB	0a8H
	DB	0afH
	DB	0aeH
	DB	0a0H
	DB	09aH
	DB	098H
	DB	08aH
	DB	083H
	DB	085H
	DB	07eH
	DB	06fH
	DB	064H
	DB	05eH
	DB	061H
	DB	05dH
	DB	056H
	DB	061H
	DB	069H
	DB	065H
	DB	066H
	DB	06bH
	DB	06cH
	DB	066H
	DB	05cH
	DB	057H
	DB	059H
	DB	061H
	DB	075H
	DB	095H
	DB	0aaH
	DB	0a2H
	DB	094H
	DB	096H
	DB	09fH
	DB	0a8H
	DB	0b0H
	DB	0b0H
	DB	0a5H
	DB	093H
	DB	085H
	DB	083H
	DB	089H
	DB	08aH
	DB	082H
	DB	07aH
	DB	077H
	DB	075H
	DB	072H
	DB	06eH
	DB	068H
	DB	068H
	DB	06bH
	DB	065H
	DB	060H
	DB	05bH
	DB	052H
	DB	051H
	DB	053H
	DB	04fH
	DB	052H
	DB	064H
	DB	07aH
	DB	08dH
	DB	093H
	DB	08cH
	DB	084H
	DB	079H
	DB	071H
	DB	077H
	DB	07dH
	DB	07aH
	DB	06fH
	DB	067H
	DB	06cH
	DB	071H
	DB	075H
	DB	07cH
	DB	078H
	DB	074H
	DB	077H
	DB	075H
	DB	080H
	DB	08eH
	DB	08dH
	DB	094H
	DB	09fH
	DB	0a1H
	DB	0a3H
	DB	0a9H
	DB	0abH
	DB	0abH
	DB	0b0H
	DB	0b7H
	DB	0baH
	DB	0b5H
	DB	0bbH
	DB	0caH
	DB	0cdH
	DB	0c6H
	DB	0c0H
	DB	0c0H
	DB	0c1H
	DB	0c3H
	DB	0cbH
	DB	0ccH
	DB	0bfH
	DB	0b8H
	DB	0b6H
	DB	0b3H
	DB	0bdH
	DB	0c3H
	DB	0b9H
	DB	0b4H
	DB	0b0H
	DB	0a5H
	DB	09fH
	DB	0a1H
	DB	0a2H
	DB	09bH
	DB	08eH
	DB	082H
	DB	079H
	DB	068H
	DB	04eH
	DB	042H
	DB	041H
	DB	02eH
	DB	022H
	DB	033H
	DB	041H
	DB	042H
	DB	03eH
	DB	030H
	DB	023H
	DB	022H
	DB	024H
	DB	023H
	DB	02aH
	DB	031H
	DB	031H
	DB	035H
	DB	039H
	DB	039H
	DB	042H
	DB	04cH
	DB	054H
	DB	05fH
	DB	06dH
	DB	078H
	DB	082H
	DB	089H
	DB	081H
	DB	07aH
	DB	085H
	DB	08fH
	DB	094H
	DB	098H
	DB	098H
	DB	09dH
	DB	0a5H
	DB	0a4H
	DB	0a8H
	DB	0b7H
	DB	0baH
	DB	0b5H
	DB	0bcH
	DB	0bdH
	DB	0b0H
	DB	0abH
	DB	0adH
	DB	0adH
	DB	0a5H
	DB	095H
	DB	08cH
	DB	08bH
	DB	08bH
	DB	086H
	DB	07fH
	DB	076H
	DB	05fH
	DB	04eH
	DB	052H
	DB	052H
	DB	04bH
	DB	04cH
	DB	045H
	DB	040H
	DB	04eH
	DB	05aH
	DB	055H
	DB	050H
	DB	04fH
	DB	053H
	DB	062H
	DB	075H
	DB	083H
	DB	091H
	DB	099H
	DB	099H
	DB	099H
	DB	097H
	DB	097H
	DB	09bH
	DB	09dH
	DB	098H
	DB	092H
	DB	092H
	DB	08dH
	DB	085H
	DB	088H
	DB	086H
	DB	07dH
	DB	07bH
	DB	079H
	DB	07bH
	DB	088H
	DB	089H
	DB	075H
	DB	066H
	DB	05eH
	DB	054H
	DB	05aH
	DB	062H
	DB	057H
	DB	052H
	DB	05dH
	DB	068H
	DB	06cH
	DB	073H
	DB	082H
	DB	08aH
	DB	087H
	DB	080H
	DB	07dH
	DB	07aH
	DB	072H
	DB	071H
	DB	070H
	DB	065H
	DB	063H
	DB	06bH
	DB	06dH
	DB	06eH
	DB	072H
	DB	075H
	DB	071H
	DB	067H
	DB	066H
	DB	076H
	DB	08dH
	DB	097H
	DB	092H
	DB	090H
	DB	097H
	DB	0a5H
	DB	0b5H
	DB	0b5H
	DB	0b0H
	DB	0b5H
	DB	0b3H
	DB	0b1H
	DB	0b9H
	DB	0beH
	DB	0bcH
	DB	0b9H
	DB	0b6H
	DB	0aeH
	DB	0acH
	DB	0afH
	DB	0acH
	DB	0b1H
	DB	0b9H
	DB	0bbH
	DB	0bbH
	DB	0b7H
	DB	0b5H
	DB	0c0H
	DB	0cbH
	DB	0caH
	DB	0b9H
	DB	0afH
	DB	0bcH
	DB	0c8H
	DB	0c8H
	DB	0beH
	DB	0afH
	DB	0a2H
	DB	098H
	DB	092H
	DB	08dH
	DB	080H
	DB	070H
	DB	068H
	DB	05eH
	DB	04cH
	DB	045H
	DB	04dH
	DB	04eH
	DB	049H
	DB	03fH
	DB	033H
	DB	024H
	DB	018H
	DB	01cH
	DB	027H
	DB	02fH
	DB	036H
	DB	037H
	DB	036H
	DB	03bH
	DB	043H
	DB	04aH
	DB	04aH
	DB	049H
	DB	056H
	DB	067H
	DB	071H
	DB	079H
	DB	07eH
	DB	07dH
	DB	07fH
	DB	088H
	DB	08eH
	DB	091H
	DB	09bH
	DB	0a9H
	DB	0b7H
	DB	0b9H
	DB	0b2H
	DB	0aaH
	DB	0a6H
	DB	0acH
	DB	0b7H
	DB	0beH
	DB	0bbH
	DB	0acH
	DB	0a6H
	DB	0acH
	DB	0a7H
	DB	0a1H
	DB	09eH
	DB	091H
	DB	086H
	DB	07eH
	DB	073H
	DB	06cH
	DB	05eH
	DB	04aH
	DB	042H
	DB	043H
	DB	03fH
	DB	03aH
	DB	03dH
	DB	03eH
	DB	041H
	DB	04aH
	DB	049H
	DB	042H
	DB	045H
	DB	055H
	DB	067H
	DB	075H
	DB	083H
	DB	089H
	DB	08bH
	DB	094H
	DB	098H
	DB	092H
	DB	08aH
	DB	08aH
	DB	090H
	DB	08cH
	DB	085H
	DB	08cH
	DB	096H
	DB	08cH
	DB	080H
	DB	081H
	DB	07cH
	DB	074H
	DB	076H
	DB	079H
	DB	07cH
	DB	080H
	DB	080H
	DB	074H
	DB	060H
	DB	056H
	DB	05bH
	DB	069H
	DB	074H
	DB	073H
	DB	075H
	DB	07fH
	DB	080H
	DB	082H
	DB	08cH
	DB	093H
	DB	091H
	DB	08aH
	DB	07bH
	DB	076H
	DB	07eH
	DB	07dH
	DB	070H
	DB	066H
	DB	065H
	DB	06aH
	DB	070H
	DB	06eH
	DB	070H
	DB	071H
	DB	066H
	DB	05cH
	DB	05dH
	DB	066H
	DB	075H
	DB	08dH
	DB	0a4H
	DB	0a5H
	DB	09bH
	DB	0a1H
	DB	0adH
	DB	0b0H
	DB	0b2H
	DB	0b5H
	DB	0c0H
	DB	0c6H
	DB	0bcH
	DB	0b5H
	DB	0b9H
	DB	0b7H
	DB	0acH
	DB	0a5H
	DB	09fH
	DB	09eH
	DB	0a4H
	DB	0a3H
	DB	09eH
	DB	0a4H
	DB	0abH
	DB	0a9H
	DB	0a4H
	DB	0a4H
	DB	0b0H
	DB	0beH
	DB	0c2H
	DB	0b9H
	DB	0adH
	DB	0a9H
	DB	0b3H
	DB	0bdH
	DB	0baH
	DB	0b3H
	DB	0a9H
	DB	09dH
	DB	08dH
	DB	07fH
	DB	07eH
	DB	07cH
	DB	06dH
	DB	05dH
	DB	050H
	DB	04aH
	DB	04eH
	DB	04dH
	DB	041H
	DB	02eH
	DB	021H
	DB	020H
	DB	022H
	DB	021H
	DB	026H
	DB	033H
	DB	03eH
	DB	03aH
	DB	034H
	DB	03bH
	DB	044H
	DB	045H
	DB	044H
	DB	04fH
	DB	060H
	DB	06dH
	DB	075H
	DB	078H
	DB	07fH
	DB	086H
	DB	08bH
	DB	094H
	DB	094H
	DB	098H
	DB	0afH
	DB	0bfH
	DB	0beH
	DB	0beH
	DB	0bfH
	DB	0b7H
	DB	0a6H
	DB	0a0H
	DB	0abH
	DB	0bdH
	DB	0c7H
	DB	0bdH
	DB	0a9H
	DB	09dH
	DB	0a1H
	DB	0abH
	DB	0adH
	DB	0a6H
	DB	09bH
	DB	090H
	DB	081H
	DB	070H
	DB	06bH
	DB	06bH
	DB	060H
	DB	056H
	DB	058H
	DB	056H
	DB	053H
	DB	052H
	DB	053H
	DB	059H
	DB	058H
	DB	059H
	DB	060H
	DB	05fH
	DB	06aH
	DB	085H
	DB	098H
	DB	095H
	DB	082H
	DB	07bH
	DB	07fH
	DB	07aH
	DB	07bH
	DB	083H
	DB	084H
	DB	084H
	DB	082H
	DB	07cH
	DB	078H
	DB	078H
	DB	079H
	DB	07bH
	DB	07bH
	DB	07bH
	DB	080H
	DB	084H
	DB	083H
	DB	084H
	DB	082H
	DB	076H
	DB	067H
	DB	061H
	DB	071H
	DB	08eH
	DB	0a3H
	DB	0a4H
	DB	095H
	DB	084H
	DB	07fH
	DB	085H
	DB	08eH
	DB	092H
	DB	092H
	DB	089H
	DB	074H
	DB	066H
	DB	067H
	DB	067H
	DB	061H
	DB	05fH
	DB	060H
	DB	064H
	DB	06cH
	DB	06aH
	DB	062H
	DB	061H
	DB	05eH
	DB	057H
	DB	050H
	DB	052H
	DB	066H
	DB	08aH
	DB	0a7H
	DB	0abH
	DB	09fH
	DB	097H
	DB	09aH
	DB	0a8H
	DB	0b7H
	DB	0bdH
	DB	0bcH
	DB	0bcH
	DB	0b6H
	DB	0acH
	DB	0a8H
	DB	0a9H
	DB	0a6H
	DB	09aH
	DB	094H
	DB	099H
	DB	09cH
	DB	09bH
	DB	09aH
	DB	09fH
	DB	0aaH
	DB	0a9H
	DB	09cH
	DB	097H
	DB	0a7H
	DB	0c1H
	DB	0d0H
	DB	0c7H
	DB	0b1H
	DB	0a9H
	DB	0b1H
	DB	0bcH
	DB	0c1H
	DB	0bfH
	DB	0b7H
	DB	0aaH
	DB	09bH
	DB	08bH
	DB	078H
	DB	06eH
	DB	069H
	DB	060H
	DB	059H
	DB	053H
	DB	04bH
	DB	047H
	DB	03cH
	DB	02aH
	DB	020H
	DB	01cH
	DB	016H
	DB	015H
	DB	01eH
	DB	033H
	DB	047H
	DB	046H
	DB	035H
	DB	02aH
	DB	02aH
	DB	033H
	DB	03fH
	DB	04bH
	DB	05fH
	DB	074H
	DB	07fH
	DB	080H
	DB	07dH
	DB	084H
	DB	091H
	DB	099H
	DB	0a3H
	DB	0abH
	DB	0b0H
	DB	0b8H
	DB	0c1H
	DB	0c4H
	DB	0beH
	DB	0b7H
	DB	0aeH
	DB	09fH
	DB	09dH
	DB	0adH
	DB	0b9H
	DB	0b7H
	DB	0aaH
	DB	0a0H
	DB	0a5H
	DB	0b1H
	DB	0b8H
	DB	0b0H
	DB	09dH
	DB	08bH
	DB	07dH
	DB	06bH
	DB	060H
	DB	061H
	DB	061H
	DB	062H
	DB	064H
	DB	05fH
	DB	05dH
	DB	061H
	DB	063H
	DB	067H
	DB	064H
	DB	059H
	DB	059H
	DB	062H
	DB	071H
	DB	089H
	DB	094H
	DB	091H
	DB	081H
	DB	06aH
	DB	061H
	DB	060H
	DB	061H
	DB	066H
	DB	06cH
	DB	076H
	DB	07cH
	DB	077H
	DB	070H
	DB	06eH
	DB	06eH
	DB	074H
	DB	07eH
	DB	07dH
	DB	07dH
	DB	08bH
	DB	097H
	DB	099H
	DB	096H
	DB	089H
	DB	07eH
	DB	080H
	DB	08aH
	DB	09cH
	DB	0a8H
	DB	0a9H
	DB	09fH
	DB	096H
	DB	091H
	DB	08dH
	DB	08dH
	DB	091H
	DB	08cH
	DB	07dH
	DB	06dH
	DB	05fH
	DB	058H
	DB	056H
	DB	056H
	DB	05cH
	DB	060H
	DB	061H
	DB	063H
	DB	063H
	DB	061H
	DB	05cH
	DB	050H
	DB	043H
	DB	049H
	DB	060H
	DB	075H
	DB	08bH
	DB	09dH
	DB	0a2H
	DB	0a4H
	DB	0a0H
	DB	09eH
	DB	0a4H
	DB	0a7H
	DB	0a9H
	DB	0acH
	DB	0abH
	DB	0a7H
	DB	0a0H
	DB	09aH
	DB	094H
	DB	090H
	DB	08eH
	DB	08eH
	DB	092H
	DB	097H
	DB	099H
	DB	0a0H
	DB	0acH
	DB	0acH
	DB	0a8H
	DB	0acH
	DB	0adH
	DB	0b3H
	DB	0c0H
	DB	0c0H
	DB	0bcH
	DB	0baH
	DB	0b2H
	DB	0b6H
	DB	0c1H
	DB	0c2H
	DB	0c2H
	DB	0b9H
	DB	0a9H
	DB	098H
	DB	085H
	DB	073H
	DB	062H
	DB	056H
	DB	054H
	DB	050H
	DB	049H
	DB	043H
	DB	038H
	DB	02bH
	DB	025H
	DB	01fH
	DB	018H
	DB	01bH
	DB	020H
	DB	022H
	DB	033H
	DB	044H
	DB	041H
	DB	038H
	DB	036H
	DB	039H
	DB	03fH
	DB	04aH
	DB	05bH
	DB	06aH
	DB	07bH
	DB	08dH
	DB	09aH
	DB	0a4H
	DB	0aaH
	DB	0aaH
	DB	0adH
	DB	0baH
	DB	0c1H
	DB	0c1H
	DB	0c7H
	DB	0c8H
	DB	0c4H
	DB	0bbH
	DB	0acH
	DB	0a3H
	DB	09eH
	DB	09bH
	DB	0a7H
	DB	0aeH
	DB	0a8H
	DB	0a6H
	DB	0a6H
	DB	0a5H
	DB	0aeH
	DB	0b4H
	DB	0a7H
	DB	097H
	DB	08fH
	DB	083H
	DB	073H
	DB	06fH
	DB	06eH
	DB	06aH
	DB	06aH
	DB	074H
	DB	07eH
	DB	081H
	DB	07aH
	DB	06fH
	DB	068H
	DB	05fH
	DB	055H
	DB	05fH
	DB	071H
	DB	075H
	DB	07aH
	DB	07dH
	DB	074H
	DB	066H
	DB	056H
	DB	04cH
	DB	04fH
	DB	055H
	DB	056H
	DB	058H
	DB	05dH
	DB	05dH
	DB	05fH
	DB	065H
	DB	062H
	DB	063H
	DB	06dH
	DB	073H
	DB	078H
	DB	082H
	DB	088H
	DB	08aH
	DB	08cH
	DB	090H
	DB	093H
	DB	094H
	DB	092H
	DB	090H
	DB	099H
	DB	0a0H
	DB	09fH
	DB	09bH
	DB	092H
	DB	08aH
	DB	089H
	DB	087H
	DB	07fH
	DB	076H
	DB	070H
	DB	069H
	DB	061H
	DB	05dH
	DB	057H
	DB	04fH
	DB	053H
	DB	061H
	DB	064H
	DB	05aH
	DB	057H
	DB	05bH
	DB	053H
	DB	03fH
	DB	03eH
	DB	04eH
	DB	05aH
	DB	071H
	DB	096H
	DB	0acH
	DB	0a9H
	DB	09fH
	DB	099H
	DB	09aH
	DB	0a0H
	DB	0a5H
	DB	0a6H
	DB	0a2H
	DB	09eH
	DB	09cH
	DB	09cH
	DB	09dH
	DB	09aH
	DB	09bH
	DB	0a1H
	DB	0a2H
	DB	0a2H
	DB	0a9H
	DB	0a9H
	DB	0a8H
	DB	0afH
	DB	0b2H
	DB	0b4H
	DB	0c2H
	DB	0cdH
	DB	0caH
	DB	0c5H
	DB	0c7H
	DB	0c6H
	DB	0bcH
	DB	0b2H
	DB	0b6H
	DB	0caH
	DB	0d2H
	DB	0beH
	DB	0a8H
	DB	09eH
	DB	08dH
	DB	07bH
	DB	076H
	DB	06eH
	DB	05bH
	DB	04dH
	DB	04cH
	DB	046H
	DB	038H
	DB	033H
	DB	032H
	DB	028H
	DB	01eH
	DB	01cH
	DB	020H
	DB	021H
	DB	022H
	DB	032H
	DB	040H
	DB	03eH
	DB	045H
	DB	050H
	DB	04bH
	DB	04eH
	DB	05eH
	DB	069H
	DB	079H
	DB	093H
	DB	0afH
	DB	0c4H
	DB	0c6H
	DB	0c5H
	DB	0ceH
	DB	0d6H
	DB	0d9H
	DB	0daH
	DB	0d8H
	DB	0d2H
	DB	0c7H
	DB	0bfH
	DB	0afH
	DB	0a0H
	DB	0a5H
	DB	0acH
	DB	0a5H
	DB	0a4H
	DB	0abH
	DB	0acH
	DB	0a5H
	DB	09eH
	DB	09dH
	DB	0a1H
	DB	09eH
	DB	098H
	DB	097H
	DB	08eH
	DB	07cH
	DB	075H
	DB	076H
	DB	073H
	DB	07aH
	DB	08dH
	DB	09aH
	DB	094H
	DB	083H
	DB	078H
	DB	070H
	DB	069H
	DB	066H
	DB	06cH
	DB	070H
	DB	068H
	DB	064H
	DB	069H
	DB	068H
	DB	062H
	DB	059H
	DB	04cH
	DB	03dH
	DB	035H
	DB	03aH
	DB	03eH
	DB	038H
	DB	038H
	DB	042H
	DB	048H
	DB	051H
	DB	062H
	DB	069H
	DB	065H
	DB	06bH
	DB	07dH
	DB	086H
	DB	087H
	DB	087H
	DB	086H
	DB	088H
	DB	08bH
	DB	08eH
	DB	08dH
	DB	08aH
	DB	08cH
	DB	08fH
	DB	08bH
	DB	080H
	DB	076H
	DB	072H
	DB	06cH
	DB	065H
	DB	065H
	DB	06aH
	DB	067H
	DB	059H
	DB	04bH
	DB	042H
	DB	03dH
	DB	043H
	DB	053H
	DB	05fH
	DB	05eH
	DB	057H
	DB	04cH
	DB	03dH
	DB	031H
	DB	033H
	DB	03eH
	DB	048H
	DB	059H
	DB	073H
	DB	08bH
	DB	095H
	DB	092H
	DB	08dH
	DB	08bH
	DB	08bH
	DB	08dH
	DB	08bH
	DB	083H
	DB	081H
	DB	084H
	DB	08aH
	DB	08fH
	DB	094H
	DB	09cH
	DB	0a3H
	DB	0a4H
	DB	0a6H
	DB	0aeH
	DB	0b2H
	DB	0acH
	DB	0aaH
	DB	0b2H
	DB	0c2H
	DB	0d9H
	DB	0e3H
	DB	0dcH
	DB	0d9H
	DB	0e1H
	DB	0e5H
	DB	0e1H
	DB	0dbH
	DB	0d5H
	DB	0d1H
	DB	0ccH
	DB	0c8H
	DB	0c2H
	DB	0b5H
	DB	0a9H
	DB	099H
	DB	084H
	DB	079H
	DB	06eH
	DB	064H
	DB	062H
	DB	064H
	DB	067H
	DB	05eH
	DB	04aH
	DB	03bH
	DB	035H
	DB	031H
	DB	02fH
	DB	02fH
	DB	033H
	DB	039H
	DB	049H
	DB	05dH
	DB	062H
	DB	05eH
	DB	05bH
	DB	05fH
	DB	069H
	DB	076H
	DB	08dH
	DB	0a6H
	DB	0b7H
	DB	0bdH
	DB	0c0H
	DB	0c8H
	DB	0c8H
	DB	0ccH
	DB	0d6H
	DB	0d1H
	DB	0ccH
	DB	0c5H
	DB	0b5H
	DB	0aeH
	DB	0a5H
	DB	09cH
	DB	0a0H
	DB	09eH
	DB	097H
	DB	099H
	DB	09cH
	DB	09bH
	DB	09eH
	DB	09dH
	DB	09cH
	DB	0a4H
	DB	0a5H
	DB	0a3H
	DB	0a3H
	DB	097H
	DB	08bH
	DB	08cH
	DB	08dH
	DB	091H
	DB	097H
	DB	09bH
	DB	09eH
	DB	0a0H
	DB	0a2H
	DB	097H
	DB	07fH
	DB	06fH
	DB	070H
	DB	072H
	DB	06eH
	DB	064H
	DB	05aH
	DB	05aH
	DB	062H
	DB	064H
	DB	05eH
	DB	054H
	DB	046H
	DB	03bH
	DB	032H
	DB	02dH
	DB	02fH
	DB	033H
	DB	03bH
	DB	04cH
	DB	05aH
	DB	068H
	DB	070H
	DB	06fH
	DB	072H
	DB	083H
	DB	09bH
	DB	0a5H
	DB	09bH
	DB	091H
	DB	08dH
	DB	08dH
	DB	092H
	DB	08cH
	DB	07dH
	DB	07cH
	DB	081H
	DB	07eH
	DB	074H
	DB	06eH
	DB	06aH
	DB	062H
	DB	05aH
	DB	055H
	DB	052H
	DB	052H
	DB	04eH
	DB	040H
	DB	02fH
	DB	02bH
	DB	033H
	DB	03bH
	DB	041H
	DB	04dH
	DB	05aH
	DB	059H
	DB	049H
	DB	03aH
	DB	039H
	DB	046H
	DB	057H
	DB	05eH
	DB	05cH
	DB	06aH
	DB	07fH
	DB	08aH
	DB	08eH
	DB	089H
	DB	085H
	DB	087H
	DB	083H
	DB	07bH
	DB	075H
	DB	073H
	DB	078H
	DB	07eH
	DB	082H
	DB	08bH
	DB	092H
	DB	093H
	DB	094H
	DB	098H
	DB	09cH
	DB	0a4H
	DB	0a8H
	DB	0a6H
	DB	0b5H
	DB	0d1H
	DB	0e6H
	DB	0e7H
	DB	0deH
	DB	0e1H
	DB	0ecH
	DB	0edH
	DB	0e7H
	DB	0dcH
	DB	0d2H
	DB	0ccH
	DB	0c4H
	DB	0bcH
	DB	0aeH
	DB	09cH
	DB	08fH
	DB	082H
	DB	072H
	DB	065H
	DB	05bH
	DB	050H
	DB	045H
	DB	044H
	DB	04aH
	DB	04dH
	DB	049H
	DB	03bH
	DB	02fH
	DB	02eH
	DB	031H
	DB	037H
	DB	039H
	DB	038H
	DB	03fH
	DB	058H
	DB	071H
	DB	077H
	DB	078H
	DB	080H
	DB	083H
	DB	089H
	DB	099H
	DB	0a6H
	DB	0b3H
	DB	0bdH
	DB	0c1H
	DB	0c7H
	DB	0c8H
	DB	0c6H
	DB	0c8H
	DB	0c6H
	DB	0bfH
	DB	0b7H
	DB	0aeH
	DB	0a5H
	DB	09cH
	DB	09cH
	DB	09eH
	DB	097H
	DB	08fH
	DB	093H
	DB	099H
	DB	09bH
	DB	09bH
	DB	096H
	DB	093H
	DB	0a2H
	DB	0b4H
	DB	0baH
	DB	0b1H
	DB	09fH
	DB	098H
	DB	09bH
	DB	099H
	DB	098H
	DB	09aH
	DB	095H
	DB	092H
	DB	0a0H
	DB	09fH
	DB	087H
	DB	078H
	DB	070H
	DB	06eH
	DB	071H
	DB	06bH
	DB	061H
	DB	055H
	DB	04dH
	DB	054H
	DB	05eH
	DB	058H
	DB	046H
	DB	03dH
	DB	03bH
	DB	034H
	DB	033H
	DB	035H
	DB	030H
	DB	038H
	DB	05eH
	DB	082H
	DB	08aH
	DB	086H
	DB	081H
	DB	086H
	DB	096H
	DB	0a2H
	DB	0a8H
	DB	0a4H
	DB	097H
	DB	091H
	DB	090H
	DB	089H
	DB	084H
	DB	080H
	DB	07eH
	DB	081H
	DB	07fH
	DB	081H
	DB	082H
	DB	073H
	DB	066H
	DB	05fH
	DB	050H
	DB	04aH
	DB	052H
	DB	052H
	DB	048H
	DB	03dH
	DB	03bH
	DB	03dH
	DB	03eH
	DB	04aH
	DB	063H
	DB	071H
	DB	06aH
	DB	05cH
	DB	055H
	DB	054H
	DB	056H
	DB	05bH
	DB	060H
	DB	063H
	DB	06eH
	DB	081H
	DB	08aH
	DB	08cH
	DB	08cH
	DB	08aH
	DB	089H
	DB	085H
	DB	07cH
	DB	078H
	DB	079H
	DB	07eH
	DB	086H
	DB	08cH
	DB	089H
	DB	088H
	DB	093H
	DB	0a1H
	DB	0abH
	DB	0b0H
	DB	0aeH
	DB	0aaH
	DB	0bdH
	DB	0ddH
	DB	0edH
	DB	0eeH
	DB	0ecH
	DB	0e8H
	DB	0e7H
	DB	0e7H
	DB	0e8H
	DB	0e4H
	DB	0d8H
	DB	0c9H
	DB	0beH
	DB	0b3H
	DB	0a4H
	DB	09bH
	DB	096H
	DB	083H
	DB	06fH
	DB	065H
	DB	05aH
	DB	052H
	DB	048H
	DB	040H
	DB	044H
	DB	04aH
	DB	04bH
	DB	04cH
	DB	047H
	DB	03dH
	DB	036H
	DB	031H
	DB	032H
	DB	036H
	DB	03aH
	DB	04eH
	DB	074H
	DB	088H
	DB	089H
	DB	084H
	DB	082H
	DB	086H
	DB	08cH
	DB	099H
	DB	0aaH
	DB	0afH
	DB	0b9H
	DB	0c5H
	DB	0caH
	DB	0d1H
	DB	0d2H
	DB	0c5H
	DB	0b9H
	DB	0b8H
	DB	0b5H
	DB	0abH
	DB	0a1H
	DB	09aH
	DB	097H
	DB	093H
	DB	08fH
	DB	08dH
	DB	090H
	DB	097H
	DB	09cH
	DB	0a0H
	DB	0adH
	DB	0beH
	DB	0c8H
	DB	0cdH
	DB	0c5H
	DB	0b4H
	DB	0aeH
	DB	0a9H
	DB	0a4H
	DB	0a5H
	DB	0a0H
	DB	098H
	DB	09aH
	DB	09bH
	DB	09aH
	DB	095H
	DB	089H
	DB	07aH
	DB	06aH
	DB	05eH
	DB	05aH
	DB	056H
	DB	050H
	DB	043H
	DB	038H
	DB	040H
	DB	048H
	DB	042H
	DB	039H
	DB	030H
	DB	028H
	DB	023H
	DB	022H
	DB	02eH
	DB	046H
	DB	057H
	DB	063H
	DB	076H
	DB	081H
	DB	07eH
	DB	081H
	DB	087H
	DB	08fH
	DB	095H
	DB	093H
	DB	093H
	DB	08dH
	DB	081H
	DB	07fH
	DB	084H
	DB	083H
	DB	079H
	DB	06fH
	DB	078H
	DB	085H
	DB	084H
	DB	081H
	DB	079H
	DB	069H
	DB	05aH
	DB	050H
	DB	051H
	DB	05bH
	DB	05dH
	DB	055H
	DB	052H
	DB	058H
	DB	062H
	DB	06dH
	DB	075H
	DB	07aH
	DB	076H
	DB	070H
	DB	072H
	DB	06fH
	DB	063H
	DB	065H
	DB	066H
	DB	057H
	DB	04eH
	DB	05aH
	DB	071H
	DB	085H
	DB	08cH
	DB	088H
	DB	080H
	DB	075H
	DB	06dH
	DB	06dH
	DB	06dH
	DB	06cH
	DB	071H
	DB	07bH
	DB	083H
	DB	084H
	DB	087H
	DB	08dH
	DB	094H
	DB	0a0H
	DB	0abH
	DB	0b2H
	DB	0baH
	DB	0c4H
	DB	0cfH
	DB	0d5H
	DB	0dbH
	DB	0e1H
	DB	0d9H
	DB	0cfH
	DB	0d1H
	DB	0d6H
	DB	0cfH
	DB	0bcH
	DB	0b5H
	DB	0b4H
	DB	0a7H
	DB	09bH
	DB	097H
	DB	08aH
	DB	06eH
	DB	057H
	DB	050H
	DB	04dH
	DB	044H
	DB	040H
	DB	041H
	DB	044H
	DB	047H
	DB	047H
	DB	045H
	DB	043H
	DB	03eH
	DB	03bH
	DB	040H
	DB	044H
	DB	03dH
	DB	03aH
	DB	04eH
	DB	06bH
	DB	082H
	DB	091H
	DB	091H
	DB	08bH
	DB	08dH
	DB	091H
	DB	097H
	DB	0a4H
	DB	0b5H
	DB	0c4H
	DB	0cdH
	DB	0d4H
	DB	0d6H
	DB	0cdH
	DB	0bfH
	DB	0b5H
	DB	0b5H
	DB	0bbH
	DB	0bfH
	DB	0b7H
	DB	0a6H
	DB	09cH
	DB	09bH
	DB	09aH
	DB	08fH
	DB	08dH
	DB	09dH
	DB	0afH
	DB	0bcH
	DB	0c7H
	DB	0cdH
	DB	0ceH
	DB	0caH
	DB	0bfH
	DB	0b5H
	DB	0aaH
	DB	0a2H
	DB	0a4H
	DB	0a7H
	DB	09bH
	DB	08cH
	DB	08fH
	DB	093H
	DB	08eH
	DB	088H
	DB	07aH
	DB	064H
	DB	053H
	DB	04dH
	DB	053H
	DB	059H
	DB	04fH
	DB	03aH
	DB	02fH
	DB	034H
	DB	03dH
	DB	03fH
	DB	035H
	DB	02dH
	DB	02fH
	DB	033H
	DB	03bH
	DB	047H
	DB	04bH
	DB	04bH
	DB	054H
	DB	061H
	DB	069H
	DB	06bH
	DB	06bH
	DB	070H
	DB	079H
	DB	081H
	DB	086H
	DB	08aH
	DB	089H
	DB	07cH
	DB	074H
	DB	076H
	DB	074H
	DB	069H
	DB	063H
	DB	070H
	DB	086H
	DB	095H
	DB	091H
	DB	081H
	DB	074H
	DB	067H
	DB	063H
	DB	06dH
	DB	076H
	DB	076H
	DB	073H
	DB	079H
	DB	081H
	DB	081H
	DB	080H
	DB	07bH
	DB	072H
	DB	071H
	DB	072H
	DB	073H
	DB	078H
	DB	075H
	DB	06bH
	DB	06aH
	DB	06bH
	DB	068H
	DB	068H
	DB	073H
	DB	07dH
	DB	07fH
	DB	07dH
	DB	079H
	DB	07bH
	DB	07dH
	DB	077H
	DB	074H
	DB	071H
	DB	06eH
	DB	07cH
	DB	093H
	DB	098H
	DB	097H
	DB	0a5H
	DB	0adH
	DB	0adH
	DB	0bcH
	DB	0caH
	DB	0cbH
	DB	0cbH
	DB	0d2H
	DB	0d9H
	DB	0ddH
	DB	0dcH
	DB	0d0H
	DB	0c7H
	DB	0ccH
	DB	0d0H
	DB	0caH
	DB	0c4H
	DB	0baH
	DB	0b0H
	DB	0a4H
	DB	093H
	DB	081H
	DB	06fH
	DB	05dH
	DB	051H
	DB	04aH
	DB	046H
	DB	03fH
	DB	038H
	DB	037H
	DB	039H
	DB	046H
	DB	04eH
	DB	04aH
	DB	043H
	DB	03dH
	DB	037H
	DB	037H
	DB	03aH
	DB	03bH
	DB	037H
	DB	03bH
	DB	055H
	DB	073H
	DB	082H
	DB	08bH
	DB	094H
	DB	095H
	DB	099H
	DB	0aaH
	DB	0b6H
	DB	0b7H
	DB	0b9H
	DB	0bcH
	DB	0bdH
	DB	0bcH
	DB	0beH
	DB	0c3H
	DB	0bcH
	DB	0b5H
	DB	0b9H
	DB	0bcH
	DB	0b4H
	DB	0a8H
	DB	0a0H
	DB	0a3H
	DB	0a8H
	DB	0a1H
	DB	0a1H
	DB	0b3H
	DB	0beH
	DB	0c2H
	DB	0c7H
	DB	0c8H
	DB	0c6H
	DB	0c3H
	DB	0c0H
	DB	0b1H
	DB	09eH
	DB	09bH
	DB	09eH
	DB	09dH
	DB	097H
	DB	08cH
	DB	086H
	DB	084H
	DB	07aH
	DB	069H
	DB	05eH
	DB	055H
	DB	050H
	DB	057H
	DB	05eH
	DB	05bH
	DB	051H
	DB	03fH
	DB	031H
	DB	037H
	DB	045H
	DB	04eH
	DB	04dH
	DB	048H
	DB	04bH
	DB	05aH
	DB	065H
	DB	064H
	DB	057H
	DB	04aH
	DB	049H
	DB	057H
	DB	06aH
	DB	06fH
	DB	06bH
	DB	06eH
	DB	072H
	DB	075H
	DB	07eH
	DB	084H
	DB	07aH
	DB	069H
	DB	05cH
	DB	05cH
	DB	063H
	DB	063H
	DB	05fH
	DB	06aH
	DB	07aH
	DB	07dH
	DB	080H
	DB	07eH
	DB	070H
	DB	071H
	DB	087H
	DB	090H
	DB	086H
	DB	07bH
	DB	077H
	DB	077H
	DB	077H
	DB	075H
	DB	06eH
	DB	06aH
	DB	06aH
	DB	067H
	DB	068H
	DB	072H
	DB	07aH
	DB	07fH
	DB	07aH
	DB	070H
	DB	06dH
	DB	06aH
	DB	06cH
	DB	075H
	DB	074H
	DB	071H
	DB	07cH
	DB	084H
	DB	083H
	DB	086H
	DB	088H
	DB	07eH
	DB	072H
	DB	06cH
	DB	07aH
	DB	098H
	DB	0aaH
	DB	0a7H
	DB	0a4H
	DB	0adH
	DB	0b8H
	DB	0b8H
	DB	0b6H
	DB	0b6H
	DB	0bdH
	DB	0caH
	DB	0d2H
	DB	0d4H
	DB	0d1H
	DB	0caH
	DB	0cbH
	DB	0d0H
	DB	0cdH
	DB	0c8H
	DB	0c4H
	DB	0bcH
	DB	0afH
	DB	0a3H
	DB	09eH
	DB	097H
	DB	083H
	DB	068H
	DB	052H
	DB	04aH
	DB	048H
	DB	046H
	DB	044H
	DB	043H
	DB	047H
	DB	050H
	DB	053H
	DB	04fH
	DB	046H
	DB	040H
	DB	03aH
	DB	034H
	DB	033H
	DB	036H
	DB	03cH
	DB	04aH
	DB	059H
	DB	068H
	DB	07fH
	DB	097H
	DB	09cH
	DB	096H
	DB	0a1H
	DB	0b3H
	DB	0b2H
	DB	0a4H
	DB	09fH
	DB	0a8H
	DB	0b5H
	DB	0bdH
	DB	0beH
	DB	0beH
	DB	0bbH
	DB	0b5H
	DB	0b6H
	DB	0bbH
	DB	0bfH
	DB	0c3H
	DB	0c6H
	DB	0c1H
	DB	0b1H
	DB	0a6H
	DB	0b1H
	DB	0c3H
	DB	0c4H
	DB	0baH
	DB	0b8H
	DB	0bdH
	DB	0bbH
	DB	0b6H
	DB	0b9H
	DB	0bdH
	DB	0b2H
	DB	09eH
	DB	08fH
	DB	08cH
	DB	08bH
	DB	082H
	DB	077H
	DB	070H
	DB	06aH
	DB	060H
	DB	056H
	DB	055H
	DB	05bH
	DB	060H
	DB	05fH
	DB	057H
	DB	04aH
	DB	040H
	DB	045H
	DB	051H
	DB	052H
	DB	04eH
	DB	052H
	DB	05bH
	DB	05cH
	DB	05cH
	DB	061H
	DB	061H
	DB	058H
	DB	049H
	DB	042H
	DB	04eH
	DB	063H
	DB	070H
	DB	076H
	DB	076H
	DB	06dH
	DB	068H
	DB	06fH
	DB	074H
	DB	071H
	DB	06eH
	DB	06bH
	DB	067H
	DB	063H
	DB	05dH
	DB	060H
	DB	068H
	DB	06aH
	DB	071H
	DB	07dH
	DB	080H
	DB	080H
	DB	087H
	DB	08fH
	DB	091H
	DB	087H
	DB	078H
	DB	06fH
	DB	06cH
	DB	06aH
	DB	068H
	DB	064H
	DB	060H
	DB	05eH
	DB	061H
	DB	068H
	DB	06dH
	DB	073H
	DB	075H
	DB	072H
	DB	072H
	DB	06bH
	DB	062H
	DB	069H
	DB	074H
	DB	073H
	DB	072H
	DB	07aH
	DB	07aH
	DB	072H
	DB	071H
	DB	079H
	DB	07eH
	DB	076H
	DB	070H
	DB	079H
	DB	088H
	DB	092H
	DB	097H
	DB	09fH
	DB	0acH
	DB	0afH
	DB	0a6H
	DB	0a5H
	DB	0afH
	DB	0b9H
	DB	0beH
	DB	0c4H
	DB	0cbH
	DB	0c6H
	DB	0c0H
	DB	0c3H
	DB	0c3H
	DB	0beH
	DB	0baH
	DB	0b9H
	DB	0b5H
	DB	0abH
	DB	0a0H
	DB	09cH
	DB	09bH
	DB	08dH
	DB	06dH
	DB	056H
	DB	04dH
	DB	04aH
	DB	04eH
	DB	053H
	DB	053H
	DB	053H
	DB	052H
	DB	053H
	DB	052H
	DB	04dH
	DB	046H
	DB	042H
	DB	03dH
	DB	036H
	DB	035H
	DB	043H
	DB	054H
	DB	05dH
	DB	067H
	DB	078H
	DB	085H
	DB	08fH
	DB	09aH
	DB	0a4H
	DB	0adH
	DB	0adH
	DB	09cH
	DB	096H
	DB	0a2H
	DB	0aeH
	DB	0b2H
	DB	0b4H
	DB	0b4H
	DB	0b3H
	DB	0b3H
	DB	0b9H
	DB	0c3H
	DB	0c7H
	DB	0c5H
	DB	0c4H
	DB	0bdH
	DB	0b8H
	DB	0beH
	DB	0ccH
	DB	0cbH
	DB	0baH
	DB	0b1H
	DB	0b7H
	DB	0bbH
	DB	0baH
	DB	0bbH
	DB	0bfH
	DB	0c2H
	DB	0bbH
	DB	0a7H
	DB	093H
	DB	088H
	DB	085H
	DB	082H
	DB	07dH
	DB	079H
	DB	074H
	DB	06cH
	DB	065H
	DB	05fH
	DB	05aH
	DB	059H
	DB	057H
	DB	055H
	DB	056H
	DB	05aH
	DB	064H
	DB	064H
	DB	053H
	DB	04fH
	DB	05dH
	DB	064H
	DB	05dH
	DB	055H
	DB	050H
	DB	051H
	DB	053H
	DB	050H
	DB	050H
	DB	05aH
	DB	062H
	DB	064H
	DB	06aH
	DB	06cH
	DB	06cH
	DB	06cH
	DB	06bH
	DB	06aH
	DB	06dH
	DB	071H
	DB	06cH
	DB	064H
	DB	05fH
	DB	05cH
	DB	062H
	DB	067H
	DB	066H
	DB	073H
	DB	08aH
	DB	092H
	DB	092H
	DB	091H
	DB	08fH
	DB	096H
	DB	096H
	DB	083H
	DB	06cH
	DB	05eH
	DB	05bH
	DB	05fH
	DB	065H
	DB	067H
	DB	068H
	DB	068H
	DB	05eH
	DB	058H
	DB	05dH
	DB	060H
	DB	063H
	DB	068H
	DB	068H
	DB	069H
	DB	073H
	DB	077H
	DB	06cH
	DB	06bH
	DB	075H
	DB	07aH
	DB	074H
	DB	06fH
	DB	07dH
	DB	093H
	DB	098H
	DB	08fH
	DB	082H
	DB	081H
	DB	08cH
	DB	098H
	DB	0a5H
	DB	0adH
	DB	0adH
	DB	0acH
	DB	0adH
	DB	0b0H
	DB	0b4H
	DB	0bdH
	DB	0c1H
	DB	0bdH
	DB	0b5H
	DB	0b3H
	DB	0beH
	DB	0c7H
	DB	0beH
	DB	0b5H
	DB	0b1H
	DB	0a5H
	DB	095H
	DB	08aH
	DB	084H
	DB	085H
	DB	080H
	DB	06bH
	DB	058H
	DB	051H
	DB	054H
	DB	056H
	DB	053H
	DB	04fH
	DB	04dH
	DB	04eH
	DB	04cH
	DB	044H
	DB	03eH
	DB	038H
	DB	02fH
	DB	028H
	DB	027H
	DB	035H
	DB	051H
	DB	062H
	DB	05fH
	DB	068H
	DB	07dH
	DB	08fH
	DB	09cH
	DB	0a3H
	DB	0aaH
	DB	0b0H
	DB	0abH
	DB	0a2H
	DB	09cH
	DB	096H
	DB	09cH
	DB	0a7H
	DB	0a9H
	DB	0acH
	DB	0b3H
	DB	0baH
	DB	0c0H
	DB	0c0H
	DB	0b6H
	DB	0adH
	DB	0afH
	DB	0b3H
	DB	0b0H
	DB	0b3H
	DB	0bcH
	DB	0bbH
	DB	0b6H
	DB	0b7H
	DB	0bdH
	DB	0c5H
	DB	0c4H
	DB	0b9H
	DB	0b5H
	DB	0b6H
	DB	0b5H
	DB	0afH
	DB	0a1H
	DB	093H
	DB	08dH
	DB	085H
	DB	07aH
	DB	07aH
	DB	07dH
	DB	072H
	DB	06aH
	DB	064H
	DB	055H
	DB	04dH
	DB	054H
	DB	05cH
	DB	059H
	DB	051H
	DB	052H
	DB	058H
	DB	059H
	DB	057H
	DB	05bH
	DB	05dH
	DB	04dH
	DB	041H
	DB	042H
	DB	041H
	DB	046H
	DB	053H
	DB	054H
	DB	055H
	DB	05fH
	DB	063H
	DB	066H
	DB	06fH
	DB	070H
	DB	06cH
	DB	066H
	DB	060H
	DB	05fH
	DB	05eH
	DB	05dH
	DB	059H
	DB	053H
	DB	04fH
	DB	059H
	DB	068H
	DB	078H
	DB	08bH
	DB	098H
	DB	09aH
	DB	096H
	DB	095H
	DB	096H
	DB	096H
	DB	097H
	DB	084H
	DB	068H
	DB	05eH
	DB	05bH
	DB	05dH
	DB	06bH
	DB	074H
	DB	06bH
	DB	05bH
	DB	053H
	DB	058H
	DB	05eH
	DB	060H
	DB	05fH
	DB	05fH
	DB	05fH
	DB	063H
	DB	071H
	DB	080H
	DB	081H
	DB	083H
	DB	08cH
	DB	08bH
	DB	085H
	DB	08aH
	DB	099H
	DB	0a3H
	DB	0a2H
	DB	09cH
	DB	099H
	DB	09eH
	DB	0a5H
	DB	0aaH
	DB	0abH
	DB	0aeH
	DB	0b7H
	DB	0baH
	DB	0b8H
	DB	0bcH
	DB	0beH
	DB	0bcH
	DB	0b9H
	DB	0b1H
	DB	0aeH
	DB	0b3H
	DB	0bbH
	DB	0c7H
	DB	0c9H
	DB	0bfH
	DB	0b4H
	DB	0aaH
	DB	09dH
	DB	08eH
	DB	087H
	DB	087H
	DB	07fH
	DB	072H
	DB	070H
	DB	075H
	DB	072H
	DB	064H
	DB	054H
	DB	052H
	DB	054H
	DB	04dH
	DB	046H
	DB	040H
	DB	037H
	DB	02fH
	DB	02bH
	DB	026H
	DB	028H
	DB	035H
	DB	04aH
	DB	05eH
	DB	067H
	DB	073H
	DB	08fH
	DB	0a1H
	DB	0a2H
	DB	0a5H
	DB	0a5H
	DB	0a7H
	DB	0b2H
	DB	0b0H
	DB	0a1H
	DB	09eH
	DB	0a8H
	DB	0afH
	DB	0b5H
	DB	0bcH
	DB	0c0H
	DB	0c1H
	DB	0baH
	DB	0aeH
	DB	0adH
	DB	0b4H
	DB	0b5H
	DB	0b0H
	DB	0adH
	DB	0abH
	DB	0b3H
	DB	0c2H
	DB	0c6H
	DB	0c4H
	DB	0c9H
	DB	0cbH
	DB	0c6H
	DB	0beH
	DB	0bdH
	DB	0c5H
	DB	0c3H
	DB	0b4H
	DB	0a8H
	DB	09eH
	DB	094H
	DB	08bH
	DB	07fH
	DB	077H
	DB	079H
	DB	077H
	DB	071H
	DB	069H
	DB	058H
	DB	054H
	DB	062H
	DB	061H
	DB	050H
	DB	047H
	DB	050H
	DB	060H
	DB	066H
	DB	05dH
	DB	052H
	DB	04fH
	DB	04cH
	DB	041H
	DB	03dH
	DB	047H
	DB	052H
	DB	055H
	DB	058H
	DB	05eH
	DB	065H
	DB	069H
	DB	068H
	DB	064H
	DB	064H
	DB	060H
	DB	057H
	DB	051H
	DB	049H
	DB	047H
	DB	04eH
	DB	04cH
	DB	03fH
	DB	03bH
	DB	04bH
	DB	068H
	DB	07cH
	DB	07cH
	DB	07fH
	DB	08cH
	DB	093H
	DB	08fH
	DB	086H
	DB	07fH
	DB	080H
	DB	07cH
	DB	06bH
	DB	05bH
	DB	057H
	DB	05cH
	DB	065H
	DB	069H
	DB	062H
	DB	055H
	DB	052H
	DB	051H
	DB	04aH
	DB	04cH
	DB	053H
	DB	055H
	DB	056H
	DB	056H
	DB	05bH
	DB	06dH
	DB	07fH
	DB	083H
	DB	081H
	DB	086H
	DB	08aH
	DB	08cH
	DB	097H
	DB	0a1H
	DB	0a7H
	DB	0afH
	DB	0aaH
	DB	0a3H
	DB	0a9H
	DB	0afH
	DB	0b2H
	DB	0b7H
	DB	0b7H
	DB	0b2H
	DB	0b5H
	DB	0bdH
	DB	0bbH
	DB	0b9H
	DB	0bdH
	DB	0bbH
	DB	0b2H
	DB	0abH
	DB	0b2H
	DB	0c2H
	DB	0c6H
	DB	0bcH
	DB	0acH
	DB	09cH
	DB	091H
	DB	08dH
	DB	08aH
	DB	081H
	DB	07aH
	DB	07bH
	DB	079H
	DB	078H
	DB	074H
	DB	06aH
	DB	067H
	DB	063H
	DB	059H
	DB	051H
	DB	047H
	DB	039H
	DB	032H
	DB	033H
	DB	030H
	DB	02eH
	DB	033H
	DB	03dH
	DB	050H
	DB	064H
	DB	06eH
	DB	071H
	DB	07cH
	DB	089H
	DB	094H
	DB	0a1H
	DB	0a6H
	DB	0a6H
	DB	0abH
	DB	0a9H
	DB	09dH
	DB	09bH
	DB	0a0H
	DB	0a6H
	DB	0afH
	DB	0b8H
	DB	0baH
	DB	0b4H
	DB	0aeH
	DB	0a8H
	DB	0a2H
	DB	09fH
	DB	09fH
	DB	09dH
	DB	09bH
	DB	09fH
	DB	0abH
	DB	0b8H
	DB	0beH
	DB	0c3H
	DB	0c9H
	DB	0c9H
	DB	0c4H
	DB	0bfH
	DB	0bbH
	DB	0bcH
	DB	0b9H
	DB	0adH
	DB	0a1H
	DB	098H
	DB	092H
	DB	08cH
	DB	084H
	DB	07dH
	DB	07fH
	DB	07cH
	DB	06dH
	DB	05dH
	DB	050H
	DB	04dH
	DB	056H
	DB	05aH
	DB	055H
	DB	052H
	DB	057H
	DB	058H
	DB	04eH
	DB	043H
	DB	040H
	DB	045H
	DB	048H
	DB	048H
	DB	050H
	DB	05bH
	DB	062H
	DB	066H
	DB	067H
	DB	067H
	DB	069H
	DB	070H
	DB	075H
	DB	073H
	DB	06eH
	DB	062H
	DB	058H
	DB	050H
	DB	043H
	DB	046H
	DB	054H
	DB	055H
	DB	04bH
	DB	04aH
	DB	053H
	DB	066H
	DB	077H
	DB	079H
	DB	07eH
	DB	08dH
	DB	08eH
	DB	084H
	DB	07cH
	DB	078H
	DB	07bH
	DB	079H
	DB	06dH
	DB	067H
	DB	069H
	DB	06cH
	DB	071H
	DB	072H
	DB	06aH
	DB	060H
	DB	058H
	DB	052H
	DB	04cH
	DB	04cH
	DB	054H
	DB	05aH
	DB	05eH
	DB	067H
	DB	072H
	DB	07eH
	DB	089H
	DB	087H
	DB	07eH
	DB	080H
	DB	08eH
	DB	09aH
	DB	0a1H
	DB	0a8H
	DB	0afH
	DB	0adH
	DB	0a2H
	DB	09fH
	DB	0a4H
	DB	0a9H
	DB	0b2H
	DB	0bbH
	DB	0bdH
	DB	0c0H
	DB	0bcH
	DB	0b2H
	DB	0aaH
	DB	0a4H
	DB	0a4H
	DB	0abH
	DB	0b5H
	DB	0b7H
	DB	0b3H
	DB	0b2H
	DB	0b0H
	DB	0a3H
	DB	094H
	DB	08cH
	DB	08bH
	DB	086H
	DB	07eH
	DB	076H
	DB	06dH
	DB	06cH
	DB	070H
	DB	073H
	DB	073H
	DB	06eH
	DB	066H
	DB	05fH
	DB	056H
	DB	04fH
	DB	04bH
	DB	045H
	DB	042H
	DB	03eH
	DB	03aH
	DB	03eH
	DB	041H
	DB	048H
	DB	053H
	DB	059H
	DB	060H
	DB	06aH
	DB	074H
	DB	081H
	DB	08dH
	DB	097H
	DB	09cH
	DB	0a1H
	DB	0a8H
	DB	0adH
	DB	0acH
	DB	0a4H
	DB	0a2H
	DB	0a9H
	DB	0b4H
	DB	0beH
	DB	0c2H
	DB	0c1H
	DB	0bbH
	DB	0afH
	DB	0a7H
	DB	09cH
	DB	093H
	DB	0a0H
	DB	0aeH
	DB	0b5H
	DB	0c1H
	DB	0c8H
	DB	0caH
	DB	0ccH
	DB	0cbH
	DB	0c9H
	DB	0c4H
	DB	0bbH
	DB	0b6H
	DB	0b3H
	DB	0b1H
	DB	0afH
	DB	0a9H
	DB	0a0H
	DB	096H
	DB	08aH
	DB	087H
	DB	087H
	DB	087H
	DB	083H
	DB	074H
	DB	066H
	DB	05cH
	DB	055H
	DB	05aH
	DB	067H
	DB	06aH
	DB	063H
	DB	05dH
	DB	05aH
	DB	056H
	DB	054H
	DB	04eH
	DB	04eH
	DB	055H
	DB	059H
	DB	060H
	DB	066H
	DB	06aH
	DB	06bH
	DB	068H
	DB	069H
	DB	073H
	DB	078H
	DB	07bH
	DB	082H
	DB	07fH
	DB	06dH
	DB	05fH
	DB	05dH
	DB	05aH
	DB	056H
	DB	054H
	DB	059H
	DB	058H
	DB	052H
	DB	05aH
	DB	065H
	DB	06cH
	DB	076H
	DB	07cH
	DB	07cH
	DB	079H
	DB	076H
	DB	077H
	DB	076H
	DB	07aH
	DB	080H
	DB	07aH
	DB	06eH
	DB	06aH
	DB	06cH
	DB	06bH
	DB	067H
	DB	063H
	DB	05dH
	DB	057H
	DB	054H
	DB	055H
	DB	053H
	DB	04eH
	DB	050H
	DB	055H
	DB	05dH
	DB	06bH
	DB	072H
	DB	079H
	DB	086H
	DB	08aH
	DB	08aH
	DB	08dH
	DB	095H
	DB	09fH
	DB	0a4H
	DB	0aaH
	DB	0afH
	DB	0acH
	DB	0b0H
	DB	0bdH
	DB	0c0H
	DB	0beH
	DB	0c1H
	DB	0c2H
	DB	0c1H
	DB	0bbH
	DB	0b2H
	DB	0a9H
	DB	0a4H
	DB	0a9H
	DB	0b1H
	DB	0b5H
	DB	0b5H
	DB	0b6H
	DB	0afH
	DB	0a1H
	DB	096H
	DB	090H
	DB	08aH
	DB	081H
	DB	079H
	DB	075H
	DB	06fH
	DB	067H
	DB	062H
	DB	05fH
	DB	060H
	DB	065H
	DB	061H
	DB	059H
	DB	053H
	DB	053H
	DB	04fH
	DB	047H
	DB	041H
	DB	03fH
	DB	03dH
	DB	039H
	DB	037H
	DB	037H
	DB	036H
	DB	03dH
	DB	044H
	DB	049H
	DB	057H
	DB	069H
	DB	077H
	DB	07fH
	DB	081H
	DB	084H
	DB	08eH
	DB	09fH
	DB	0a8H
	DB	0a2H
	DB	09bH
	DB	097H
	DB	09bH
	DB	0a1H
	DB	0a5H
	DB	0abH
	DB	0afH
	DB	0aaH
	DB	0a2H
	DB	09cH
	DB	097H
	DB	098H
	DB	0a1H
	DB	0a7H
	DB	0aaH
	DB	0b3H
	DB	0bcH
	DB	0bfH
	DB	0c5H
	DB	0c8H
	DB	0c3H
	DB	0b9H
	DB	0b2H
	DB	0b3H
	DB	0b5H
	DB	0b9H
	DB	0bcH
	DB	0b6H
	DB	0acH
	DB	0a1H
	DB	096H
	DB	090H
	DB	088H
	DB	081H
	DB	07cH
	DB	075H
	DB	06bH
	DB	063H
	DB	061H
	DB	065H
	DB	06dH
	DB	06cH
	DB	064H
	DB	060H
	DB	05eH
	DB	05bH
	DB	05cH
	DB	05aH
	DB	056H
	DB	059H
	DB	061H
	DB	063H
	DB	061H
	DB	063H
	DB	064H
	DB	063H
	DB	063H
	DB	068H
	DB	072H
	DB	07aH
	DB	07eH
	DB	07bH
	DB	06fH
	DB	064H
	DB	060H
	DB	05eH
	DB	055H
	DB	04cH
	DB	04bH
	DB	04dH
	DB	04fH
	DB	05aH
	DB	06cH
	DB	075H
	DB	07cH
	DB	081H
	DB	081H
	DB	080H
	DB	080H
	DB	081H
	DB	080H
	DB	081H
	DB	089H
	DB	088H
	DB	077H
	DB	064H
	DB	05aH
	DB	058H
	DB	057H
	DB	059H
	DB	05dH
	DB	061H
	DB	063H
	DB	064H
	DB	059H
	DB	048H
	DB	046H
	DB	054H
	DB	061H
	DB	069H
	DB	06bH
	DB	06eH
	DB	07aH
	DB	084H
	DB	085H
	DB	087H
	DB	095H
	DB	0a0H
	DB	09fH
	DB	0a2H
	DB	0abH
	DB	0b4H
	DB	0b9H
	DB	0baH
	DB	0bdH
	DB	0c1H
	DB	0c2H
	DB	0beH
	DB	0b8H
	DB	0b0H
	DB	0a9H
	DB	0a7H
	DB	0a3H
	DB	09fH
	DB	0a3H
	DB	0a9H
	DB	0acH
	DB	0abH
	DB	0a5H
	DB	099H
	DB	094H
	DB	095H
	DB	08bH
	DB	081H
	DB	07aH
	DB	072H
	DB	06dH
	DB	06aH
	DB	06aH
	DB	071H
	DB	070H
	DB	066H
	DB	05dH
	DB	059H
	DB	05dH
	DB	064H
	DB	064H
	DB	061H
	DB	063H
	DB	05eH
	DB	04fH
	DB	03cH
	DB	030H
	DB	035H
	DB	040H
	DB	048H
	DB	051H
	DB	05bH
	DB	067H
	DB	076H
	DB	07cH
	DB	079H
	DB	07cH
	DB	085H
	DB	091H
	DB	09fH
	DB	0a7H
	DB	0a5H
	DB	09fH
	DB	099H
	DB	09cH
	DB	0a2H
	DB	0a9H
	DB	0b6H
	DB	0bcH
	DB	0bbH
	DB	0b7H
	DB	0b1H
	DB	0abH
	DB	0a3H
	DB	09eH
	DB	0a9H
	DB	0b5H
	DB	0b7H
	DB	0b9H
	DB	0baH
	DB	0baH
	DB	0c0H
	DB	0c2H
	DB	0bcH
	DB	0b7H
	DB	0b7H
	DB	0b6H
	DB	0b4H
	DB	0b0H
	DB	0a8H
	DB	0a0H
	DB	0a1H
	DB	09cH
	DB	08eH
	DB	08bH
	DB	087H
	DB	07bH
	DB	07dH
	DB	07fH
	DB	079H
	DB	072H
	DB	068H
	DB	062H
	DB	061H
	DB	05fH
	DB	065H
	DB	066H
	DB	058H
	DB	051H
	DB	057H
	DB	057H
	DB	053H
	DB	04fH
	DB	04fH
	DB	051H
	DB	053H
	DB	05aH
	DB	05fH
	DB	05eH
	DB	064H
	DB	06dH
	DB	071H
	DB	070H
	DB	070H
	DB	071H
	DB	070H
	DB	06bH
	DB	05eH
	DB	04bH
	DB	038H
	DB	033H
	DB	044H
	DB	053H
	DB	05fH
	DB	06cH
	DB	077H
	DB	07dH
	DB	080H
	DB	084H
	DB	089H
	DB	087H
	DB	081H
	DB	07dH
	DB	083H
	DB	089H
	DB	07fH
	DB	06dH
	DB	066H
	DB	05dH
	DB	04eH
	DB	050H
	DB	05fH
	DB	06aH
	DB	071H
	DB	06fH
	DB	063H
	DB	055H
	DB	04eH
	DB	051H
	DB	059H
	DB	05eH
	DB	060H
	DB	065H
	DB	06dH
	DB	077H
	DB	085H
	DB	092H
	DB	096H
	DB	094H
	DB	095H
	DB	09aH
	DB	0a3H
	DB	0afH
	DB	0b1H
	DB	0acH
	DB	0afH
	DB	0baH
	DB	0c4H
	DB	0c9H
	DB	0c1H
	DB	0b7H
	DB	0b7H
	DB	0b3H
	DB	0aaH
	DB	0a1H
	DB	097H
	DB	093H
	DB	094H
	DB	095H
	DB	097H
	DB	093H
	DB	08aH
	DB	085H
	DB	07fH
	DB	079H
	DB	073H
	DB	06dH
	DB	068H
	DB	06aH
	DB	073H
	DB	079H
	DB	071H
	DB	066H
	DB	062H
	DB	065H
	DB	06aH
	DB	068H
	DB	067H
	DB	069H
	DB	068H
	DB	068H
	DB	064H
	DB	057H
	DB	045H
	DB	039H
	DB	03aH
	DB	044H
	DB	04cH
	DB	05cH
	DB	06eH
	DB	071H
	DB	070H
	DB	077H
	DB	078H
	DB	07aH
	DB	084H
	DB	08dH
	DB	093H
	DB	09cH
	DB	0a0H
	DB	09cH
	DB	09dH
	DB	0a9H
	DB	0b5H
	DB	0bcH
	DB	0c5H
	DB	0cdH
	DB	0d2H
	DB	0d6H
	DB	0cfH
	DB	0bfH
	DB	0b5H
	DB	0adH
	DB	0abH
	DB	0b5H
	DB	0bcH
	DB	0bbH
	DB	0c0H
	DB	0c3H
	DB	0bfH
	DB	0bdH
	DB	0bbH
	DB	0b7H
	DB	0b3H
	DB	0b0H
	DB	0aeH
	DB	0afH
	DB	0abH
	DB	0a0H
	DB	09bH
	DB	098H
	DB	094H
	DB	08fH
	DB	089H
	DB	088H
	DB	08dH
	DB	094H
	DB	090H
	DB	07fH
	DB	072H
	DB	06fH
	DB	06eH
	DB	06fH
	DB	06dH
	DB	068H
	DB	061H
	DB	054H
	DB	04cH
	DB	053H
	DB	055H
	DB	04bH
	DB	04cH
	DB	051H
	DB	054H
	DB	05cH
	DB	05bH
	DB	057H
	DB	05bH
	DB	062H
	DB	069H
	DB	073H
	DB	07bH
	DB	077H
	DB	06bH
	DB	060H
	DB	054H
	DB	047H
	DB	03fH
	DB	044H
	DB	04fH
	DB	054H
	DB	05cH
	DB	06eH
	DB	07dH
	DB	082H
	DB	07eH
	DB	07cH
	DB	07fH
	DB	07eH
	DB	07dH
	DB	07aH
	DB	07cH
	DB	083H
	DB	07bH
	DB	06bH
	DB	05eH
	DB	051H
	DB	04aH
	DB	04dH
	DB	056H
	DB	061H
	DB	066H
	DB	067H
	DB	065H
	DB	05eH
	DB	052H
	DB	04bH
	DB	04aH
	DB	04fH
	DB	058H
	DB	064H
	DB	072H
	DB	079H
	DB	07dH
	DB	084H
	DB	087H
	DB	086H
	DB	08eH
	DB	096H
	DB	09eH
	DB	0a7H
	DB	0a9H
	DB	0abH
	DB	0adH
	DB	0b1H
	DB	0bfH
	DB	0ccH
	DB	0cbH
	DB	0c4H
	DB	0bfH
	DB	0bfH
	DB	0b9H
	DB	0a7H
	DB	099H
	DB	096H
	DB	098H
	DB	097H
	DB	099H
	DB	095H
	DB	087H
	DB	078H
	DB	070H
	DB	073H
	DB	073H
	DB	071H
	DB	07aH
	DB	082H
	DB	082H
	DB	082H
	DB	082H
	DB	07dH
	DB	077H
	DB	074H
	DB	071H
	DB	06eH
	DB	076H
	DB	07fH
	DB	079H
	DB	06eH
	DB	06bH
	DB	060H
	DB	04aH
	DB	043H
	DB	049H
	DB	049H
	DB	04cH
	DB	059H
	DB	063H
	DB	062H
	DB	05cH
	DB	060H
	DB	06cH
	DB	06dH
	DB	06aH
	DB	073H
	DB	07fH
	DB	087H
	DB	090H
	DB	09aH
	DB	09fH
	DB	09cH
	DB	0a3H
	DB	0bcH
	DB	0d3H
	DB	0d7H
	DB	0d0H
	DB	0cdH
	DB	0cdH
	DB	0c8H
	DB	0bfH
	DB	0bcH
	DB	0c1H
	DB	0c0H
	DB	0bdH
	DB	0bbH
	DB	0b4H
	DB	0afH
	DB	0aeH
	DB	0b1H
	DB	0b3H
	DB	0aeH
	DB	0a6H
	DB	0a1H
	DB	0a1H
	DB	0a5H
	DB	0a2H
	DB	096H
	DB	08cH
	DB	087H
	DB	086H
	DB	090H
	DB	09dH
	DB	09fH
	DB	09aH
	DB	093H
	DB	092H
	DB	08fH
	DB	07eH
	DB	075H
	DB	076H
	DB	072H
	DB	06eH
	DB	06bH
	DB	063H
	DB	052H
	DB	046H
	DB	048H
	DB	047H
	DB	03fH
	DB	03dH
	DB	045H
	DB	053H
	DB	059H
	DB	055H
	DB	056H
	DB	055H
	DB	050H
	DB	056H
	DB	068H
	DB	071H
	DB	069H
	DB	05bH
	DB	04aH
	DB	03fH
	DB	03eH
	DB	03dH
	DB	043H
	DB	04dH
	DB	053H
	DB	060H
	DB	06cH
	DB	06aH
	DB	068H
	DB	06bH
	DB	072H
	DB	07cH
	DB	085H
	DB	086H
	DB	080H
	DB	079H
	DB	071H
	DB	067H
	DB	05cH
	DB	052H
	DB	049H
	DB	046H
	DB	04fH
	DB	05dH
	DB	066H
	DB	064H
	DB	05cH
	DB	05bH
	DB	05cH
	DB	054H
	DB	04eH
	DB	04fH
	DB	055H
	DB	05eH
	DB	066H
	DB	073H
	DB	079H
	DB	07aH
	DB	087H
	DB	091H
	DB	089H
	DB	084H
	DB	08dH
	DB	097H
	DB	0a0H
	DB	0abH
	DB	0b2H
	DB	0b7H
	DB	0bbH
	DB	0c1H
	DB	0cfH
	DB	0dbH
	DB	0daH
	DB	0d4H
	DB	0caH
	DB	0c2H
	DB	0bdH
	DB	0afH
	DB	09fH
	DB	09eH
	DB	09cH
	DB	09aH
	DB	098H
	DB	085H
	DB	06eH
	DB	068H
	DB	069H
	DB	070H
	DB	07eH
	DB	084H
	DB	084H
	DB	08dH
	DB	090H
	DB	088H
	DB	07eH
	DB	078H
	DB	07aH
	DB	07cH
	DB	080H
	DB	08cH
	DB	091H
	DB	086H
	DB	074H
	DB	067H
	DB	05eH
	DB	052H
	DB	04bH
	DB	052H
	DB	05cH
	DB	063H
	DB	066H
	DB	064H
	DB	05fH
	DB	05cH
	DB	063H
	DB	070H
	DB	074H
	DB	06eH
	DB	06dH
	DB	076H
	DB	07eH
	DB	084H
	DB	08eH
	DB	099H
	DB	0a3H
	DB	0b4H
	DB	0c7H
	DB	0d2H
	DB	0d3H
	DB	0d2H
	DB	0d4H
	DB	0d5H
	DB	0d4H
	DB	0cbH
	DB	0c1H
	DB	0beH
	DB	0bfH
	DB	0c1H
	DB	0c1H
	DB	0baH
	DB	0b1H
	DB	0aeH
	DB	0b1H
	DB	0b9H
	DB	0b8H
	DB	0abH
	DB	09fH
	DB	099H
	DB	09aH
	DB	09bH
	DB	094H
	DB	08dH
	DB	089H
	DB	08aH
	DB	09aH
	DB	0b1H
	DB	0baH
	DB	0b7H
	DB	0b2H
	DB	0aaH
	DB	099H
	DB	086H
	DB	07cH
	DB	079H
	DB	07dH
	DB	080H
	DB	079H
	DB	069H
	DB	050H
	DB	041H
	DB	03dH
	DB	03aH
	DB	039H
	DB	039H
	DB	03eH
	DB	048H
	DB	04fH
	DB	051H
	DB	04eH
	DB	049H
	DB	04aH
	DB	055H
	DB	063H
	DB	066H
	DB	05aH
	DB	048H
	DB	03dH
	DB	03bH
	DB	03bH
	DB	03bH
	DB	044H
	DB	051H
	DB	05eH
	DB	05fH
	DB	053H
	DB	057H
	DB	062H
	DB	069H
	DB	079H
	DB	081H
	DB	079H
	DB	06eH
	DB	062H
	DB	05dH
	DB	058H
	DB	04fH
	DB	048H
	DB	042H
	DB	03fH
	DB	047H
	DB	055H
	DB	05dH
	DB	05cH
	DB	05bH
	DB	05dH
	DB	05aH
	DB	053H
	DB	04cH
	DB	051H
	DB	059H
	DB	05fH
	DB	072H
	DB	085H
	DB	08aH
	DB	08aH
	DB	085H
	DB	07fH
	DB	084H
	DB	083H
	DB	07eH
	DB	085H
	DB	091H
	DB	09eH
	DB	0a8H
	DB	0a8H
	DB	0a2H
	DB	0abH
	DB	0c3H
	DB	0dbH
	DB	0e6H
	DB	0e2H
	DB	0d9H
	DB	0cfH
	DB	0c6H
	DB	0beH
	DB	0aeH
	DB	09eH
	DB	09bH
	DB	09fH
	DB	0a2H
	DB	097H
	DB	083H
	DB	074H
	DB	06eH
	DB	076H
	DB	08cH
	DB	099H
	DB	095H
	DB	08fH
	DB	08cH
	DB	08bH
	DB	086H
	DB	083H
	DB	083H
	DB	082H
	DB	08bH
	DB	092H
	DB	089H
	DB	081H
	DB	07bH
	DB	070H
	DB	065H
	DB	05bH
	DB	051H
	DB	050H
	DB	058H
	DB	05fH
	DB	062H
	DB	05cH
	DB	054H
	DB	056H
	DB	05bH
	DB	05aH
	DB	060H
	DB	063H
	DB	05cH
	DB	058H
	DB	060H
	DB	072H
	DB	084H
	DB	090H
	DB	095H
	DB	09fH
	DB	0b8H
	DB	0ccH
	DB	0d2H
	DB	0d9H
	DB	0dbH
	DB	0d5H
	DB	0ccH
	DB	0c0H
	DB	0b7H
	DB	0b6H
	DB	0bcH
	DB	0c6H
	DB	0cdH
	DB	0cdH
	DB	0c6H
	DB	0bfH
	DB	0b8H
	DB	0b2H
	DB	0afH
	DB	0aaH
	DB	09cH
	DB	091H
	DB	08fH
	DB	091H
	DB	08fH
	DB	086H
	DB	07cH
	DB	082H
	DB	09eH
	DB	0c4H
	DB	0d6H
	DB	0cfH
	DB	0c2H
	DB	0b6H
	DB	0aaH
	DB	0a2H
	DB	098H
	DB	089H
	DB	088H
	DB	08fH
	DB	08aH
	DB	079H
	DB	060H
	DB	04dH
	DB	045H
	DB	03fH
	DB	03fH
	DB	045H
	DB	044H
	DB	03eH
	DB	042H
	DB	04dH
	DB	04dH
	DB	046H
	DB	044H
	DB	047H
	DB	057H
	DB	068H
	DB	066H
	DB	059H
	DB	04eH
	DB	044H
	DB	045H
	DB	04eH
	DB	04aH
	DB	047H
	DB	050H
	DB	055H
	DB	056H
	DB	05cH
	DB	062H
	DB	06aH
	DB	072H
	DB	071H
	DB	06dH
	DB	06bH
	DB	068H
	DB	063H
	DB	061H
	DB	05bH
	DB	050H
	DB	047H
	DB	042H
	DB	041H
	DB	04cH
	DB	057H
	DB	057H
	DB	056H
	DB	056H
	DB	054H
	DB	04fH
	DB	048H
	DB	047H
	DB	04fH
	DB	059H
	DB	070H
	DB	088H
	DB	091H
	DB	092H
	DB	08dH
	DB	082H
	DB	07aH
	DB	07aH
	DB	07eH
	DB	077H
	DB	070H
	DB	077H
	DB	084H
	DB	08cH
	DB	08fH
	DB	097H
	DB	0a8H
	DB	0bdH
	DB	0d9H
	DB	0e6H
	DB	0d9H
	DB	0c8H
	DB	0bdH
	DB	0b8H
	DB	0b4H
	DB	0a9H
	DB	09dH
	DB	094H
	DB	093H
	DB	098H
	DB	096H
	DB	08cH
	DB	085H
	DB	086H
	DB	08dH
	DB	098H
	DB	09fH
	DB	09bH
	DB	095H
	DB	097H
	DB	09aH
	DB	095H
	DB	08dH
	DB	089H
	DB	08eH
	DB	095H
	DB	097H
	DB	08fH
	DB	084H
	DB	07eH
	DB	077H
	DB	06fH
	DB	065H
	DB	059H
	DB	056H
	DB	058H
	DB	058H
	DB	059H
	DB	054H
	DB	054H
	DB	062H
	DB	069H
	DB	065H
	DB	061H
	DB	063H
	DB	06aH
	DB	071H
	DB	07cH
	DB	086H
	DB	08cH
	DB	094H
	DB	0a5H
	DB	0b3H
	DB	0bdH
	DB	0c8H
	DB	0cfH
	DB	0cdH
	DB	0c7H
	DB	0c2H
	DB	0c1H
	DB	0bfH
	DB	0c0H
	DB	0c3H
	DB	0c4H
	DB	0c7H
	DB	0cdH
	DB	0c9H
	DB	0c2H
	DB	0bfH
	DB	0b5H
	DB	0a5H
	DB	09eH
	DB	09eH
	DB	099H
	DB	08fH
	DB	084H
	DB	07eH
	DB	07fH
	DB	085H
	DB	092H
	DB	0a6H
	DB	0b5H
	DB	0c7H
	DB	0d4H
	DB	0c8H
	DB	0b1H
	DB	0a1H
	DB	09bH
	DB	09aH
	DB	095H
	DB	088H
	DB	079H
	DB	077H
	DB	07bH
	DB	074H
	DB	068H
	DB	057H
	DB	047H
	DB	045H
	DB	043H
	DB	041H
	DB	041H
	DB	039H
	DB	033H
	DB	03aH
	DB	03eH
	DB	03eH
	DB	046H
	DB	051H
	DB	057H
	DB	05dH
	DB	064H
	DB	068H
	DB	066H
	DB	05bH
	DB	053H
	DB	050H
	DB	04cH
	DB	049H
	DB	048H
	DB	04aH
	DB	050H
	DB	052H
	DB	057H
	DB	064H
	DB	06aH
	DB	068H
	DB	068H
	DB	06dH
	DB	06cH
	DB	064H
	DB	05dH
	DB	054H
	DB	046H
	DB	040H
	DB	043H
	DB	046H
	DB	042H
	DB	043H
	DB	046H
	DB	046H
	DB	044H
	DB	03dH
	DB	037H
	DB	03cH
	DB	04fH
	DB	061H
	DB	063H
	DB	069H
	DB	077H
	DB	07fH
	DB	085H
	DB	08aH
	DB	083H
	DB	07bH
	DB	07aH
	DB	07aH
	DB	073H
	DB	068H
	DB	065H
	DB	072H
	DB	082H
	DB	08dH
	DB	09bH
	DB	0abH
	DB	0bdH
	DB	0cdH
	DB	0d1H
	DB	0c9H
	DB	0b6H
	DB	0a2H
	DB	09cH
	DB	09fH
	DB	09fH
	DB	09bH
	DB	08cH
	DB	084H
	DB	08fH
	DB	096H
	DB	099H
	DB	09bH
	DB	08fH
	DB	08aH
	DB	094H
	DB	09cH
	DB	09cH
	DB	090H
	DB	087H
	DB	089H
	DB	08cH
	DB	08eH
	DB	092H
	DB	093H
	DB	098H
	DB	09eH
	DB	098H
	DB	088H
	DB	079H
	DB	06eH
	DB	065H
	DB	05dH
	DB	055H
	DB	051H
	DB	04bH
	DB	042H
	DB	047H
	DB	051H
	DB	057H
	DB	064H
	DB	06dH
	DB	06eH
	DB	073H
	DB	085H
	DB	093H
	DB	08bH
	DB	081H
	DB	085H
	DB	08fH
	DB	0a1H
	DB	0b0H
	DB	0b0H
	DB	0b7H
	DB	0c6H
	DB	0ceH
	DB	0d1H
	DB	0d2H
	DB	0d0H
	DB	0cfH
	DB	0cdH
	DB	0c6H
	DB	0c4H
	DB	0c3H
	DB	0c0H
	DB	0c4H
	DB	0c6H
	DB	0c1H
	DB	0baH
	DB	0b0H
	DB	0a4H
	DB	09cH
	DB	09eH
	DB	0a3H
	DB	09dH
	DB	091H
	DB	08cH
	DB	099H
	DB	0b3H
	DB	0c1H
	DB	0c0H
	DB	0c2H
	DB	0cdH
	DB	0d3H
	DB	0c8H
	DB	0b5H
	DB	0a8H
	DB	09dH
	DB	093H
	DB	08bH
	DB	081H
	DB	078H
	DB	075H
	DB	075H
	DB	06bH
	DB	05aH
	DB	052H
	DB	04fH
	DB	048H
	DB	044H
	DB	040H
	DB	038H
	DB	02eH
	DB	028H
	DB	02aH
	DB	035H
	DB	047H
	DB	056H
	DB	059H
	DB	05bH
	DB	06aH
	DB	07dH
	DB	07fH
	DB	073H
	DB	066H
	DB	05bH
	DB	055H
	DB	04fH
	DB	046H
	DB	042H
	DB	044H
	DB	04eH
	DB	05aH
	DB	05fH
	DB	066H
	DB	071H
	DB	073H
	DB	072H
	DB	075H
	DB	074H
	DB	06dH
	DB	063H
	DB	05aH
	DB	058H
	DB	054H
	DB	049H
	DB	040H
	DB	03aH
	DB	03eH
	DB	049H
	DB	052H
	DB	057H
	DB	052H
	DB	049H
	DB	04fH
	DB	058H
	DB	056H
	DB	054H
	DB	05aH
	DB	065H
	DB	06dH
	DB	06bH
	DB	069H
	DB	073H
	DB	079H
	DB	079H
	DB	07eH
	DB	080H
	DB	077H
	DB	070H
	DB	077H
	DB	08bH
	DB	09aH
	DB	0a2H
	DB	0a8H
	DB	0abH
	DB	0b5H
	DB	0c0H
	DB	0b9H
	DB	0afH
	DB	0aaH
	DB	0a1H
	DB	0a0H
	DB	0a5H
	DB	0a0H
	DB	098H
	DB	093H
	DB	095H
	DB	09eH
	DB	09cH
	DB	095H
	DB	095H
	DB	094H
	DB	08eH
	DB	08aH
	DB	08aH
	DB	08eH
	DB	095H
	DB	09dH
	DB	0a5H
	DB	0a7H
	DB	0a3H
	DB	09aH
	DB	095H
	DB	095H
	DB	093H
	DB	08eH
	DB	084H
	DB	077H
	DB	067H
	DB	055H
	DB	046H
	DB	041H
	DB	040H
	DB	03fH
	DB	048H
	DB	057H
	DB	05aH
	DB	05dH
	DB	06aH
	DB	077H
	DB	085H
	DB	08aH
	DB	089H
	DB	08dH
	DB	08eH
	DB	090H
	DB	098H
	DB	09fH
	DB	0a7H
	DB	0abH
	DB	0aeH
	DB	0b5H
	DB	0c2H
	DB	0ccH
	DB	0caH
	DB	0c1H
	DB	0b9H
	DB	0b3H
	DB	0b0H
	DB	0aeH
	DB	0acH
	DB	0adH
	DB	0adH
	DB	0a6H
	DB	09eH
	DB	099H
	DB	09aH
	DB	09fH
	DB	0a5H
	DB	0abH
	DB	0acH
	DB	0a8H
	DB	0a6H
	DB	0acH
	DB	0b9H
	DB	0c1H
	DB	0c2H
	DB	0c3H
	DB	0c1H
	DB	0c1H
	DB	0c9H
	DB	0d0H
	DB	0cdH
	DB	0c1H
	DB	0b1H
	DB	0a2H
	DB	093H
	DB	07eH
	DB	06dH
	DB	068H
	DB	068H
	DB	065H
	DB	05aH
	DB	04aH
	DB	043H
	DB	043H
	DB	03eH
	DB	037H
	DB	032H
	DB	033H
	DB	043H
	DB	057H
	DB	060H
	DB	067H
	DB	066H
	DB	060H
	DB	062H
	DB	06aH
	DB	074H
	DB	07dH
	DB	079H
	DB	06eH
	DB	062H
	DB	057H
	DB	04eH
	DB	04bH
	DB	04dH
	DB	050H
	DB	054H
	DB	057H
	DB	058H
	DB	060H
	DB	06eH
	DB	078H
	DB	078H
	DB	071H
	DB	06eH
	DB	073H
	DB	074H
	DB	068H
	DB	05bH
	DB	053H
	DB	04aH
	DB	048H
	DB	050H
	DB	055H
	DB	05aH
	DB	063H
	DB	060H
	DB	050H
	DB	04aH
	DB	04aH
	DB	04aH
	DB	04aH
	DB	046H
	DB	042H
	DB	04cH
	DB	05dH
	DB	060H
	DB	05dH
	DB	05fH
	DB	062H
	DB	069H
	DB	071H
	DB	075H
	DB	07cH
	DB	083H
	DB	083H
	DB	089H
	DB	093H
	DB	098H
	DB	09dH
	DB	0a3H
	DB	0abH
	DB	0b8H
	DB	0c4H
	DB	0c4H
	DB	0bbH
	DB	0b3H
	DB	0aeH
	DB	0a9H
	DB	0a1H
	DB	092H
	DB	08aH
	DB	090H
	DB	096H
	DB	08fH
	DB	089H
	DB	08bH
	DB	089H
	DB	08bH
	DB	092H
	DB	093H
	DB	09bH
	DB	0a7H
	DB	0a7H
	DB	0a3H
	DB	09cH
	DB	093H
	DB	091H
	DB	092H
	DB	08fH
	DB	08bH
	DB	08bH
	DB	080H
	DB	06dH
	DB	063H
	DB	05aH
	DB	04aH
	DB	041H
	DB	03fH
	DB	043H
	DB	053H
	DB	061H
	DB	060H
	DB	05dH
	DB	065H
	DB	073H
	DB	07cH
	DB	083H
	DB	089H
	DB	096H
	DB	0a4H
	DB	0a9H
	DB	0aeH
	DB	0b2H
	DB	0acH
	DB	0a7H
	DB	0a4H
	DB	0a5H
	DB	0b4H
	DB	0c2H
	DB	0bdH
	DB	0b3H
	DB	0aeH
	DB	0a5H
	DB	09dH
	DB	09bH
	DB	099H
	DB	091H
	DB	093H
	DB	09eH
	DB	09eH
	DB	097H
	DB	096H
	DB	099H
	DB	0a4H
	DB	0aaH
	DB	0a5H
	DB	0abH
	DB	0b9H
	DB	0bbH
	DB	0bbH
	DB	0c0H
	DB	0c3H
	DB	0c1H
	DB	0c1H
	DB	0ceH
	DB	0dcH
	DB	0dfH
	DB	0d2H
	DB	0bbH
	DB	0a9H
	DB	099H
	DB	084H
	DB	072H
	DB	062H
	DB	052H
	DB	04fH
	DB	054H
	DB	04cH
	DB	03dH
	DB	036H
	DB	032H
	DB	033H
	DB	03bH
	DB	03eH
	DB	04cH
	DB	064H
	DB	072H
	DB	072H
	DB	069H
	DB	064H
	DB	065H
	DB	068H
	DB	069H
	DB	068H
	DB	06fH
	DB	071H
	DB	068H
	DB	063H
	DB	05eH
	DB	052H
	DB	047H
	DB	03fH
	DB	039H
	DB	03bH
	DB	049H
	DB	056H
	DB	05cH
	DB	060H
	DB	063H
	DB	066H
	DB	068H
	DB	069H
	DB	070H
	DB	078H
	DB	074H
	DB	06bH
	DB	060H
	DB	055H
	DB	04fH
	DB	04dH
	DB	054H
	DB	059H
	DB	058H
	DB	058H
	DB	054H
	DB	04bH
	DB	044H
	DB	043H
	DB	042H
	DB	041H
	DB	043H
	DB	04aH
	DB	05dH
	DB	068H
	DB	05bH
	DB	051H
	DB	04fH
	DB	055H
	DB	065H
	DB	06eH
	DB	079H
	DB	08aH
	DB	093H
	DB	096H
	DB	09bH
	DB	09fH
	DB	0a5H
	DB	0b2H
	DB	0bcH
	DB	0c0H
	DB	0c4H
	DB	0c4H
	DB	0bdH
	DB	0bbH
	DB	0b6H
	DB	0aaH
	DB	09dH
	DB	093H
	DB	08eH
	DB	090H
	DB	09cH
	DB	0a1H
	DB	09dH
	DB	09bH
	DB	09bH
	DB	09cH
	DB	09fH
	DB	09aH
	DB	098H
	DB	0a2H
	DB	0afH
	DB	0b2H
	DB	0aeH
	DB	0a5H
	DB	09fH
	DB	098H
	DB	08dH
	DB	08aH
	DB	090H
	DB	094H
	DB	08dH
	DB	07bH
	DB	068H
	DB	059H
	DB	049H
	DB	042H
	DB	049H
	DB	053H
	DB	061H
	DB	070H
	DB	071H
	DB	06dH
	DB	06eH
	DB	074H
	DB	07fH
	DB	091H
	DB	0a4H
	DB	0b1H
	DB	0b8H
	DB	0b8H
	DB	0b3H
	DB	0abH
	DB	0a0H
	DB	099H
	DB	0a0H
	DB	0aaH
	DB	0adH
	DB	0b1H
	DB	0afH
	DB	0a2H
	DB	09dH
	DB	0a3H
	DB	0a1H
	DB	09bH
	DB	099H
	DB	099H
	DB	09fH
	DB	09fH
	DB	093H
	DB	091H
	DB	099H
	DB	09dH
	DB	09cH
	DB	09dH
	DB	0a4H
	DB	0adH
	DB	0b6H
	DB	0c3H
	DB	0cdH
	DB	0cfH
	DB	0d1H
	DB	0d7H
	DB	0dbH
	DB	0d3H
	DB	0c9H
	DB	0c5H
	DB	0b9H
	DB	0a9H
	DB	099H
	DB	081H
	DB	068H
	DB	055H
	DB	04dH
	DB	050H
	DB	056H
	DB	058H
	DB	04fH
	DB	041H
	DB	037H
	DB	032H
	DB	02fH
	DB	036H
	DB	04cH
	DB	066H
	DB	073H
	DB	074H
	DB	06fH
	DB	06aH
	DB	067H
	DB	063H
	DB	05dH
	DB	05cH
	DB	064H
	DB	069H
	DB	063H
	DB	05cH
	DB	04fH
	DB	03eH
	DB	035H
	DB	031H
	DB	034H
	DB	03eH
	DB	04aH
	DB	056H
	DB	056H
	DB	051H
	DB	055H
	DB	05eH
	DB	065H
	DB	06aH
	DB	06cH
	DB	06cH
	DB	069H
	DB	065H
	DB	060H
	DB	05cH
	DB	059H
	DB	054H
	DB	04fH
	DB	052H
	DB	059H
	DB	059H
	DB	054H
	DB	04eH
	DB	046H
	DB	042H
	DB	03fH
	DB	03aH
	DB	03fH
	DB	048H
	DB	04dH
	DB	04fH
	DB	04aH
	DB	047H
	DB	04cH
	DB	056H
	DB	05fH
	DB	062H
	DB	069H
	DB	07bH
	DB	090H
	DB	0a4H
	DB	0b3H
	DB	0b5H
	DB	0b7H
	DB	0bbH
	DB	0b5H
	DB	0b2H
	DB	0b4H
	DB	0b8H
	DB	0bfH
	DB	0bcH
	DB	0aeH
	DB	0a7H
	DB	0a1H
	DB	09bH
	DB	099H
	DB	099H
	DB	0a0H
	DB	0a8H
	DB	0a3H
	DB	09dH
	DB	09aH
	DB	096H
	DB	091H
	DB	089H
	DB	08bH
	DB	09cH
	DB	0afH
	DB	0b6H
	DB	0b2H
	DB	0abH
	DB	0a7H
	DB	0a2H
	DB	0a0H
	DB	09cH
	DB	096H
	DB	095H
	DB	090H
	DB	082H
	DB	06eH
	DB	05fH
	DB	058H
	DB	058H
	DB	05eH
	DB	064H
	DB	074H
	DB	085H
	DB	07fH
	DB	073H
	DB	072H
	DB	079H
	DB	085H
	DB	08fH
	DB	099H
	DB	0a8H
	DB	0b4H
	DB	0b9H
	DB	0b2H
	DB	0a9H
	DB	0a7H
	DB	0a4H
	DB	0a3H
	DB	0a7H
	DB	0a6H
	DB	0aaH
	DB	0b4H
	DB	0b4H
	DB	0b3H
	DB	0b8H
	DB	0b9H
	DB	0b0H
	DB	0a5H
	DB	099H
	DB	096H
	DB	09eH
	DB	09fH
	DB	09aH
	DB	099H
	DB	09eH
	DB	0a2H
	DB	09cH
	DB	097H
	DB	0a3H
	DB	0b5H
	DB	0c9H
	DB	0d9H
	DB	0e1H
	DB	0e2H
	DB	0ddH
	DB	0d2H
	DB	0c7H
	DB	0bbH
	DB	0b4H
	DB	0aeH
	DB	0a1H
	DB	08dH
	DB	077H
	DB	067H
	DB	05dH
	DB	057H
	DB	054H
	DB	054H
	DB	054H
	DB	04cH
	DB	03cH
	DB	02cH
	DB	021H
	DB	01eH
	DB	01eH
	DB	02dH
	DB	04aH
	DB	062H
	DB	071H
	DB	071H
	DB	062H
	DB	059H
	DB	059H
	DB	05cH
	DB	05fH
	DB	05dH
	DB	05aH
	DB	058H
	DB	051H
	DB	049H
	DB	047H
	DB	048H
	DB	048H
	DB	04bH
	DB	04eH
	DB	04bH
	DB	04eH
	DB	057H
	DB	05cH
	DB	05fH
	DB	067H
	DB	06aH
	DB	063H
	DB	05bH
	DB	05fH
	DB	062H
	DB	05eH
	DB	060H
	DB	061H
	DB	061H
	DB	062H
	DB	065H
	DB	066H
	DB	05eH
	DB	056H
	DB	052H
	DB	04eH
	DB	04fH
	DB	051H
	DB	04dH
	DB	045H
	DB	041H
	DB	041H
	DB	045H
	DB	04cH
	DB	051H
	DB	054H
	DB	054H
	DB	056H
	DB	05fH
	DB	062H
	DB	067H
	DB	07fH
	DB	099H
	DB	0a9H
	DB	0baH
	DB	0c4H
	DB	0c2H
	DB	0bdH
	DB	0b7H
	DB	0afH
	DB	0abH
	DB	0b3H
	DB	0b8H
	DB	0b5H
	DB	0b5H
	DB	0b4H
	DB	0a9H
	DB	09dH
	DB	099H
	DB	09cH
	DB	09bH
	DB	097H
	DB	095H
	DB	096H
	DB	092H
	DB	08dH
	DB	089H
	DB	081H
	DB	07dH
	DB	08cH
	DB	09aH
	DB	0a1H
	DB	0a9H
	DB	0acH
	DB	0b0H
	DB	0b9H
	DB	0b7H
	DB	0adH
	DB	0a0H
	DB	091H
	DB	084H
	DB	079H
	DB	06fH
	DB	06bH
	DB	068H
	DB	067H
	DB	071H
	DB	07eH
	DB	07dH
	DB	073H
	DB	06cH
	DB	067H
	DB	06aH
	DB	073H
	DB	07bH
	DB	083H
	DB	08dH
	DB	099H
	DB	0a1H
	DB	0a4H
	DB	0a7H
	DB	0a8H
	DB	0a4H
	DB	0a1H
	DB	0a6H
	DB	0aeH
	DB	0b3H
	DB	0b8H
	DB	0c1H
	DB	0c1H
	DB	0beH
	DB	0c1H
	DB	0beH
	DB	0afH
	DB	09fH
	DB	094H
	DB	08eH
	DB	093H
	DB	0a0H
	DB	0a8H
	DB	0aaH
	DB	0a5H
	DB	09bH
	DB	08fH
	DB	08fH
	DB	0a1H
	DB	0acH
	DB	0b6H
	DB	0d2H
	DB	0e3H
	DB	0dcH
	DB	0d5H
	DB	0d3H
	DB	0ceH
	DB	0c1H
	DB	0b5H
	DB	0abH
	DB	09dH
	DB	093H
	DB	08aH
	DB	07eH
	DB	074H
	DB	068H
	DB	057H
	DB	04cH
	DB	044H
	DB	03eH
	DB	035H
	DB	02aH
	DB	021H
	DB	01eH
	DB	022H
	DB	035H
	DB	054H
	DB	065H
	DB	062H
	DB	05cH
	DB	058H
	DB	055H
	DB	05bH
	DB	067H
	DB	069H
	DB	05fH
	DB	056H
	DB	050H
	DB	053H
	DB	055H
	DB	051H
	DB	04bH
	DB	04aH
	DB	051H
	DB	05bH
	DB	05aH
	DB	058H
	DB	05dH
	DB	060H
	DB	060H
	DB	062H
	DB	064H
	DB	05fH
	DB	05bH
	DB	05fH
	DB	05dH
	DB	056H
	DB	05dH
	DB	065H
	DB	069H
	DB	071H
	DB	073H
	DB	070H
	DB	067H
	DB	057H
	DB	04fH
	DB	051H
	DB	04fH
	DB	04cH
	DB	048H
	DB	03dH
	DB	038H
	DB	03aH
	DB	040H
	DB	047H
	DB	04aH
	DB	04aH
	DB	04cH
	DB	050H
	DB	055H
	DB	05eH
	DB	072H
	DB	08cH
	DB	094H
	DB	092H
	DB	0a5H
	DB	0bbH
	DB	0bbH
	DB	0b6H
	DB	0b8H
	DB	0baH
	DB	0bbH
	DB	0bfH
	DB	0c8H
	DB	0c9H
	DB	0baH
	DB	0adH
	DB	0a9H
	DB	0a1H
	DB	09cH
	DB	09bH
	DB	097H
	DB	095H
	DB	099H
	DB	098H
	DB	092H
	DB	08dH
	DB	085H
	DB	07bH
	DB	07aH
	DB	08aH
	DB	09dH
	DB	0a2H
	DB	0a8H
	DB	0b6H
	DB	0bcH
	DB	0b8H
	DB	0b6H
	DB	0b3H
	DB	0a5H
	DB	090H
	DB	085H
	DB	086H
	DB	07fH
	DB	077H
	DB	077H
	DB	079H
	DB	080H
	DB	07eH
	DB	071H
	DB	067H
	DB	05dH
	DB	056H
	DB	057H
	DB	063H
	DB	075H
	DB	07fH
	DB	08aH
	DB	09aH
	DB	09cH
	DB	091H
	DB	08dH
	DB	093H
	DB	09dH
	DB	0a7H
	DB	0b3H
	DB	0beH
	DB	0c1H
	DB	0c1H
	DB	0c1H
	DB	0bdH
	DB	0b5H
	DB	0afH
	DB	0aaH
	DB	0a0H
	DB	097H
	DB	08eH
	DB	086H
	DB	089H
	DB	099H
	DB	0a5H
	DB	09eH
	DB	094H
	DB	091H
	DB	089H
	DB	084H
	DB	091H
	DB	0a0H
	DB	0acH
	DB	0c2H
	DB	0d5H
	DB	0dbH
	DB	0d9H
	DB	0d3H
	DB	0caH
	DB	0bdH
	DB	0b3H
	DB	0b4H
	DB	0b5H
	DB	0aaH
	DB	09cH
	DB	08cH
	DB	07aH
	DB	069H
	DB	057H
	DB	043H
	DB	03aH
	DB	039H
	DB	02cH
	DB	01dH
	DB	01bH
	DB	01fH
	DB	025H
	DB	034H
	DB	04bH
	DB	055H
	DB	051H
	DB	055H
	DB	05bH
	DB	05cH
	DB	060H
	DB	06aH
	DB	070H
	DB	066H
	DB	05cH
	DB	062H
	DB	066H
	DB	05dH
	DB	054H
	DB	053H
	DB	05aH
	DB	063H
	DB	06eH
	DB	077H
	DB	073H
	DB	06aH
	DB	064H
	DB	05bH
	DB	053H
	DB	057H
	DB	05dH
	DB	05dH
	DB	060H
	DB	061H
	DB	060H
	DB	066H
	DB	06cH
	DB	06eH
	DB	072H
	DB	073H
	DB	074H
	DB	071H
	DB	065H
	DB	061H
	DB	065H
	DB	05cH
	DB	053H
	DB	04dH
	DB	044H
	DB	03fH
	DB	042H
	DB	043H
	DB	044H
	DB	049H
	DB	04cH
	DB	049H
	DB	04bH
	DB	056H
	DB	05eH
	DB	066H
	DB	075H
	DB	080H
	DB	089H
	DB	0a2H
	DB	0bcH
	DB	0c4H
	DB	0c3H
	DB	0c0H
	DB	0bfH
	DB	0beH
	DB	0b9H
	DB	0bdH
	DB	0c1H
	DB	0b9H
	DB	0b2H
	DB	0aaH
	DB	09eH
	DB	098H
	DB	097H
	DB	097H
	DB	096H
	DB	095H
	DB	091H
	DB	08bH
	DB	085H
	DB	081H
	DB	082H
	DB	088H
	DB	094H
	DB	0a2H
	DB	0acH
	DB	0b5H
	DB	0b9H
	DB	0b9H
	DB	0b9H
	DB	0b7H
	DB	0b5H
	DB	0aeH
	DB	09eH
	DB	096H
	DB	093H
	DB	087H
	DB	07cH
	DB	076H
	DB	072H
	DB	073H
	DB	076H
	DB	073H
	DB	068H
	DB	05aH
	DB	04eH
	DB	048H
	DB	050H
	DB	062H
	DB	06fH
	DB	07dH
	DB	08cH
	DB	090H
	DB	090H
	DB	09bH
	DB	0a8H
	DB	0afH
	DB	0b8H
	DB	0c1H
	DB	0c7H
	DB	0caH
	DB	0c7H
	DB	0c7H
	DB	0c6H
	DB	0bcH
	DB	0b2H
	DB	0adH
	DB	0a4H
	DB	099H
	DB	091H
	DB	090H
	DB	095H
	DB	099H
	DB	09bH
	DB	09aH
	DB	096H
	DB	090H
	DB	086H
	DB	080H
	DB	088H
	DB	097H
	DB	0a9H
	DB	0c6H
	DB	0ddH
	DB	0e2H
	DB	0e0H
	DB	0d4H
	DB	0c6H
	DB	0c0H
	DB	0beH
	DB	0c3H
	DB	0c9H
	DB	0beH
	DB	0a7H
	DB	08eH
	DB	078H
	DB	065H
	DB	054H
	DB	049H
	DB	042H
	DB	037H
	DB	027H
	DB	01dH
	DB	01fH
	DB	024H
	DB	027H
	DB	02eH
	DB	03fH
	DB	04eH
	DB	059H
	DB	060H
	DB	062H
	DB	064H
	DB	066H
	DB	068H
	DB	06bH
	DB	068H
	DB	066H
	DB	06bH
	DB	067H
	DB	05aH
	DB	052H
	DB	054H
	DB	05aH
	DB	067H
	DB	073H
	DB	072H
	DB	06cH
	DB	060H
	DB	054H
	DB	052H
	DB	04bH
	DB	046H
	DB	04aH
	DB	050H
	DB	055H
	DB	058H
	DB	060H
	DB	070H
	DB	077H
	DB	078H
	DB	07bH
	DB	078H
	DB	072H
	DB	06cH
	DB	068H
	DB	06bH
	DB	06aH
	DB	05eH
	DB	04eH
	DB	041H
	DB	040H
	DB	042H
	DB	03eH
	DB	03eH
	DB	040H
	DB	03fH
	DB	040H
	DB	041H
	DB	041H
	DB	03fH
	DB	03aH
	DB	044H
	DB	059H
	DB	067H
	DB	074H
	DB	092H
	DB	0b3H
	DB	0bdH
	DB	0b9H
	DB	0b8H
	DB	0baH
	DB	0b8H
	DB	0baH
	DB	0c0H
	DB	0c1H
	DB	0bbH
	DB	0acH
	DB	09dH
	DB	09aH
	DB	098H
	DB	093H
	DB	091H
	DB	090H
	DB	08dH
	DB	08aH
	DB	089H
	DB	089H
	DB	084H
	DB	07fH
	DB	089H
	DB	09bH
	DB	0a3H
	DB	0a7H
	DB	0b0H
	DB	0baH
	DB	0b7H
	DB	0afH
	DB	0abH
	DB	0a4H
	DB	09eH
	DB	09bH
	DB	097H
	DB	096H
	DB	092H
	DB	087H
	DB	079H
	DB	070H
	DB	072H
	DB	075H
	DB	06fH
	DB	062H
	DB	055H
	DB	04dH
	DB	04bH
	DB	04aH
	DB	04fH
	DB	05aH
	DB	069H
	DB	07bH
	DB	088H
	DB	093H
	DB	0a2H
	DB	0b3H
	DB	0c1H
	DB	0c7H
	DB	0c8H
	DB	0c7H
	DB	0c7H
	DB	0c8H
	DB	0c8H
	DB	0c8H
	DB	0c2H
	DB	0b8H
	DB	0adH
	DB	0a4H
	DB	09bH
	DB	097H
	DB	09bH
	DB	09cH
	DB	091H
	DB	08dH
	DB	094H
	DB	090H
	DB	081H
	DB	073H
	DB	076H
	DB	083H
	DB	089H
	DB	09cH
	DB	0c3H
	DB	0deH
	DB	0e2H
	DB	0deH
	DB	0d3H
	DB	0c8H
	DB	0c9H
	DB	0d0H
	DB	0d6H
	DB	0d4H
	DB	0c5H
	DB	0b0H
	DB	099H
	DB	080H
	DB	066H
	DB	052H
	DB	046H
	DB	040H
	DB	035H
	DB	028H
	DB	027H
	DB	02bH
	DB	029H
	DB	025H
	DB	029H
	DB	039H
	DB	04bH
	DB	057H
	DB	05aH
	DB	060H
	DB	06dH
	DB	071H
	DB	06bH
	DB	069H
	DB	06cH
	DB	070H
	DB	071H
	DB	072H
	DB	06fH
	DB	069H
	DB	065H
	DB	068H
	DB	075H
	DB	078H
	DB	071H
	DB	06dH
	DB	060H
	DB	04eH
	DB	048H
	DB	048H
	DB	047H
	DB	049H
	DB	049H
	DB	04bH
	DB	05aH
	DB	06dH
	DB	078H
	DB	07cH
	DB	07eH
	DB	080H
	DB	079H
	DB	06bH
	DB	066H
	DB	06cH
	DB	06fH
	DB	06dH
	DB	069H
	DB	05fH
	DB	04fH
	DB	044H
	DB	041H
	DB	03eH
	DB	03dH
	DB	03cH
	DB	03cH
	DB	03fH
	DB	03eH
	DB	038H
	DB	034H
	DB	032H
	DB	035H
	DB	041H
	DB	053H
	DB	06cH
	DB	08cH
	DB	0a7H
	DB	0b4H
	DB	0c0H
	DB	0c9H
	DB	0c2H
	DB	0bdH
	DB	0c2H
	DB	0c8H
	DB	0ccH
	DB	0c4H
	DB	0b3H
	DB	0a8H
	DB	0a1H
	DB	09dH
	DB	097H
	DB	090H
	DB	091H
	DB	090H
	DB	08cH
	DB	091H
	DB	09aH
	DB	09cH
	DB	09aH
	DB	09dH
	DB	0a3H
	DB	0a6H
	DB	0afH
	DB	0b8H
	DB	0bcH
	DB	0beH
	DB	0b9H
	DB	0aeH
	DB	0a2H
	DB	09dH
	DB	09fH
	DB	0a5H
	DB	0acH
	DB	0aaH
	DB	09dH
	DB	08aH
	DB	07aH
	DB	07bH
	DB	07bH
	DB	06bH
	DB	05fH
	DB	05cH
	DB	053H
	DB	049H
	DB	047H
	DB	050H
	DB	059H
	DB	061H
	DB	072H
	DB	08cH
	DB	0a4H
	DB	0b2H
	DB	0baH
	DB	0c4H
	DB	0cbH
	DB	0c8H
	DB	0c4H
	DB	0c6H
	DB	0c7H
	DB	0c3H
	DB	0c2H
	DB	0c4H
	DB	0bfH
	DB	0b6H
	DB	0aeH
	DB	0adH
	DB	0aaH
	DB	0a1H
	DB	098H
	DB	08cH
	DB	07eH
	DB	077H
	DB	075H
	DB	074H
	DB	073H
	DB	072H
	DB	076H
	DB	07fH
	DB	090H
	DB	0b1H
	DB	0cfH
	DB	0dcH
	DB	0e4H
	DB	0e2H
	DB	0d4H
	DB	0ceH
	DB	0d4H
	DB	0d4H
	DB	0cdH
	DB	0c1H
	DB	0a9H
	DB	091H
	DB	07eH
	DB	067H
	DB	051H
	DB	040H
	DB	035H
	DB	031H
	DB	033H
	DB	033H
	DB	02eH
	DB	02bH
	DB	025H
	DB	026H
	DB	030H
	DB	039H
	DB	044H
	DB	054H
	DB	05eH
	DB	063H
	DB	064H
	DB	060H
	DB	060H
	DB	069H
	DB	073H
	DB	07fH
	DB	08aH
	DB	088H
	DB	081H
	DB	07dH
	DB	07bH
	DB	07bH
	DB	078H
	DB	06eH
	DB	061H
	DB	053H
	DB	047H
	DB	03eH
	DB	03cH
	DB	03fH
	DB	046H
	DB	055H
	DB	060H
	DB	063H
	DB	069H
	DB	070H
	DB	073H
	DB	073H
	DB	06aH
	DB	05fH
	DB	060H
	DB	066H
	DB	066H
	DB	066H
	DB	067H
	DB	064H
	DB	059H
	DB	04fH
	DB	04bH
	DB	042H
	DB	038H
	DB	035H
	DB	033H
	DB	02fH
	DB	027H
	DB	023H
	DB	023H
	DB	024H
	DB	027H
	DB	032H
	DB	03dH
	DB	048H
	DB	060H
	DB	082H
	DB	0a1H
	DB	0b8H
	DB	0c5H
	DB	0c6H
	DB	0c2H
	DB	0bfH
	DB	0baH
	DB	0b7H
	DB	0b9H
	DB	0baH
	DB	0b7H
	DB	0b5H
	DB	0afH
	DB	0a5H
	DB	09cH
	DB	09bH
	DB	09eH
	DB	09fH
	DB	0a2H
	DB	0a6H
	DB	0a7H
	DB	0a5H
	DB	0a3H
	DB	0a5H
	DB	0a6H
	DB	0a5H
	DB	0acH
	DB	0b5H
	DB	0afH
	DB	0a8H
	DB	0a5H
	DB	09fH
	DB	09cH
	DB	0a1H
	DB	0abH
	DB	0b2H
	DB	0b2H
	DB	0acH
	DB	09dH
	DB	08cH
	DB	083H
	DB	07bH
	DB	071H
	DB	06dH
	DB	06aH
	DB	05cH
	DB	04eH
	DB	046H
	DB	046H
	DB	052H
	DB	068H
	DB	07eH
	DB	08bH
	DB	091H
	DB	09cH
	DB	0acH
	DB	0b5H
	DB	0b9H
	DB	0b9H
	DB	0bcH
	DB	0c0H
	DB	0bfH
	DB	0bdH
	DB	0bbH
	DB	0b7H
	DB	0b8H
	DB	0b9H
	DB	0bcH
	DB	0c1H
	DB	0bdH
	DB	0a9H
	DB	091H
	DB	07fH
	DB	071H
	DB	066H
	DB	064H
	DB	06dH
	DB	073H
	DB	073H
	DB	078H
	DB	082H
	DB	08cH
	DB	09eH
	DB	0b8H
	DB	0cfH
	DB	0e1H
	DB	0e9H
	DB	0e9H
	DB	0e3H
	DB	0d6H
	DB	0c8H
	DB	0c0H
	DB	0bdH
	DB	0b0H
	DB	09bH
	DB	087H
	DB	073H
	DB	05fH
	DB	04eH
	DB	040H
	DB	03bH
	DB	03dH
	DB	036H
	DB	02cH
	DB	029H
	DB	028H
	DB	028H
	DB	02bH
	DB	02eH
	DB	033H
	DB	040H
	DB	051H
	DB	05bH
	DB	061H
	DB	065H
	DB	06aH
	DB	070H
	DB	07aH
	DB	085H
	DB	089H
	DB	089H
	DB	085H
	DB	080H
	DB	083H
	DB	082H
	DB	07eH
	DB	07cH
	DB	071H
	DB	060H
	DB	051H
	DB	03fH
	DB	031H
	DB	031H
	DB	03cH
	DB	050H
	DB	063H
	DB	068H
	DB	062H
	DB	05dH
	DB	05fH
	DB	060H
	DB	05bH
	DB	05bH
	DB	065H
	DB	06eH
	DB	074H
	DB	077H
	DB	074H
	DB	06eH
	DB	065H
	DB	060H
	DB	060H
	DB	05fH
	DB	056H
	DB	044H
	DB	034H
	DB	02bH
	DB	026H
	DB	023H
	DB	021H
	DB	01fH
	DB	024H
	DB	02eH
	DB	037H
	DB	043H
	DB	04bH
	DB	053H
	DB	06eH
	DB	090H
	DB	0a3H
	DB	0aeH
	DB	0b5H
	DB	0b2H
	DB	0b0H
	DB	0acH
	DB	0a5H
	DB	0a9H
	DB	0b0H
	DB	0b2H
	DB	0b6H
	DB	0b8H
	DB	0b6H
	DB	0b0H
	DB	0a9H
	DB	0a8H
	DB	0adH
	DB	0aeH
	DB	0abH
	DB	0a9H
	DB	0a7H
	DB	0a5H
	DB	0acH
	DB	0b2H
	DB	0a9H
	DB	0a5H
	DB	0aaH
	DB	0a9H
	DB	0a1H
	DB	09dH
	DB	09dH
	DB	09fH
	DB	0a7H
	DB	0aeH
	DB	0acH
	DB	09fH
	DB	096H
	DB	094H
	DB	08fH
	DB	084H
	DB	081H
	DB	087H
	DB	085H
	DB	07aH
	DB	072H
	DB	068H
	DB	056H
	DB	055H
	DB	064H
	DB	075H
	DB	088H
	DB	094H
	DB	092H
	DB	093H
	DB	09eH
	DB	0a8H
	DB	0b3H
	DB	0baH
	DB	0baH
	DB	0bcH
	DB	0c2H
	DB	0c1H
	DB	0b8H
	DB	0b3H
	DB	0baH
	DB	0c5H
	DB	0c6H
	DB	0c1H
	DB	0bdH
	DB	0adH
	DB	092H
	DB	07bH
	DB	06bH
	DB	060H
	DB	060H
	DB	070H
	DB	083H
	DB	08eH
	DB	097H
	DB	0a0H
	DB	099H
	DB	093H
	DB	0a2H
	DB	0b9H
	DB	0cfH
	DB	0daH
	DB	0d9H
	DB	0cfH
	DB	0c4H
	DB	0b9H
	DB	0aaH
	DB	09aH
	DB	08fH
	DB	083H
	DB	074H
	DB	067H
	DB	05eH
	DB	054H
	DB	04bH
	DB	046H
	DB	040H
	DB	035H
	DB	02cH
	DB	02cH
	DB	033H
	DB	035H
	DB	038H
	DB	03eH
	DB	041H
	DB	04bH
	DB	05cH
	DB	067H
	DB	069H
	DB	066H
	DB	067H
	DB	06aH
	DB	06eH
	DB	077H
	DB	07bH
	DB	075H
	DB	075H
	DB	078H
	DB	074H
	DB	06fH
	DB	074H
	DB	074H
	DB	068H
	DB	05aH
	DB	04aH
	DB	035H
	DB	029H
	DB	02eH
	DB	03dH
	DB	04aH
	DB	057H
	DB	061H
	DB	05cH
	DB	053H
	DB	054H
	DB	05bH
	DB	063H
	DB	06dH
	DB	078H
	DB	07fH
	DB	082H
	DB	07fH
	DB	076H
	DB	072H
	DB	071H
	DB	06cH
	DB	064H
	DB	05eH
	DB	058H
	DB	04bH
	DB	03aH
	DB	02eH
	DB	027H
	DB	01fH
	DB	018H
	DB	023H
	DB	036H
	DB	03eH
	DB	047H
	DB	053H
	DB	053H
	DB	057H
	DB	074H
	DB	094H
	DB	0a4H
	DB	0b0H
	DB	0b5H
	DB	0adH
	DB	0a8H
	DB	0a8H
	DB	0a7H
	DB	0adH
	DB	0bcH
	DB	0c4H
	DB	0bfH
	DB	0b9H
	DB	0bbH
	DB	0c3H
	DB	0c4H
	DB	0bdH
	DB	0b9H
	DB	0b3H
	DB	0aeH
	DB	0b1H
	DB	0b8H
	DB	0beH
	DB	0c1H
	DB	0bdH
	DB	0acH
	DB	09cH
	DB	09dH
	DB	0a1H
	DB	09dH
	DB	09bH
	DB	09bH
	DB	097H
	DB	096H
	DB	096H
	DB	095H
	DB	094H
	DB	091H
	DB	08aH
	DB	083H
	DB	082H
	DB	08aH
	DB	095H
	DB	097H
	DB	08bH
	DB	07aH
	DB	06aH
	DB	061H
	DB	067H
	DB	06eH
	DB	073H
	DB	082H
	DB	093H
	DB	091H
	DB	08dH
	DB	09eH
	DB	0b7H
	DB	0bcH
	DB	0b7H
	DB	0b1H
	DB	0abH
	DB	0acH
	DB	0afH
	DB	0b1H
	DB	0b9H
	DB	0beH
	DB	0bdH
	DB	0b8H
	DB	0b2H
	DB	0aeH
	DB	0a6H
	DB	097H
	DB	085H
	DB	07bH
	DB	07cH
	DB	082H
	DB	08fH
	DB	09fH
	DB	0a8H
	DB	0abH
	DB	0aaH
	DB	0a4H
	DB	09dH
	DB	0a2H
	DB	0b7H
	DB	0cbH
	DB	0cfH
	DB	0caH
	DB	0bfH
	DB	0b3H
	DB	0a9H
	DB	097H
	DB	086H
	DB	07dH
	DB	06fH
	DB	05dH
	DB	055H
	DB	054H
	DB	053H
	DB	04eH
	DB	045H
	DB	03cH
	DB	039H
	DB	03cH
	DB	03eH
	DB	03dH
	DB	03fH
	DB	04aH
	DB	053H
	DB	058H
	DB	05cH
	DB	061H
	DB	06cH
	DB	071H
	DB	06aH
	DB	064H
	DB	063H
	DB	05fH
	DB	061H
	DB	06cH
	DB	071H
	DB	06fH
	DB	06eH
	DB	06aH
	DB	060H
	DB	059H
	DB	059H
	DB	054H
	DB	046H
	DB	03aH
	DB	031H
	DB	02dH
	DB	035H
	DB	03cH
	DB	044H
	DB	054H
	DB	05dH
	DB	05fH
	DB	061H
	DB	064H
	DB	06cH
	DB	074H
	DB	077H
	DB	079H
	DB	07bH
	DB	079H
	DB	072H
	DB	06cH
	DB	06fH
	DB	06fH
	DB	063H
	DB	055H
	DB	04bH
	DB	048H
	DB	046H
	DB	03dH
	DB	032H
	DB	028H
	DB	01eH
	DB	01eH
	DB	026H
	DB	02eH
	DB	03aH
	DB	049H
	DB	052H
	DB	05bH
	DB	067H
	DB	077H
	DB	08fH
	DB	0a1H
	DB	0a5H
	DB	0a7H
	DB	0abH
	DB	0a9H
	DB	0a3H
	DB	0a8H
	DB	0b3H
	DB	0b8H
	DB	0baH
	DB	0b7H
	DB	0b0H
	DB	0b2H
	DB	0b5H
	DB	0b0H
	DB	0acH
	DB	0b2H
	DB	0b9H
	DB	0b9H
	DB	0b5H
	DB	0b5H
	DB	0bbH
	DB	0bfH
	DB	0bcH
	DB	0b5H
	DB	0aaH
	DB	0a3H
	DB	0a2H
	DB	09fH
	DB	0a0H
	DB	0a3H
	DB	09aH
	DB	08bH
	DB	07fH
	DB	082H
	DB	08eH
	DB	095H
	DB	092H
	DB	08aH
	DB	086H
	DB	08bH
	DB	092H
	DB	091H
	DB	086H
	DB	080H
	DB	07eH
	DB	07bH
	DB	076H
	DB	073H
	DB	07aH
	DB	08eH
	DB	09dH
	DB	0a3H
	DB	0a6H
	DB	0abH
	DB	0b2H
	DB	0b5H
	DB	0b2H
	DB	0adH
	DB	0acH
	DB	0acH
	DB	0a7H
	DB	0aaH
	DB	0b9H
	DB	0bcH
	DB	0adH
	DB	09eH
	DB	098H
	DB	09bH
	DB	09dH
	DB	097H
	DB	08cH
	DB	085H
	DB	086H
	DB	08dH
	DB	090H
	DB	091H
	DB	09bH
	DB	0afH
	DB	0bbH
	DB	0baH
	DB	0b1H
	DB	0b1H
	DB	0bdH
	DB	0c4H
	DB	0c1H
	DB	0beH
	DB	0b7H
	DB	0a7H
	DB	092H
	DB	07fH
	DB	073H
	DB	06eH
	DB	06bH
	DB	062H
	DB	05aH
	DB	057H
	DB	052H
	DB	047H
	DB	040H
	DB	042H
	DB	04bH
	DB	053H
	DB	051H
	DB	04fH
	DB	053H
	DB	05dH
	DB	06bH
	DB	072H
	DB	06aH
	DB	064H
	DB	06bH
	DB	06eH
	DB	06dH
	DB	06eH
	DB	06aH
	DB	065H
	DB	060H
	DB	05cH
	DB	060H
	DB	063H
	DB	05bH
	DB	050H
	DB	047H
	DB	03fH
	DB	03dH
	DB	03fH
	DB	03dH
	DB	03bH
	DB	03cH
	DB	03dH
	DB	039H
	DB	034H
	DB	03dH
	DB	058H
	DB	074H
	DB	07eH
	DB	079H
	DB	073H
	DB	076H
	DB	07bH
	DB	082H
	DB	088H
	DB	083H
	DB	07bH
	DB	078H
	DB	072H
	DB	06fH
	DB	06dH
	DB	062H
	DB	055H
	DB	04dH
	DB	048H
	DB	041H
	DB	036H
	DB	02bH
	DB	022H
	DB	01cH
	DB	01cH
	DB	023H
	DB	02dH
	DB	03fH
	DB	057H
	DB	069H
	DB	071H
	DB	070H
	DB	075H
	DB	08dH
	DB	0a4H
	DB	0aaH
	DB	0abH
	DB	0a9H
	DB	0a2H
	DB	0a1H
	DB	0a4H
	DB	0a4H
	DB	0a6H
	DB	0a8H
	DB	0a9H
	DB	0a9H
	DB	0a8H
	DB	0a6H
	DB	0a4H
	DB	0a7H
	DB	0afH
	DB	0b2H
	DB	0adH
	DB	0acH
	DB	0aeH
	DB	0b5H
	DB	0c0H
	DB	0beH
	DB	0b4H
	DB	0acH
	DB	0a7H
	DB	0a4H
	DB	09eH
	DB	09aH
	DB	097H
	DB	091H
	DB	08bH
	DB	083H
	DB	081H
	DB	086H
	DB	084H
	DB	07cH
	DB	080H
	DB	088H
	DB	087H
	DB	088H
	DB	089H
	DB	081H
	DB	07dH
	DB	083H
	DB	089H
	DB	08aH
	DB	084H
	DB	085H
	DB	09aH
	DB	0acH
	DB	0acH
	DB	0a9H
	DB	0acH
	DB	0aeH
	DB	0aeH
	DB	0b4H
	DB	0b9H
	DB	0baH
	DB	0bbH
	DB	0b8H
	DB	0b4H
	DB	0b7H
	DB	0b5H
	DB	0abH
	DB	0a7H
	DB	0a4H
	DB	09fH
	DB	09aH
	DB	090H
	DB	086H
	DB	088H
	DB	08cH
	DB	08aH
	DB	08cH
	DB	08eH
	DB	097H
	DB	0b2H
	DB	0c2H
	DB	0bfH
	DB	0b9H
	DB	0b4H
	DB	0baH
	DB	0c2H
	DB	0bdH
	DB	0b5H
	DB	0abH
	DB	09bH
	DB	089H
	DB	07bH
	DB	074H
	DB	070H
	DB	070H
	DB	06fH
	DB	066H
	DB	05dH
	DB	055H
	DB	04dH
	DB	048H
	DB	047H
	DB	04eH
	DB	056H
	DB	054H
	DB	056H
	DB	068H
	DB	079H
	DB	07bH
	DB	071H
	DB	064H
	DB	05eH
	DB	062H
	DB	069H
	DB	06bH
	DB	069H
	DB	064H
	DB	060H
	DB	05dH
	DB	056H
	DB	04fH
	DB	04eH
	DB	048H
	DB	03aH
	DB	034H
	DB	036H
	DB	039H
	DB	041H
	DB	045H
	DB	041H
	DB	03eH
	DB	03cH
	DB	03cH
	DB	03eH
	DB	046H
	DB	05cH
	DB	070H
	DB	06fH
	DB	06aH
	DB	072H
	DB	07eH
	DB	083H
	DB	082H
	DB	082H
	DB	080H
	DB	07bH
	DB	079H
	DB	079H
	DB	07aH
	DB	077H
	DB	06eH
	DB	063H
	DB	055H
	DB	048H
	DB	03fH
	DB	036H
	DB	02cH
	DB	022H
	DB	01bH
	DB	01fH
	DB	02bH
	DB	039H
	DB	047H
	DB	05eH
	DB	070H
	DB	070H
	DB	06dH
	DB	06fH
	DB	080H
	DB	093H
	DB	094H
	DB	093H
	DB	099H
	DB	09bH
	DB	09aH
	DB	096H
	DB	096H
	DB	09aH
	DB	09dH
	DB	09dH
	DB	0a0H
	DB	0a7H
	DB	0a8H
	DB	0a6H
	DB	0abH
	DB	0b0H
	DB	0abH
	DB	0a3H
	DB	0a1H
	DB	0a7H
	DB	0b2H
	DB	0c1H
	DB	0c4H
	DB	0b8H
	DB	0afH
	DB	0a6H
	DB	0a3H
	DB	0a6H
	DB	0a2H
	DB	09cH
	DB	095H
	DB	089H
	DB	07eH
	DB	079H
	DB	07dH
	DB	084H
	DB	08aH
	DB	089H
	DB	084H
	DB	084H
	DB	089H
	DB	090H
	DB	092H
	DB	08bH
	DB	08aH
	DB	08fH
	DB	092H
	DB	094H
	DB	096H
	DB	09dH
	DB	0a7H
	DB	0a4H
	DB	09eH
	DB	09fH
	DB	0a6H
	DB	0b0H
	DB	0b6H
	DB	0bcH
	DB	0c1H
	DB	0c4H
	DB	0c6H
	DB	0c6H
	DB	0c5H
	DB	0c3H
	DB	0b8H
	DB	0a9H
	DB	0a0H
	DB	09bH
	DB	095H
	DB	097H
	DB	09cH
	DB	096H
	DB	08cH
	DB	089H
	DB	08aH
	DB	08eH
	DB	093H
	DB	0a4H
	DB	0b7H
	DB	0bbH
	DB	0b5H
	DB	0adH
	DB	0a9H
	DB	0abH
	DB	0a5H
	DB	099H
	DB	094H
	DB	08eH
	DB	082H
	DB	076H
	DB	070H
	DB	074H
	DB	077H
	DB	073H
	DB	06fH
	DB	06cH
	DB	063H
	DB	057H
	DB	050H
	DB	04eH
	DB	050H
	DB	054H
	DB	062H
	DB	072H
	DB	078H
	DB	07dH
	DB	07dH
	DB	071H
	DB	067H
	DB	062H
	DB	05eH
	DB	066H
	DB	06bH
	DB	066H
	DB	066H
	DB	067H
	DB	05eH
	DB	04eH
	DB	042H
	DB	043H
	DB	046H
	DB	042H
	DB	03dH
	DB	037H
	DB	038H
	DB	046H
	DB	050H
	DB	050H
	DB	04cH
	DB	043H
	DB	03eH
	DB	03aH
	DB	035H
	DB	045H
	DB	05cH
	DB	065H
	DB	071H
	DB	07bH
	DB	07aH
	DB	07bH
	DB	07fH
	DB	083H
	DB	085H
	DB	085H
	DB	084H
	DB	081H
	DB	082H
	DB	082H
	DB	07bH
	DB	06dH
	DB	05cH
	DB	04cH
	DB	03fH
	DB	037H
	DB	034H
	DB	030H
	DB	02bH
	DB	02eH
	DB	03cH
	DB	047H
	DB	04cH
	DB	05fH
	DB	06eH
	DB	069H
	DB	05fH
	DB	059H
	DB	05eH
	DB	070H
	DB	078H
	DB	07cH
	DB	089H
	DB	092H
	DB	090H
	DB	089H
	DB	085H
	DB	08bH
	DB	092H
	DB	099H
	DB	0a0H
	DB	0a7H
	DB	0a9H
	DB	0a6H
	DB	0a5H
	DB	0abH
	DB	0aaH
	DB	0a4H
	DB	0a6H
	DB	0aaH
	DB	0acH
	DB	0b0H
	DB	0b5H
	DB	0b5H
	DB	0b1H
	DB	0abH
	DB	0a5H
	DB	0a3H
	DB	09dH
	DB	091H
	DB	086H
	DB	084H
	DB	085H
	DB	07dH
	DB	077H
	DB	083H
	DB	091H
	DB	091H
	DB	08eH
	DB	08eH
	DB	08bH
	DB	08bH
	DB	091H
	DB	096H
	DB	098H
	DB	09bH
	DB	0a1H
	DB	09fH
	DB	098H
	DB	09cH
	DB	0a7H
	DB	0adH
	DB	0afH
	DB	0aeH
	DB	0aaH
	DB	0afH
	DB	0b5H
	DB	0b9H
	DB	0bfH
	DB	0c7H
	DB	0cdH
	DB	0cbH
	DB	0bfH
	DB	0b6H
	DB	0b1H
	DB	0acH
	DB	0a9H
	DB	0a4H
	DB	0a1H
	DB	0a5H
	DB	0a7H
	DB	0a3H
	DB	09cH
	DB	09aH
	DB	09eH
	DB	09dH
	DB	09aH
	DB	09eH
	DB	0a8H
	DB	0afH
	DB	0acH
	DB	0a3H
	DB	09bH
	DB	09cH
	DB	09eH
	DB	097H
	DB	091H
	DB	08fH
	DB	089H
	DB	07fH
	DB	077H
	DB	073H
	DB	075H
	DB	07dH
	DB	07fH
	DB	071H
	DB	060H
	DB	054H
	DB	051H
	DB	055H
	DB	058H
	DB	062H
	DB	07bH
	DB	085H
	DB	07dH
	DB	07dH
	DB	080H
	DB	079H
	DB	06fH
	DB	062H
	DB	05aH
	DB	05cH
	DB	05eH
	DB	05cH
	DB	057H
	DB	057H
	DB	05bH
	DB	055H
	DB	049H
	DB	042H
	DB	03dH
	DB	03dH
	DB	03cH
	DB	037H
	DB	032H
	DB	031H
	DB	03aH
	DB	042H
	DB	03dH
	DB	033H
	DB	02eH
	DB	02eH
	DB	02fH
	DB	036H
	DB	04aH
	DB	063H
	DB	073H
	DB	074H
	DB	074H
	DB	078H
	DB	079H
	DB	077H
	DB	078H
	DB	07cH
	DB	082H
	DB	084H
	DB	07fH
	DB	075H
	DB	06cH
	DB	06cH
	DB	06bH
	DB	05dH
	DB	04dH
	DB	041H
	DB	03dH
	DB	03bH
	DB	036H
	DB	03bH
	DB	04bH
	DB	053H
	DB	055H
	DB	05bH
	DB	060H
	DB	05eH
	DB	05cH
	DB	05bH
	DB	058H
	DB	05dH
	DB	073H
	DB	086H
	DB	087H
	DB	083H
	DB	088H
	DB	08eH
	DB	08dH
	DB	08aH
	DB	08cH
	DB	095H
	DB	09eH
	DB	0a1H
	DB	09eH
	DB	099H
	DB	09fH
	DB	0abH
	DB	0a9H
	DB	0a6H
	DB	0aeH
	DB	0b2H
	DB	0acH
	DB	0abH
	DB	0aeH
	DB	0b1H
	DB	0b1H
	DB	0a8H
	DB	09cH
	DB	093H
	DB	089H
	DB	083H
	DB	082H
	DB	07eH
	DB	080H
	DB	089H
	DB	08fH
	DB	08aH
	DB	084H
	DB	087H
	DB	08dH
	DB	08dH
	DB	085H
	DB	083H
	DB	08aH
	DB	091H
	DB	094H
	DB	096H
	DB	09cH
	DB	0a5H
	DB	0a9H
	DB	0a9H
	DB	0aeH
	DB	0b5H
	DB	0b9H
	DB	0b8H
	DB	0afH
	DB	0a9H
	DB	0afH
	DB	0b6H
	DB	0b8H
	DB	0b9H
	DB	0bdH
	DB	0bfH
	DB	0baH
	DB	0b2H
	DB	0abH
	DB	0a7H
	DB	0abH
	DB	0b0H
	DB	0b0H
	DB	0abH
	DB	0adH
	DB	0b3H
	DB	0afH
	DB	0acH
	DB	0b0H
	DB	0adH
	DB	0aaH
	DB	0acH
	DB	0aeH
	DB	0b0H
	DB	0b5H
	DB	0b6H
	DB	0adH
	DB	0a2H
	DB	09cH
	DB	09aH
	DB	09aH
	DB	091H
	DB	086H
	DB	086H
	DB	086H
	DB	080H
	DB	077H
	DB	073H
	DB	072H
	DB	06aH
	DB	060H
	DB	059H
	DB	055H
	DB	057H
	DB	062H
	DB	075H
	DB	087H
	DB	08bH
	DB	086H
	DB	086H
	DB	087H
	DB	087H
	DB	07fH
	DB	070H
	DB	066H
	DB	05fH
	DB	05eH
	DB	063H
	DB	065H
	DB	061H
	DB	05fH
	DB	05fH
	DB	05aH
	DB	052H
	DB	044H
	DB	034H
	DB	02eH
	DB	02dH
	DB	028H
	DB	023H
	DB	02aH
	DB	032H
	DB	02fH
	DB	02cH
	DB	02fH
	DB	02dH
	DB	02eH
	DB	041H
	DB	05bH
	DB	06aH
	DB	073H
	DB	07cH
	DB	07bH
	DB	075H
	DB	073H
	DB	076H
	DB	075H
	DB	07aH
	DB	07eH
	DB	07aH
	DB	078H
	DB	07aH
	DB	077H
	DB	06eH
	DB	064H
	DB	05aH
	DB	04eH
	DB	044H
	DB	03fH
	DB	039H
	DB	035H
	DB	03eH
	DB	04fH
	DB	056H
	DB	057H
	DB	05dH
	DB	061H
	DB	060H
	DB	05dH
	DB	058H
	DB	056H
	DB	05dH
	DB	070H
	DB	082H
	DB	082H
	DB	07eH
	DB	081H
	DB	088H
	DB	08fH
	DB	094H
	DB	093H
	DB	090H
	DB	08fH
	DB	08eH
	DB	096H
	DB	09fH
	DB	0a2H
	DB	0a8H
	DB	0aaH
	DB	0abH
	DB	0aeH
	DB	0aeH
	DB	0aaH
	DB	0a9H
	DB	0aeH
	DB	0b2H
	DB	0b1H
	DB	0afH
	DB	0a7H
	DB	098H
	DB	091H
	DB	08dH
	DB	082H
	DB	085H
	DB	094H
	DB	09cH
	DB	09bH
	DB	097H
	DB	08dH
	DB	086H
	DB	086H
	DB	081H
	DB	079H
	DB	079H
	DB	07fH
	DB	082H
	DB	088H
	DB	095H
	DB	0a6H
	DB	0b2H
	DB	0b8H
	DB	0c1H
	DB	0c3H
	DB	0c0H
	DB	0bfH
	DB	0b8H
	DB	0aeH
	DB	0acH
	DB	0afH
	DB	0b4H
	DB	0b7H
	DB	0b8H
	DB	0b5H
	DB	0b2H
	DB	0b3H
	DB	0acH
	DB	0a3H
	DB	0a3H
	DB	0aaH
	DB	0acH
	DB	0a9H
	DB	0a8H
	DB	0acH
	DB	0abH
	DB	0a8H
	DB	0a7H
	DB	0a9H
	DB	0a7H
	DB	0a2H
	DB	0a2H
	DB	0a5H
	DB	0aaH
	DB	0aeH
	DB	0aeH
	DB	0a8H
	DB	09bH
	DB	091H
	DB	08dH
	DB	089H
	DB	07eH
	DB	073H
	DB	075H
	DB	07dH
	DB	07dH
	DB	076H
	DB	06cH
	DB	064H
	DB	05bH
	DB	04fH
	DB	04aH
	DB	04fH
	DB	05aH
	DB	06dH
	DB	080H
	DB	08cH
	DB	092H
	DB	095H
	DB	099H
	DB	093H
	DB	086H
	DB	07fH
	DB	076H
	DB	06bH
	DB	069H
	DB	06dH
	DB	070H
	DB	06bH
	DB	062H
	DB	060H
	DB	05eH
	DB	054H
	DB	048H
	DB	039H
	DB	02bH
	DB	024H
	DB	01eH
	DB	016H
	DB	015H
	DB	019H
	DB	01eH
	DB	028H
	DB	02eH
	DB	02aH
	DB	030H
	DB	046H
	DB	05bH
	DB	068H
	DB	071H
	DB	07eH
	DB	088H
	DB	084H
	DB	080H
	DB	07fH
	DB	07eH
	DB	07eH
	DB	07eH
	DB	081H
	DB	089H
	DB	08aH
	DB	084H
	DB	07dH
	DB	071H
	DB	066H
	DB	05cH
	DB	04dH
	DB	043H
	DB	039H
	DB	034H
	DB	03eH
	DB	048H
	DB	050H
	DB	059H
	DB	05aH
	DB	05dH
	DB	05fH
	DB	057H
	DB	059H
	DB	063H
	DB	063H
	DB	062H
	DB	06eH
	DB	07bH
	DB	081H
	DB	07fH
	DB	07dH
	DB	07fH
	DB	085H
	DB	089H
	DB	089H
	DB	08cH
	DB	094H
	DB	097H
	DB	098H
	DB	09cH
	DB	09dH
	DB	09eH
	DB	0a5H
	DB	0acH
	DB	0acH
	DB	0a6H
	DB	0a2H
	DB	0a6H
	DB	0aaH
	DB	0a6H
	DB	0a2H
	DB	0a2H
	DB	09dH
	DB	098H
	DB	095H
	DB	091H
	DB	092H
	DB	093H
	DB	098H
	DB	0a2H
	DB	0a4H
	DB	09dH
	DB	096H
	DB	08cH
	DB	081H
	DB	078H
	DB	070H
	DB	069H
	DB	06cH
	DB	07bH
	DB	091H
	DB	0a3H
	DB	0aaH
	DB	0b1H
	DB	0baH
	DB	0c0H
	DB	0c3H
	DB	0c0H
	DB	0bdH
	DB	0bbH
	DB	0b6H
	DB	0b5H
	DB	0b5H
	DB	0b5H
	DB	0bcH
	DB	0bfH
	DB	0bdH
	DB	0bdH
	DB	0b6H
	DB	0adH
	DB	0aeH
	DB	0b0H
	DB	0b0H
	DB	0b1H
	DB	0b2H
	DB	0aeH
	DB	0a5H
	DB	0a0H
	DB	0a3H
	DB	0a7H
	DB	0a4H
	DB	09eH
	DB	09dH
	DB	0a2H
	DB	0a5H
	DB	0a0H
	DB	09bH
	DB	099H
	DB	08eH
	DB	085H
	DB	089H
	DB	08cH
	DB	084H
	DB	07cH
	DB	074H
	DB	06eH
	DB	06dH
	DB	06cH
	DB	06aH
	DB	066H
	DB	061H
	DB	05bH
	DB	057H
	DB	053H
	DB	055H
	DB	05eH
	DB	072H
	DB	087H
	DB	091H
	DB	092H
	DB	090H
	DB	08eH
	DB	08cH
	DB	082H
	DB	077H
	DB	073H
	DB	071H
	DB	070H
	DB	06dH
	DB	06aH
	DB	06cH
	DB	067H
	DB	05bH
	DB	057H
	DB	050H
	DB	043H
	DB	036H
	DB	02aH
	DB	01dH
	DB	012H
	DB	09H
	DB	05H
	DB	0dH
	DB	01bH
	DB	026H
	DB	030H
	DB	036H
	DB	038H
	DB	044H
	DB	05bH
	DB	06eH
	DB	075H
	DB	077H
	DB	079H
	DB	07bH
	DB	081H
	DB	086H
	DB	087H
	DB	08aH
	DB	090H
	DB	090H
	DB	090H
	DB	08eH
	DB	085H
	DB	078H
	DB	069H
	DB	05cH
	DB	053H
	DB	048H
	DB	03eH
	DB	03aH
	DB	039H
	DB	03dH
	DB	046H
	DB	04eH
	DB	053H
	DB	05cH
	DB	063H
	DB	065H
	DB	068H
	DB	06bH
	DB	06aH
	DB	06bH
	DB	06fH
	DB	077H
	DB	081H
	DB	087H
	DB	087H
	DB	083H
	DB	081H
	DB	084H
	DB	085H
	DB	086H
	DB	088H
	DB	08eH
	DB	095H
	DB	096H
	DB	095H
	DB	096H
	DB	099H
	DB	0a1H
	DB	0a9H
	DB	0a9H
	DB	0a3H
	DB	09dH
	DB	09dH
	DB	09fH
	DB	09cH
	DB	098H
	DB	09bH
	DB	0a0H
	DB	0a1H
	DB	0a4H
	DB	0a9H
	DB	0aaH
	DB	0acH
	DB	0acH
	DB	0adH
	DB	0adH
	DB	0a6H
	DB	098H
	DB	089H
	DB	080H
	DB	077H
	DB	06dH
	DB	06dH
	DB	079H
	DB	086H
	DB	091H
	DB	09cH
	DB	0a0H
	DB	0a1H
	DB	0a6H
	DB	0aeH
	DB	0b8H
	DB	0bfH
	DB	0bdH
	DB	0baH
	DB	0b9H
	DB	0b2H
	DB	0adH
	DB	0b6H
	DB	0c1H
	DB	0cbH
	DB	0ccH
	DB	0c6H
	DB	0c5H
	DB	0c4H
	DB	0c0H
	DB	0bbH
	DB	0b6H
	DB	0b4H
	DB	0b1H
	DB	0afH
	DB	0adH
	DB	0a8H
	DB	0a6H
	DB	0a9H
	DB	0abH
	DB	0aaH
	DB	0a9H
	DB	0a8H
	DB	0a5H
	DB	09aH
	DB	08fH
	DB	086H
	DB	080H
	DB	07eH
	DB	082H
	DB	085H
	DB	082H
	DB	07cH
	DB	071H
	DB	065H
	DB	065H
	DB	066H
	DB	062H
	DB	062H
	DB	062H
	DB	061H
	DB	060H
	DB	063H
	DB	068H
	DB	06cH
	DB	077H
	DB	083H
	DB	086H
	DB	084H
	DB	082H
	DB	084H
	DB	087H
	DB	083H
	DB	07bH
	DB	079H
	DB	079H
	DB	075H
	DB	06eH
	DB	069H
	DB	063H
	DB	05fH
	DB	059H
	DB	055H
	DB	051H
	DB	045H
	DB	037H
	DB	02bH
	DB	01dH
	DB	011H
	DB	0cH
	DB	010H
	DB	01aH
	DB	021H
	DB	02aH
	DB	037H
	DB	03dH
	DB	043H
	DB	04dH
	DB	05bH
	DB	06bH
	DB	076H
	DB	078H
	DB	07dH
	DB	080H
	DB	082H
	DB	086H
	DB	08cH
	DB	091H
	DB	092H
	DB	08fH
	DB	08eH
	DB	088H
	DB	07cH
	DB	06fH
	DB	060H
	DB	050H
	DB	045H
	DB	03eH
	DB	03bH
	DB	039H
	DB	034H
	DB	032H
	DB	038H
	DB	041H
	DB	04aH
	DB	056H
	DB	060H
	DB	06dH
	DB	074H
$SG3442	DB	'HD-Audio Interrupt fired++', 0aH, 00H
	ORG $+4
$SG3467	DB	'HD Audio: No supported RIRB size !!', 0aH, 00H
	ORG $+3
$SG3508	DB	'Initializing Output Codec -> %d, Node -> %d', 0aH, 00H
	ORG $+3
$SG3562	DB	'output', 00H
	ORG $+1
$SG3564	DB	'input', 00H
	ORG $+2
$SG3566	DB	'mixer', 00H
	ORG $+2
$SG3568	DB	'selector', 00H
	ORG $+3
$SG3572	DB	'power', 00H
	ORG $+6
$SG3570	DB	'pin complex', 00H
	ORG $+4
$SG3574	DB	'volume knob', 00H
	ORG $+4
$SG3576	DB	'beep generator', 00H
	ORG $+1
$SG3578	DB	'vendor defined', 00H
	ORG $+1
$SG3580	DB	'unknown', 00H
$SG3592	DB	'Volume Knob Widget-> vol -> %d, direct -> %d', 0aH, 00H
	ORG $+2
$SG3594	DB	'Mixer found', 0aH, 00H
	ORG $+3
$SG3606	DB	'[HD_Audio]: Num Function Group -> %d, fg_start -> %d', 0aH
	DB	00H
	ORG $+2
$SG3608	DB	'[HD-Audio]:Widget device id -> %x, vendor id -> %x', 0aH
	DB	00H
	ORG $+4
$SG3610	DB	'[HD-Audio]:Widget version -> %d.%d, r0%d', 0aH, 00H
	ORG $+6
$SG3614	DB	'Widget start -> %d, num widhets -> %d', 0aH, 00H
	ORG $+1
$SG3616	DB	'FG not audio group', 0aH, 00H
	ORG $+4
$SG3646	DB	'No HD-Audio was found', 0aH, 00H
	ORG $+1
$SG3649	DB	'HD Audio found vendor -> %x, device -> %x', 0aH, 00H
	ORG $+5
$SG3650	DB	'HD-Audio interrupt line -> %d', 0aH, 00H
	ORG $+1
$SG3663	DB	'HD-Audio 64-OK', 0aH, 00H
$SG3673	DB	'IHD Audio Initialized successfully', 0aH, 00H
CONST	ENDS
PUBLIC	?hda_initialize@@YAXXZ				; hda_initialize
PUBLIC	?hda_set_volume@@YAXE@Z				; hda_set_volume
PUBLIC	?_aud_outl_@@YAXHI@Z				; _aud_outl_
PUBLIC	?_aud_inl_@@YAIH@Z				; _aud_inl_
PUBLIC	?_aud_outw_@@YAXHG@Z				; _aud_outw_
PUBLIC	?_aud_inw_@@YAGH@Z				; _aud_inw_
PUBLIC	?_aud_outb_@@YAXHE@Z				; _aud_outb_
PUBLIC	?_aud_inb_@@YAEH@Z				; _aud_inb_
PUBLIC	?hda_handler@@YAX_KPEAX@Z			; hda_handler
PUBLIC	?setup_corb@@YAXXZ				; setup_corb
PUBLIC	?setup_rirb@@YAXXZ				; setup_rirb
PUBLIC	?init_output@@YAXXZ				; init_output
PUBLIC	?hda_init_output_stream@@YAXXZ			; hda_init_output_stream
PUBLIC	?widget_init@@YAXHH@Z				; widget_init
PUBLIC	?hda_reset@@YAXXZ				; hda_reset
PUBLIC	?hda_output_start@@YAXXZ			; hda_output_start
PUBLIC	?hda_output_stop@@YAXXZ				; hda_output_stop
PUBLIC	?hda_audio_add_pcm@@YAXXZ			; hda_audio_add_pcm
EXTRN	x64_cli:PROC
EXTRN	x64_sti:PROC
EXTRN	?interrupt_end@@YAXI@Z:PROC			; interrupt_end
EXTRN	?interrupt_set@@YAX_KP6AX0PEAX@ZE@Z:PROC	; interrupt_set
EXTRN	?pci_find_device_class@@YA_NEEPEATpci_device_info@@PEAH11@Z:PROC ; pci_find_device_class
EXTRN	?pci_alloc_msi@@YA_NHHHP6AX_KPEAX@Z@Z:PROC	; pci_alloc_msi
EXTRN	?pmmngr_alloc@@YAPEAXXZ:PROC			; pmmngr_alloc
EXTRN	?map_page@@YA_N_K0E@Z:PROC			; map_page
EXTRN	?get_physical_address@@YAPEA_K_K@Z:PROC		; get_physical_address
EXTRN	?memset@@YAXPEAXEI@Z:PROC			; memset
EXTRN	memcpy:PROC
EXTRN	?printf@@YAXPEBDZZ:PROC				; printf
EXTRN	__ImageBase:BYTE
pdata	SEGMENT
$pdata$?hda_initialize@@YAXXZ DD imagerel $LN14
	DD	imagerel $LN14+715
	DD	imagerel $unwind$?hda_initialize@@YAXXZ
$pdata$?hda_set_volume@@YAXE@Z DD imagerel $LN5
	DD	imagerel $LN5+387
	DD	imagerel $unwind$?hda_set_volume@@YAXE@Z
$pdata$?_aud_outl_@@YAXHI@Z DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_aud_outl_@@YAXHI@Z
$pdata$?_aud_inl_@@YAIH@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?_aud_inl_@@YAIH@Z
$pdata$?_aud_outw_@@YAXHG@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?_aud_outw_@@YAXHG@Z
$pdata$?_aud_inw_@@YAGH@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$?_aud_inw_@@YAGH@Z
$pdata$?_aud_outb_@@YAXHE@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?_aud_outb_@@YAXHE@Z
$pdata$?_aud_inb_@@YAEH@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$?_aud_inb_@@YAEH@Z
$pdata$?hda_handler@@YAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$?hda_handler@@YAX_KPEAX@Z
$pdata$?setup_corb@@YAXXZ DD imagerel $LN9
	DD	imagerel $LN9+317
	DD	imagerel $unwind$?setup_corb@@YAXXZ
$pdata$?setup_rirb@@YAXXZ DD imagerel $LN9
	DD	imagerel $LN9+329
	DD	imagerel $unwind$?setup_rirb@@YAXXZ
$pdata$?corb_write@@YAXI@Z DD imagerel ?corb_write@@YAXI@Z
	DD	imagerel ?corb_write@@YAXI@Z+228
	DD	imagerel $unwind$?corb_write@@YAXI@Z
$pdata$?rirb_read@@YAXPEA_K@Z DD imagerel ?rirb_read@@YAXPEA_K@Z
	DD	imagerel ?rirb_read@@YAXPEA_K@Z+157
	DD	imagerel $unwind$?rirb_read@@YAXPEA_K@Z
$pdata$?codec_query@@YAIHHI@Z DD imagerel ?codec_query@@YAIHHI@Z
	DD	imagerel ?codec_query@@YAIHHI@Z+132
	DD	imagerel $unwind$?codec_query@@YAIHHI@Z
$pdata$?init_output@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+959
	DD	imagerel $unwind$?init_output@@YAXXZ
$pdata$?hda_init_output_stream@@YAXXZ DD imagerel $LN15
	DD	imagerel $LN15+474
	DD	imagerel $unwind$?hda_init_output_stream@@YAXXZ
$pdata$?widget_init@@YAXHH@Z DD imagerel $LN27
	DD	imagerel $LN27+792
	DD	imagerel $unwind$?widget_init@@YAXHH@Z
$pdata$?codec_enumerate_widgets@@YAHH@Z DD imagerel ?codec_enumerate_widgets@@YAHH@Z
	DD	imagerel ?codec_enumerate_widgets@@YAHH@Z+483
	DD	imagerel $unwind$?codec_enumerate_widgets@@YAHH@Z
$pdata$?hda_reset@@YAXXZ DD imagerel $LN10
	DD	imagerel $LN10+185
	DD	imagerel $unwind$?hda_reset@@YAXXZ
$pdata$?hda_output_start@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?hda_output_start@@YAXXZ
$pdata$?hda_output_stop@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?hda_output_stop@@YAXXZ
$pdata$?hda_audio_add_pcm@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?hda_audio_add_pcm@@YAXXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?hda_initialize@@YAXXZ DD 020701H
	DD	02f0107H
$unwind$?hda_set_volume@@YAXE@Z DD 010801H
	DD	06208H
$unwind$?_aud_outl_@@YAXHI@Z DD 010c01H
	DD	0220cH
$unwind$?_aud_inl_@@YAIH@Z DD 010801H
	DD	02208H
$unwind$?_aud_outw_@@YAXHG@Z DD 010d01H
	DD	0220dH
$unwind$?_aud_inw_@@YAGH@Z DD 010801H
	DD	02208H
$unwind$?_aud_outb_@@YAXHE@Z DD 010c01H
	DD	0220cH
$unwind$?_aud_inb_@@YAEH@Z DD 010801H
	DD	02208H
$unwind$?hda_handler@@YAX_KPEAX@Z DD 010e01H
	DD	0420eH
$unwind$?setup_corb@@YAXXZ DD 010401H
	DD	08204H
$unwind$?setup_rirb@@YAXXZ DD 010401H
	DD	08204H
$unwind$?corb_write@@YAXI@Z DD 010801H
	DD	06208H
$unwind$?rirb_read@@YAXPEA_K@Z DD 010901H
	DD	06209H
$unwind$?codec_query@@YAIHHI@Z DD 011101H
	DD	08211H
$unwind$?init_output@@YAXXZ DD 010401H
	DD	08204H
$unwind$?hda_init_output_stream@@YAXXZ DD 010401H
	DD	0a204H
$unwind$?widget_init@@YAXHH@Z DD 010c01H
	DD	0c20cH
$unwind$?codec_enumerate_widgets@@YAHH@Z DD 010801H
	DD	0a208H
$unwind$?hda_reset@@YAXXZ DD 010401H
	DD	04204H
$unwind$?hda_output_start@@YAXXZ DD 010401H
	DD	06204H
$unwind$?hda_output_stop@@YAXXZ DD 010401H
	DD	06204H
$unwind$?hda_audio_add_pcm@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\drivers\hda\hda.cpp
_TEXT	SEGMENT
?hda_audio_add_pcm@@YAXXZ PROC				; hda_audio_add_pcm

; 689  : 	memcpy (_ihd_audio.buffer, (void*)sounddata_data,sounddata_length);

$LN3:
	sub	rsp, 40					; 00000028H

; 690  : }

	mov	r8d, 10000				; 00002710H
	lea	rdx, OFFSET FLAT:sounddata_data
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+61
	call	memcpy

	add	rsp, 40					; 00000028H
	ret	0
?hda_audio_add_pcm@@YAXXZ ENDP				; hda_audio_add_pcm
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\drivers\hda\hda.cpp
_TEXT	SEGMENT
value$ = 32
?hda_output_stop@@YAXXZ PROC				; hda_output_stop

; 602  : void hda_output_stop () {

$LN3:
	sub	rsp, 56					; 00000038H

; 603  : 	uint32_t value = _aud_inl_(REG_O0_CTLL(_ihd_audio));

	mov	ecx, DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+53
	call	?_aud_inl_@@YAIH@Z			; _aud_inl_
	mov	DWORD PTR value$[rsp], eax

; 604  : 	_aud_outw_ (REG_O0_CTLL(_ihd_audio),0);

	xor	edx, edx
	mov	ecx, DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+53
	call	?_aud_outw_@@YAXHG@Z			; _aud_outw_

; 605  : }

	add	rsp, 56					; 00000038H
	ret	0
?hda_output_stop@@YAXXZ ENDP				; hda_output_stop
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\drivers\hda\hda.cpp
_TEXT	SEGMENT
value$ = 32
?hda_output_start@@YAXXZ PROC				; hda_output_start

; 595  : void hda_output_start () {

$LN3:
	sub	rsp, 56					; 00000038H

; 596  : 	uint32_t value = _aud_inl_(REG_O0_CTLL(_ihd_audio));

	mov	ecx, DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+53
	call	?_aud_inl_@@YAIH@Z			; _aud_inl_
	mov	DWORD PTR value$[rsp], eax

; 597  : 	value |= 0x2;

	mov	eax, DWORD PTR value$[rsp]
	or	eax, 2
	mov	DWORD PTR value$[rsp], eax

; 598  :     _aud_outw_(REG_O0_CTLL(_ihd_audio),value);

	movzx	edx, WORD PTR value$[rsp]
	mov	ecx, DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+53
	call	?_aud_outw_@@YAXHG@Z			; _aud_outw_

; 599  : }

	add	rsp, 56					; 00000038H
	ret	0
?hda_output_start@@YAXXZ ENDP				; hda_output_start
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\drivers\hda\hda.cpp
_TEXT	SEGMENT
?hda_reset@@YAXXZ PROC					; hda_reset

; 574  : void hda_reset() {

$LN10:
	sub	rsp, 40					; 00000028H

; 575  : 	_aud_outl_(CORBCTL, 0);

	xor	edx, edx
	mov	ecx, 76					; 0000004cH
	call	?_aud_outl_@@YAXHI@Z			; _aud_outl_

; 576  : 	_aud_outl_(RIRBCTL, 0);

	xor	edx, edx
	mov	ecx, 92					; 0000005cH
	call	?_aud_outl_@@YAXHI@Z			; _aud_outl_

; 577  : 	_aud_outw_(RIRBWP, 0);

	xor	edx, edx
	mov	ecx, 88					; 00000058H
	call	?_aud_outw_@@YAXHG@Z			; _aud_outw_
$LN7@hda_reset:

; 578  : 	while ((_aud_inl_(CORBCTL) & CORBCTL_CORBRUN) ||
; 579  : 		(_aud_inl_(RIRBCTL) & RIRBCTL_RIRBRUN));

	mov	ecx, 76					; 0000004cH
	call	?_aud_inl_@@YAIH@Z			; _aud_inl_
	and	eax, 2
	test	eax, eax
	jne	SHORT $LN5@hda_reset
	mov	ecx, 92					; 0000005cH
	call	?_aud_inl_@@YAIH@Z			; _aud_inl_
	and	eax, 2
	test	eax, eax
	je	SHORT $LN6@hda_reset
$LN5@hda_reset:
	jmp	SHORT $LN7@hda_reset
$LN6@hda_reset:

; 580  : 
; 581  : 	_aud_outl_(GCTL, 0);

	xor	edx, edx
	mov	ecx, 8
	call	?_aud_outl_@@YAXHI@Z			; _aud_outl_
$LN4@hda_reset:

; 582  : 	while ((_aud_inl_(GCTL) & GCTL_RESET));

	mov	ecx, 8
	call	?_aud_inl_@@YAIH@Z			; _aud_inl_
	and	eax, 1
	test	eax, eax
	je	SHORT $LN3@hda_reset
	jmp	SHORT $LN4@hda_reset
$LN3@hda_reset:

; 583  : 
; 584  : 	_aud_outl_ (GCTL, GCTL_RESET);

	mov	edx, 1
	mov	ecx, 8
	call	?_aud_outl_@@YAXHI@Z			; _aud_outl_
$LN2@hda_reset:

; 585  : 	while ((_aud_inl_(GCTL) & GCTL_RESET) == 0);

	mov	ecx, 8
	call	?_aud_inl_@@YAIH@Z			; _aud_inl_
	and	eax, 1
	test	eax, eax
	jne	SHORT $LN1@hda_reset
	jmp	SHORT $LN2@hda_reset
$LN1@hda_reset:

; 586  : 
; 587  : 	_aud_outw_(WAKEEN, 0xffff);

	mov	dx, 65535				; 0000ffffH
	mov	ecx, 12
	call	?_aud_outw_@@YAXHG@Z			; _aud_outw_

; 588  : 	_aud_outl_(INTCTL, 0x8000000ff);

	mov	edx, 255				; 000000ffH
	mov	ecx, 32					; 00000020H
	call	?_aud_outl_@@YAXHI@Z			; _aud_outl_

; 589  : 
; 590  : 	setup_corb();

	call	?setup_corb@@YAXXZ			; setup_corb

; 591  : 	setup_rirb();

	call	?setup_rirb@@YAXXZ			; setup_rirb

; 592  : }

	add	rsp, 40					; 00000028H
	ret	0
?hda_reset@@YAXXZ ENDP					; hda_reset
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\drivers\hda\hda.cpp
_TEXT	SEGMENT
param$ = 32
i$ = 36
j$1 = 40
fg_start$ = 44
rev_id$ = 48
num_fg$ = 52
num_widgets$ = 56
widgets_start$ = 60
vendor_id$ = 64
tv155 = 68
codec$ = 96
?codec_enumerate_widgets@@YAHH@Z PROC			; codec_enumerate_widgets

; 519  : static int codec_enumerate_widgets(int codec) {

	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 88					; 00000058H

; 520  : 
; 521  : 	uint32_t param;
; 522  : 	int num_fg, num_widgets;
; 523  : 	int fg_start, widgets_start;
; 524  : 	int i, j;
; 525  : 
; 526  : 
; 527  : 	param = codec_query (codec, 0, VERB_GET_PARAMETER | PARAM_NODE_COUNT);

	mov	r8d, 983044				; 000f0004H
	xor	edx, edx
	mov	ecx, DWORD PTR codec$[rsp]
	call	?codec_query@@YAIHHI@Z			; codec_query
	mov	DWORD PTR param$[rsp], eax

; 528  : 
; 529  : 	num_fg = param & 0x000000ff;

	mov	eax, DWORD PTR param$[rsp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR num_fg$[rsp], eax

; 530  : 	fg_start = (param & 0x00ff0000) >> 16;

	mov	eax, DWORD PTR param$[rsp]
	and	eax, 16711680				; 00ff0000H
	shr	eax, 16
	mov	DWORD PTR fg_start$[rsp], eax

; 531  : 
; 532  : 
; 533  : 	printf ("[HD_Audio]: Num Function Group -> %d, fg_start -> %d\n", num_fg, fg_start);

	mov	r8d, DWORD PTR fg_start$[rsp]
	mov	edx, DWORD PTR num_fg$[rsp]
	lea	rcx, OFFSET FLAT:$SG3606
	call	?printf@@YAXPEBDZZ			; printf

; 534  : 
; 535  : 	uint32_t vendor_id = codec_query (codec, 0, VERB_GET_PARAMETER | PARAM_VENDOR_ID);

	mov	r8d, 983040				; 000f0000H
	xor	edx, edx
	mov	ecx, DWORD PTR codec$[rsp]
	call	?codec_query@@YAIHHI@Z			; codec_query
	mov	DWORD PTR vendor_id$[rsp], eax

; 536  : 	printf ("[HD-Audio]:Widget device id -> %x, vendor id -> %x\n", vendor_id & 0xffff , (vendor_id >> 16 ));

	mov	eax, DWORD PTR vendor_id$[rsp]
	shr	eax, 16
	mov	ecx, DWORD PTR vendor_id$[rsp]
	and	ecx, 65535				; 0000ffffH
	mov	r8d, eax
	mov	edx, ecx
	lea	rcx, OFFSET FLAT:$SG3608
	call	?printf@@YAXPEBDZZ			; printf

; 537  : 	
; 538  : 	uint32_t rev_id = codec_query (codec, 0, VERB_GET_PARAMETER | PARAM_REV_ID);

	mov	r8d, 983042				; 000f0002H
	xor	edx, edx
	mov	ecx, DWORD PTR codec$[rsp]
	call	?codec_query@@YAIHHI@Z			; codec_query
	mov	DWORD PTR rev_id$[rsp], eax

; 539  : 	printf ("[HD-Audio]:Widget version -> %d.%d, r0%d\n", rev_id>>20, rev_id>>16, rev_id>>8);

	mov	eax, DWORD PTR rev_id$[rsp]
	shr	eax, 8
	mov	ecx, DWORD PTR rev_id$[rsp]
	shr	ecx, 16
	mov	edx, DWORD PTR rev_id$[rsp]
	shr	edx, 20
	mov	r9d, eax
	mov	r8d, ecx
	lea	rcx, OFFSET FLAT:$SG3610
	call	?printf@@YAXPEBDZZ			; printf

; 540  : 
; 541  : 	
; 542  : 	for (i = 0; i < num_fg; i++) {

	mov	DWORD PTR i$[rsp], 0
	jmp	SHORT $LN7@codec_enum
$LN6@codec_enum:
	mov	eax, DWORD PTR i$[rsp]
	inc	eax
	mov	DWORD PTR i$[rsp], eax
$LN7@codec_enum:
	mov	eax, DWORD PTR num_fg$[rsp]
	cmp	DWORD PTR i$[rsp], eax
	jge	$LN5@codec_enum

; 543  : 
; 544  : 		param = codec_query (codec, fg_start + i, 
; 545  : 			VERB_GET_PARAMETER | PARAM_NODE_COUNT);

	mov	eax, DWORD PTR i$[rsp]
	mov	ecx, DWORD PTR fg_start$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	r8d, 983044				; 000f0004H
	mov	edx, eax
	mov	ecx, DWORD PTR codec$[rsp]
	call	?codec_query@@YAIHHI@Z			; codec_query
	mov	DWORD PTR param$[rsp], eax

; 546  : 
; 547  : 		num_widgets = param & 0xff;

	mov	eax, DWORD PTR param$[rsp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR num_widgets$[rsp], eax

; 548  : 		widgets_start = (param >> 16) & 0xff;

	mov	eax, DWORD PTR param$[rsp]
	shr	eax, 16
	and	eax, 255				; 000000ffH
	mov	DWORD PTR widgets_start$[rsp], eax

; 549  : 		printf ("Widget start -> %d, num widhets -> %d\n", widgets_start, num_widgets);

	mov	r8d, DWORD PTR num_widgets$[rsp]
	mov	edx, DWORD PTR widgets_start$[rsp]
	lea	rcx, OFFSET FLAT:$SG3614
	call	?printf@@YAXPEBDZZ			; printf

; 550  : 		
; 551  : 		param = codec_query (codec, fg_start + i, VERB_GET_PARAMETER | PARAM_FN_GROUP_TYPE);

	mov	eax, DWORD PTR i$[rsp]
	mov	ecx, DWORD PTR fg_start$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	r8d, 983045				; 000f0005H
	mov	edx, eax
	mov	ecx, DWORD PTR codec$[rsp]
	call	?codec_query@@YAIHHI@Z			; codec_query
	mov	DWORD PTR param$[rsp], eax

; 552  : 		param &= 0x000000ff;

	mov	eax, DWORD PTR param$[rsp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR param$[rsp], eax

; 553  : 		if (param != FN_GROUP_AUDIO) {

	cmp	DWORD PTR param$[rsp], 1
	je	SHORT $LN4@codec_enum

; 554  : 			printf ("FG not audio group\n");

	lea	rcx, OFFSET FLAT:$SG3616
	call	?printf@@YAXPEBDZZ			; printf

; 555  : 			continue;

	jmp	$LN6@codec_enum
$LN4@codec_enum:

; 556  : 		}
; 557  : 
; 558  : 		//codec_query (codec, fg_start + i, VERB_SET_POWER_STATE | 0x0);
; 559  : 
; 560  : 		for (int j = 0; j < num_widgets; j++) {

	mov	DWORD PTR j$1[rsp], 0
	jmp	SHORT $LN3@codec_enum
$LN2@codec_enum:
	mov	eax, DWORD PTR j$1[rsp]
	inc	eax
	mov	DWORD PTR j$1[rsp], eax
$LN3@codec_enum:
	mov	eax, DWORD PTR num_widgets$[rsp]
	cmp	DWORD PTR j$1[rsp], eax
	jge	SHORT $LN1@codec_enum

; 561  : 			widget_init (codec, widgets_start + j);

	mov	eax, DWORD PTR j$1[rsp]
	mov	ecx, DWORD PTR widgets_start$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	edx, eax
	mov	ecx, DWORD PTR codec$[rsp]
	call	?widget_init@@YAXHH@Z			; widget_init

; 562  : 		}

	jmp	SHORT $LN2@codec_enum
$LN1@codec_enum:

; 563  : 		
; 564  : 	}

	jmp	$LN6@codec_enum
$LN5@codec_enum:

; 565  : 
; 566  : 
; 567  : 	return _ihd_audio.output->nid ? 0 : -1;

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	eax, WORD PTR [rax+2]
	test	eax, eax
	je	SHORT $LN10@codec_enum
	mov	DWORD PTR tv155[rsp], 0
	jmp	SHORT $LN11@codec_enum
$LN10@codec_enum:
	mov	DWORD PTR tv155[rsp], -1
$LN11@codec_enum:
	mov	eax, DWORD PTR tv155[rsp]

; 568  : }

	add	rsp, 88					; 00000058H
	ret	0
?codec_enumerate_widgets@@YAHH@Z ENDP			; codec_enumerate_widgets
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\drivers\hda\hda.cpp
_TEXT	SEGMENT
tv138 = 32
s$ = 40
tv95 = 48
mute_bit$1 = 52
amp_gain$ = 56
vol$2 = 60
widget_cap$ = 64
type$ = 68
tv79 = 72
amp_cap$ = 76
eapd_btl$ = 80
eapd_$3 = 84
codec$ = 112
nid$ = 120
?widget_init@@YAXHH@Z PROC				; widget_init

; 379  : void widget_init (int codec, int nid) {

$LN27:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 104				; 00000068H

; 380  : 
; 381  : 	uint32_t widget_cap;
; 382  : 	uint32_t type;
; 383  : 	uint32_t amp_cap;
; 384  : 	uint32_t eapd_btl;
; 385  : 
; 386  : 	//! send a command for audio widget capabilites
; 387  : 	widget_cap = codec_query (codec, nid, VERB_GET_PARAMETER | PARAM_AUDIO_WID_CAP);

	mov	r8d, 983049				; 000f0009H
	mov	edx, DWORD PTR nid$[rsp]
	mov	ecx, DWORD PTR codec$[rsp]
	call	?codec_query@@YAIHHI@Z			; codec_query
	mov	DWORD PTR widget_cap$[rsp], eax

; 388  : 	if (widget_cap == 0) {

	cmp	DWORD PTR widget_cap$[rsp], 0
	jne	SHORT $LN21@widget_ini

; 389  : 		//! serious problem occured
; 390  : 		return;

	jmp	$LN22@widget_ini
$LN21@widget_ini:

; 391  : 	}
; 392  : 
; 393  : 	type = (widget_cap & WIDGET_CAP_TYPE_MASK) >> WIDGET_CAP_TYPE_SHIFT;

	mov	eax, DWORD PTR widget_cap$[rsp]
	and	eax, 15728640				; 00f00000H
	shr	eax, 20
	mov	DWORD PTR type$[rsp], eax

; 394  : 	amp_cap = codec_query (codec, nid, VERB_GET_PARAMETER | PARAM_OUT_AMP_CAP);

	mov	r8d, 983058				; 000f0012H
	mov	edx, DWORD PTR nid$[rsp]
	mov	ecx, DWORD PTR codec$[rsp]
	call	?codec_query@@YAIHHI@Z			; codec_query
	mov	DWORD PTR amp_cap$[rsp], eax

; 395  : 	eapd_btl = codec_query (codec, nid, VERB_GET_EAPD_BTL);

	mov	r8d, 986112				; 000f0c00H
	mov	edx, DWORD PTR nid$[rsp]
	mov	ecx, DWORD PTR codec$[rsp]
	call	?codec_query@@YAIHHI@Z			; codec_query
	mov	DWORD PTR eapd_btl$[rsp], eax

; 396  : 
; 397  : 	/*if (widget_cap & WIDGET_CAP_POWER_CNTRL) {
; 398  : 		codec_query(codec, nid, VERB_SET_POWER_STATE | 0x0);
; 399  : 	}*/
; 400  : 
; 401  : 	uint32_t amp_gain;
; 402  : 	const char* s;
; 403  : 
; 404  : 	switch(type) {

	mov	eax, DWORD PTR type$[rsp]
	mov	DWORD PTR tv79[rsp], eax
	cmp	DWORD PTR tv79[rsp], 16
	ja	$LN9@widget_ini
	mov	eax, DWORD PTR tv79[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN26@widget_ini[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN18@widget_ini:

; 405  : 	case 0:  s = "output"; break;

	lea	rax, OFFSET FLAT:$SG3562
	mov	QWORD PTR s$[rsp], rax
	jmp	SHORT $LN19@widget_ini
$LN17@widget_ini:

; 406  : 	case 1:  s = "input"; break;

	lea	rax, OFFSET FLAT:$SG3564
	mov	QWORD PTR s$[rsp], rax
	jmp	SHORT $LN19@widget_ini
$LN16@widget_ini:

; 407  : 	case 2:  s = "mixer"; break;

	lea	rax, OFFSET FLAT:$SG3566
	mov	QWORD PTR s$[rsp], rax
	jmp	SHORT $LN19@widget_ini
$LN15@widget_ini:

; 408  : 	case 3:  s = "selector"; break;

	lea	rax, OFFSET FLAT:$SG3568
	mov	QWORD PTR s$[rsp], rax
	jmp	SHORT $LN19@widget_ini
$LN14@widget_ini:

; 409  : 	case 4:  s = "pin complex"; break;

	lea	rax, OFFSET FLAT:$SG3570
	mov	QWORD PTR s$[rsp], rax
	jmp	SHORT $LN19@widget_ini
$LN13@widget_ini:

; 410  : 	case 5:  s = "power"; break;

	lea	rax, OFFSET FLAT:$SG3572
	mov	QWORD PTR s$[rsp], rax
	jmp	SHORT $LN19@widget_ini
$LN12@widget_ini:

; 411  : 	case 6:  s = "volume knob"; break;

	lea	rax, OFFSET FLAT:$SG3574
	mov	QWORD PTR s$[rsp], rax
	jmp	SHORT $LN19@widget_ini
$LN11@widget_ini:

; 412  : 	case 7:  s = "beep generator"; break;

	lea	rax, OFFSET FLAT:$SG3576
	mov	QWORD PTR s$[rsp], rax
	jmp	SHORT $LN19@widget_ini
$LN10@widget_ini:

; 413  : 	case 16: s = "vendor defined"; break;

	lea	rax, OFFSET FLAT:$SG3578
	mov	QWORD PTR s$[rsp], rax
	jmp	SHORT $LN19@widget_ini
$LN9@widget_ini:

; 414  : 	default: s = "unknown"; break;

	lea	rax, OFFSET FLAT:$SG3580
	mov	QWORD PTR s$[rsp], rax
$LN19@widget_ini:

; 415  : 
; 416  : 	}
; 417  : 	amp_gain = codec_query(codec, nid, VERB_GET_AMP_GAIN_MUTE | 0x8000) << 8;

	mov	r8d, 753664				; 000b8000H
	mov	edx, DWORD PTR nid$[rsp]
	mov	ecx, DWORD PTR codec$[rsp]
	call	?codec_query@@YAIHHI@Z			; codec_query
	shl	eax, 8
	mov	DWORD PTR amp_gain$[rsp], eax

; 418  : 	amp_gain |= codec_query(codec, nid, VERB_GET_AMP_GAIN_MUTE | 0xa000);

	mov	r8d, 761856				; 000ba000H
	mov	edx, DWORD PTR nid$[rsp]
	mov	ecx, DWORD PTR codec$[rsp]
	call	?codec_query@@YAIHHI@Z			; codec_query
	mov	ecx, DWORD PTR amp_gain$[rsp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR amp_gain$[rsp], eax

; 419  : 
; 420  : 	eapd_btl = codec_query (codec, nid, VERB_GET_EAPD_BTL);	

	mov	r8d, 986112				; 000f0c00H
	mov	edx, DWORD PTR nid$[rsp]
	mov	ecx, DWORD PTR codec$[rsp]
	call	?codec_query@@YAIHHI@Z			; codec_query
	mov	DWORD PTR eapd_btl$[rsp], eax

; 421  : 	
; 422  : 	switch (type) {

	mov	eax, DWORD PTR type$[rsp]
	mov	DWORD PTR tv95[rsp], eax
	cmp	DWORD PTR tv95[rsp], 0
	je	SHORT $LN5@widget_ini
	cmp	DWORD PTR tv95[rsp], 2
	je	$LN2@widget_ini
	cmp	DWORD PTR tv95[rsp], 4
	je	SHORT $LN6@widget_ini
	cmp	DWORD PTR tv95[rsp], 6
	je	$LN3@widget_ini
	jmp	$LN1@widget_ini
$LN6@widget_ini:

; 423  : 	case WIDGET_PIN:
; 424  : 		{
; 425  : 			/*uint32_t pin_cap = codec_query (codec, nid, VERB_GET_PARAMETER | PARAM_PIN_CAP);
; 426  : 			if (pin_cap & PIN_CAP_OUTPUT) {
; 427  : 				printf ("Pin is output\n");
; 428  : 				uint32_t ctl = codec_query (codec, nid, VERB_GET_PIN_CONTROL);
; 429  : 				codec_query (codec, nid, VERB_SET_PIN_CONTROL | 0);
; 430  : 				codec_query (codec, nid, VERB_SET_EAPD_BTL | 0);
; 431  : 			
; 432  : 			uint32_t num_conn = codec_query (codec, nid, VERB_GET_PARAMETER | PARAM_CONN_LIST_LEN);
; 433  : 			uint32_t sel = 0;
; 434  : 			printf ("\nPin Connection: ");
; 435  : 			for (int i = 0;  i < (num_conn & 0x7f); i++) {
; 436  : 				uint32_t conn;
; 437  : 				bool range;
; 438  : 				int idx, shift;
; 439  : 
; 440  : 				if (num_conn & 0x80) {
; 441  : 					idx = i & ~3;
; 442  : 					shift = 8 * (i & 3);
; 443  : 				}else {
; 444  : 					idx = i & ~1;
; 445  : 					shift = 8 * (i & 1);
; 446  : 				}
; 447  : 
; 448  : 				conn = codec_query (codec, nid, VERB_GET_CONN_LIST | idx);
; 449  : 				conn >>= shift;
; 450  : 				
; 451  : 				if (num_conn & 0x80) {
; 452  : 					range = conn & 0x8000;
; 453  : 					conn &= 0x7fff;
; 454  : 				}else {
; 455  : 					range = conn & 0x80;
; 456  : 					conn &= 0x7f;
; 457  : 				}
; 458  : 
; 459  : 				printf ("%d\n", conn);
; 460  : 				uint16_t format =  (0<<14)  | (1<<4) | 1;
; 461  : 	            codec_query (codec, conn, VERB_SET_FORMAT | format);
; 462  : 	            codec_query (codec, conn, VERB_SET_STREAM_CHANNEL |  (1<<4) | (1<<0));
; 463  : 				codec_query (codec, conn, VERB_SET_AMP_GAIN_MUTE | 0xb000 | 0x80);
; 464  : 				codec_query (codec, conn, VERB_SET_PIN_CONTROL | 0);
; 465  : 				codec_query (codec, conn, VERB_SET_EAPD_BTL | 0);
; 466  : 			    codec_query(codec, conn, VERB_SET_POWER_STATE | 0x0);
; 467  : 			}
; 468  : 
; 469  : 			sel = codec_query(codec, nid, VERB_GET_CONN_SELECT);
; 470  : 			printf ("[current: %d]\n", sel);
; 471  : 			}
; 472  : 		*/
; 473  : 			
; 474  : 		
; 475  : 			break;

	jmp	$LN7@widget_ini
$LN5@widget_ini:

; 476  : 		}
; 477  : 	case WIDGET_OUTPUT:{
; 478  : 		if (!_ihd_audio.output->nid) {

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	eax, WORD PTR [rax+2]
	test	eax, eax
	jne	SHORT $LN4@widget_ini

; 479  : 			_ihd_audio.output->codec = codec;

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR codec$[rsp]
	mov	BYTE PTR [rax], cl

; 480  : 			_ihd_audio.output->nid = nid;

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, WORD PTR nid$[rsp]
	mov	WORD PTR [rax+2], cx

; 481  : 			_ihd_audio.output->amp_gain_steps = (amp_cap >> 8) & 0x7f;

	mov	eax, DWORD PTR amp_cap$[rsp]
	shr	eax, 8
	and	eax, 127				; 0000007fH
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	mov	DWORD PTR [rcx+8], eax
$LN4@widget_ini:

; 482  : 		}
; 483  : 
; 484  : 		//codec_query (codec, nid, VERB_SET_AMP_GAIN_MUTE | (1<<7) | (1<<12) | (1<<13) | (1<<14) | (1<<15));
; 485  : 		bool mute_bit = amp_cap >> 31;

	mov	eax, DWORD PTR amp_cap$[rsp]
	shr	eax, 31
	test	eax, eax
	je	SHORT $LN24@widget_ini
	mov	BYTE PTR tv138[rsp], 1
	jmp	SHORT $LN25@widget_ini
$LN24@widget_ini:
	mov	BYTE PTR tv138[rsp], 0
$LN25@widget_ini:
	movzx	eax, BYTE PTR tv138[rsp]
	mov	BYTE PTR mute_bit$1[rsp], al

; 486  : 	/*	if (mute_bit) {
; 487  : 			printf ("Output Codec is mute capable\n");
; 488  : 		}*/
; 489  : 		//codec_query (codec, nid, VERB_SET_AMP_GAIN_MUTE | 0x80);
; 490  : 		uint32_t eapd_ = codec_query (codec,nid, VERB_GET_EAPD_BTL);	

	mov	r8d, 986112				; 000f0c00H
	mov	edx, DWORD PTR nid$[rsp]
	mov	ecx, DWORD PTR codec$[rsp]
	call	?codec_query@@YAIHHI@Z			; codec_query
	mov	DWORD PTR eapd_$3[rsp], eax

; 491  : 		codec_query (codec, nid,VERB_SET_EAPD_BTL | eapd_ | 0x2);

	mov	eax, DWORD PTR eapd_$3[rsp]
	or	eax, 461824				; 00070c00H
	or	eax, 2
	mov	r8d, eax
	mov	edx, DWORD PTR nid$[rsp]
	mov	ecx, DWORD PTR codec$[rsp]
	call	?codec_query@@YAIHHI@Z			; codec_query

; 492  : 		break;

	jmp	$LN7@widget_ini
$LN3@widget_ini:

; 493  : 		}
; 494  : 
; 495  : 	case WIDGET_VOLUME_KNOB :{
; 496  : 		_ihd_audio.vol->codec = codec;

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+41
	movzx	ecx, BYTE PTR codec$[rsp]
	mov	BYTE PTR [rax], cl

; 497  : 		_ihd_audio.vol->nid = nid;

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+41
	movzx	ecx, WORD PTR nid$[rsp]
	mov	WORD PTR [rax+2], cx

; 498  : 		codec_query(codec, nid, VERB_SET_POWER_STATE | 0x0);

	mov	r8d, 460032				; 00070500H
	mov	edx, DWORD PTR nid$[rsp]
	mov	ecx, DWORD PTR codec$[rsp]
	call	?codec_query@@YAIHHI@Z			; codec_query

; 499  : 
; 500  : 		codec_query (codec, nid, 0x70F00 | (1<<7) | (0 & 0xff));

	mov	r8d, 462720				; 00070f80H
	mov	edx, DWORD PTR nid$[rsp]
	mov	ecx, DWORD PTR codec$[rsp]
	call	?codec_query@@YAIHHI@Z			; codec_query

; 501  : 		uint32_t vol = codec_query(codec, nid, 0xF0F00);

	mov	r8d, 986880				; 000f0f00H
	mov	edx, DWORD PTR nid$[rsp]
	mov	ecx, DWORD PTR codec$[rsp]
	call	?codec_query@@YAIHHI@Z			; codec_query
	mov	DWORD PTR vol$2[rsp], eax

; 502  : 		printf ("Volume Knob Widget-> vol -> %d, direct -> %d\n", vol & 0xffff, (vol >> 7) & 0xf);

	mov	eax, DWORD PTR vol$2[rsp]
	shr	eax, 7
	and	eax, 15
	mov	ecx, DWORD PTR vol$2[rsp]
	and	ecx, 65535				; 0000ffffH
	mov	r8d, eax
	mov	edx, ecx
	lea	rcx, OFFSET FLAT:$SG3592
	call	?printf@@YAXPEBDZZ			; printf

; 503  : 
; 504  : 		break;

	jmp	SHORT $LN7@widget_ini
$LN2@widget_ini:

; 505  : 		}
; 506  : 	case WIDGET_MIXER:
; 507  : 		printf ("Mixer found\n");

	lea	rcx, OFFSET FLAT:$SG3594
	call	?printf@@YAXPEBDZZ			; printf
$LN1@widget_ini:
$LN7@widget_ini:
$LN22@widget_ini:

; 508  : 		break;
; 509  : 	default:
; 510  : 		return;
; 511  : 
; 512  : 	}
; 513  : 
; 514  : 	
; 515  : }

	add	rsp, 104				; 00000068H
	ret	0
	npad	1
$LN26@widget_ini:
	DD	$LN18@widget_ini
	DD	$LN17@widget_ini
	DD	$LN16@widget_ini
	DD	$LN15@widget_ini
	DD	$LN14@widget_ini
	DD	$LN13@widget_ini
	DD	$LN12@widget_ini
	DD	$LN11@widget_ini
	DD	$LN9@widget_ini
	DD	$LN9@widget_ini
	DD	$LN9@widget_ini
	DD	$LN9@widget_ini
	DD	$LN9@widget_ini
	DD	$LN9@widget_ini
	DD	$LN9@widget_ini
	DD	$LN9@widget_ini
	DD	$LN10@widget_ini
?widget_init@@YAXHH@Z ENDP				; widget_init
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\drivers\hda\hda.cpp
_TEXT	SEGMENT
format$ = 32
i$1 = 36
i$2 = 40
i$3 = 44
i$4 = 48
bdl$ = 56
bdl_base$ = 64
dma_pos$ = 72
?hda_init_output_stream@@YAXXZ PROC			; hda_init_output_stream

; 335  : void hda_init_output_stream () {

$LN15:
	sub	rsp, 88					; 00000058H

; 336  : 	_aud_outl_ (REG_O0_CTLL(_ihd_audio), 1); //clear the run bit

	mov	edx, 1
	mov	ecx, DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+53
	call	?_aud_outl_@@YAXHI@Z			; _aud_outl_

; 337  : 	for (int i = 0; i < 1000; i++)

	mov	DWORD PTR i$3[rsp], 0
	jmp	SHORT $LN12@hda_init_o
$LN11@hda_init_o:
	mov	eax, DWORD PTR i$3[rsp]
	inc	eax
	mov	DWORD PTR i$3[rsp], eax
$LN12@hda_init_o:
	cmp	DWORD PTR i$3[rsp], 1000		; 000003e8H
	jge	SHORT $LN10@hda_init_o

; 338  : 		;

	jmp	SHORT $LN11@hda_init_o
$LN10@hda_init_o:

; 339  : 
; 340  : 	_aud_outl_ (REG_O0_CTLL(_ihd_audio), 0);

	xor	edx, edx
	mov	ecx, DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+53
	call	?_aud_outl_@@YAXHI@Z			; _aud_outl_

; 341  : 	for (int i = 0; i < 1000; i++)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN9@hda_init_o
$LN8@hda_init_o:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN9@hda_init_o:
	cmp	DWORD PTR i$4[rsp], 1000		; 000003e8H
	jge	SHORT $LN7@hda_init_o

; 342  : 		;

	jmp	SHORT $LN8@hda_init_o
$LN7@hda_init_o:

; 343  : 	uint64_t bdl_base = (uint64_t)pmmngr_alloc();   //get_physical_address  ((uint64_t) 0x0000000000000000);

	call	?pmmngr_alloc@@YAPEAXXZ			; pmmngr_alloc
	mov	QWORD PTR bdl_base$[rsp], rax

; 344  : 	ihda_bdl_entry *bdl = (ihda_bdl_entry*)bdl_base;  //(_ihd_audio.corb + 3072);

	mov	rax, QWORD PTR bdl_base$[rsp]
	mov	QWORD PTR bdl$[rsp], rax

; 345  : 	for (int i = 0; i < 4; i++) {

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN6@hda_init_o
$LN5@hda_init_o:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN6@hda_init_o:
	cmp	DWORD PTR i$1[rsp], 4
	jge	SHORT $LN4@hda_init_o

; 346  : 		bdl[i].paddr = (uint64_t)get_physical_address((uint64_t)_ihd_audio.buffer);

	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+61
	call	?get_physical_address@@YAPEA_K_K@Z	; get_physical_address
	movsxd	rcx, DWORD PTR i$1[rsp]
	imul	rcx, 16
	mov	rdx, QWORD PTR bdl$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 347  : 		bdl[i].length = 0x10000;

	movsxd	rax, DWORD PTR i$1[rsp]
	imul	rax, 16
	mov	rcx, QWORD PTR bdl$[rsp]
	mov	DWORD PTR [rcx+rax+8], 65536		; 00010000H

; 348  : 		bdl[i].flags = 0;

	movsxd	rax, DWORD PTR i$1[rsp]
	imul	rax, 16
	mov	rcx, QWORD PTR bdl$[rsp]
	mov	DWORD PTR [rcx+rax+12], 0

; 349  : 	}

	jmp	SHORT $LN5@hda_init_o
$LN4@hda_init_o:

; 350  : 
; 351  : 	_aud_outl_ (REG_O0_CTLL(_ihd_audio),(1<<20)); 

	mov	edx, 1048576				; 00100000H
	mov	ecx, DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+53
	call	?_aud_outl_@@YAXHI@Z			; _aud_outl_

; 352  : 	_aud_outl_ (REG_O0_CTLU(_ihd_audio),(1<<20));

	mov	eax, DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+53
	add	eax, 2
	mov	edx, 1048576				; 00100000H
	mov	ecx, eax
	call	?_aud_outl_@@YAXHI@Z			; _aud_outl_

; 353  : 
; 354  : 	_aud_outl_ (REG_O0_CBL(_ihd_audio), 4*0x10000);

	mov	eax, DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+53
	add	eax, 8
	mov	edx, 262144				; 00040000H
	mov	ecx, eax
	call	?_aud_outl_@@YAXHI@Z			; _aud_outl_

; 355  : 	_aud_outw_(REG_O0_STLVI(_ihd_audio), 4-1);

	mov	eax, DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+53
	add	eax, 12
	mov	dx, 3
	mov	ecx, eax
	call	?_aud_outw_@@YAXHG@Z			; _aud_outw_

; 356  : 
; 357  : 	_aud_outl_ (REG_O0_BDLPL(_ihd_audio), bdl_base);

	mov	eax, DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+53
	add	eax, 24
	mov	edx, DWORD PTR bdl_base$[rsp]
	mov	ecx, eax
	call	?_aud_outl_@@YAXHI@Z			; _aud_outl_

; 358  : 	_aud_outl_ (REG_O0_BDLPU(_ihd_audio), bdl_base >> 32);

	mov	rax, QWORD PTR bdl_base$[rsp]
	shr	rax, 32					; 00000020H
	mov	ecx, DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+53
	add	ecx, 28
	mov	edx, eax
	call	?_aud_outl_@@YAXHI@Z			; _aud_outl_

; 359  : 
; 360  : 	uint16_t format = (0<<14)  | (1<<4) | 1;  // (0<<14) | (0<<11) | (0<<8) | (1<<4) | 1;

	mov	eax, 17
	mov	WORD PTR format$[rsp], ax

; 361  : 	_aud_outw_ (REG_O0_FMT(_ihd_audio), format);

	mov	eax, DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+53
	add	eax, 18
	movzx	edx, WORD PTR format$[rsp]
	mov	ecx, eax
	call	?_aud_outw_@@YAXHG@Z			; _aud_outw_

; 362  : 
; 363  : 	//_aud_outb_(REG_O0_STS(_ihd_audio), (1<<2) | (1<<3) | (1<<4));
; 364  : 
; 365  : 	uint64_t* dma_pos = (uint64_t*)pmmngr_alloc();

	call	?pmmngr_alloc@@YAPEAXXZ			; pmmngr_alloc
	mov	QWORD PTR dma_pos$[rsp], rax

; 366  : 	for (int i = 0; i < 8; i++) {

	mov	DWORD PTR i$2[rsp], 0
	jmp	SHORT $LN3@hda_init_o
$LN2@hda_init_o:
	mov	eax, DWORD PTR i$2[rsp]
	inc	eax
	mov	DWORD PTR i$2[rsp], eax
$LN3@hda_init_o:
	cmp	DWORD PTR i$2[rsp], 8
	jge	SHORT $LN1@hda_init_o

; 367  : 		dma_pos[i] = 0;

	movsxd	rax, DWORD PTR i$2[rsp]
	mov	rcx, QWORD PTR dma_pos$[rsp]
	mov	QWORD PTR [rcx+rax*8], 0

; 368  : 	}

	jmp	SHORT $LN2@hda_init_o
$LN1@hda_init_o:

; 369  : 
; 370  : 	_aud_outl_ (DPIBLBASE, (uint32_t)dma_pos | 0x1);

	mov	eax, DWORD PTR dma_pos$[rsp]
	or	eax, 1
	mov	edx, eax
	mov	ecx, 112				; 00000070H
	call	?_aud_outl_@@YAXHI@Z			; _aud_outl_

; 371  : 	_aud_outl_ (DPIBUBASE, (uint32_t)dma_pos >> 32);

	mov	eax, DWORD PTR dma_pos$[rsp]
	shr	eax, 32					; 00000020H
	mov	edx, eax
	mov	ecx, 116				; 00000074H
	call	?_aud_outl_@@YAXHI@Z			; _aud_outl_

; 372  : }

	add	rsp, 88					; 00000058H
	ret	0
?hda_init_output_stream@@YAXXZ ENDP			; hda_init_output_stream
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\drivers\hda\hda.cpp
_TEXT	SEGMENT
format$ = 32
ctl$ = 36
eapd_btl1$ = 40
eapd_btl2$ = 44
eapd_btl3$ = 48
eapd_btl4$ = 52
eapd_btl5$ = 56
stream$ = 60
?init_output@@YAXXZ PROC				; init_output

; 280  : void init_output () {

$LN3:
	sub	rsp, 72					; 00000048H

; 281  : 	printf ("Initializing Output Codec -> %d, Node -> %d\n", _ihd_audio.output->codec, _ihd_audio.output->nid);

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	eax, WORD PTR [rax+2]
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR [rcx]
	mov	r8d, eax
	mov	edx, ecx
	lea	rcx, OFFSET FLAT:$SG3508
	call	?printf@@YAXPEBDZZ			; printf

; 282  : 
; 283  : 
; 284  : 
; 285  : 
; 286  : 	uint16_t format =  (0<<14)  | (1<<4) | 1;

	mov	eax, 17
	mov	WORD PTR format$[rsp], ax

; 287  : 	codec_query (_ihd_audio.output->codec, 2, VERB_SET_FORMAT | format);

	movzx	eax, WORD PTR format$[rsp]
	bts	eax, 17
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR [rcx]
	mov	r8d, eax
	mov	edx, 2
	call	?codec_query@@YAIHHI@Z			; codec_query

; 288  : 	codec_query (_ihd_audio.output->codec, 3, VERB_SET_FORMAT | format);

	movzx	eax, WORD PTR format$[rsp]
	bts	eax, 17
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR [rcx]
	mov	r8d, eax
	mov	edx, 3
	call	?codec_query@@YAIHHI@Z			; codec_query

; 289  : 	codec_query (_ihd_audio.output->codec, 4, VERB_SET_FORMAT | format);

	movzx	eax, WORD PTR format$[rsp]
	bts	eax, 17
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR [rcx]
	mov	r8d, eax
	mov	edx, 4
	call	?codec_query@@YAIHHI@Z			; codec_query

; 290  : 	codec_query (_ihd_audio.output->codec, 5, VERB_SET_FORMAT | format);

	movzx	eax, WORD PTR format$[rsp]
	bts	eax, 17
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR [rcx]
	mov	r8d, eax
	mov	edx, 5
	call	?codec_query@@YAIHHI@Z			; codec_query

; 291  : 	codec_query (_ihd_audio.output->codec, 6, VERB_SET_FORMAT | format);

	movzx	eax, WORD PTR format$[rsp]
	bts	eax, 17
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR [rcx]
	mov	r8d, eax
	mov	edx, 6
	call	?codec_query@@YAIHHI@Z			; codec_query

; 292  : 
; 293  : 	codec_query (_ihd_audio.output->codec, 2, VERB_SET_STREAM_CHANNEL | 0x10);

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	eax, BYTE PTR [rax]
	mov	r8d, 460304				; 00070610H
	mov	edx, 2
	mov	ecx, eax
	call	?codec_query@@YAIHHI@Z			; codec_query

; 294  : 	codec_query (_ihd_audio.output->codec, 3, VERB_SET_STREAM_CHANNEL | 0x10);

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	eax, BYTE PTR [rax]
	mov	r8d, 460304				; 00070610H
	mov	edx, 3
	mov	ecx, eax
	call	?codec_query@@YAIHHI@Z			; codec_query

; 295  : 	codec_query (_ihd_audio.output->codec, 4, VERB_SET_STREAM_CHANNEL | 0x10);

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	eax, BYTE PTR [rax]
	mov	r8d, 460304				; 00070610H
	mov	edx, 4
	mov	ecx, eax
	call	?codec_query@@YAIHHI@Z			; codec_query

; 296  : 	codec_query (_ihd_audio.output->codec, 5, VERB_SET_STREAM_CHANNEL | 0x10);

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	eax, BYTE PTR [rax]
	mov	r8d, 460304				; 00070610H
	mov	edx, 5
	mov	ecx, eax
	call	?codec_query@@YAIHHI@Z			; codec_query

; 297  : 	codec_query (_ihd_audio.output->codec, 6, VERB_SET_STREAM_CHANNEL | 0x10);

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	eax, BYTE PTR [rax]
	mov	r8d, 460304				; 00070610H
	mov	edx, 6
	mov	ecx, eax
	call	?codec_query@@YAIHHI@Z			; codec_query

; 298  : 
; 299  :     uint32_t stream = codec_query (_ihd_audio.output->codec, _ihd_audio.output->nid, 0xF0600);

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	eax, WORD PTR [rax+2]
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR [rcx]
	mov	r8d, 984576				; 000f0600H
	mov	edx, eax
	call	?codec_query@@YAIHHI@Z			; codec_query
	mov	DWORD PTR stream$[rsp], eax

; 300  : 
; 301  : 	_ihd_audio.output->sample_rate = SR_48_KHZ;

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	mov	DWORD PTR [rax+4], 0

; 302  : 	_ihd_audio.output->num_channels = 2;

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	mov	DWORD PTR [rax+12], 2

; 303  : 
; 304  : 
; 305  : 	uint32_t eapd_btl1 = codec_query (_ihd_audio.output->codec, 2, VERB_GET_EAPD_BTL);	

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	eax, BYTE PTR [rax]
	mov	r8d, 986112				; 000f0c00H
	mov	edx, 2
	mov	ecx, eax
	call	?codec_query@@YAIHHI@Z			; codec_query
	mov	DWORD PTR eapd_btl1$[rsp], eax

; 306  : 	codec_query (_ihd_audio.output->codec, 2,VERB_SET_EAPD_BTL |eapd_btl1 | 0x2);

	mov	eax, DWORD PTR eapd_btl1$[rsp]
	or	eax, 461824				; 00070c00H
	or	eax, 2
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR [rcx]
	mov	r8d, eax
	mov	edx, 2
	call	?codec_query@@YAIHHI@Z			; codec_query

; 307  : 	uint32_t eapd_btl2 = codec_query (_ihd_audio.output->codec, 3, VERB_GET_EAPD_BTL);	

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	eax, BYTE PTR [rax]
	mov	r8d, 986112				; 000f0c00H
	mov	edx, 3
	mov	ecx, eax
	call	?codec_query@@YAIHHI@Z			; codec_query
	mov	DWORD PTR eapd_btl2$[rsp], eax

; 308  : 	codec_query (_ihd_audio.output->codec, 3,VERB_SET_EAPD_BTL |eapd_btl2 | 0x2);

	mov	eax, DWORD PTR eapd_btl2$[rsp]
	or	eax, 461824				; 00070c00H
	or	eax, 2
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR [rcx]
	mov	r8d, eax
	mov	edx, 3
	call	?codec_query@@YAIHHI@Z			; codec_query

; 309  : 	uint32_t eapd_btl3 = codec_query (_ihd_audio.output->codec, 4, VERB_GET_EAPD_BTL);	

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	eax, BYTE PTR [rax]
	mov	r8d, 986112				; 000f0c00H
	mov	edx, 4
	mov	ecx, eax
	call	?codec_query@@YAIHHI@Z			; codec_query
	mov	DWORD PTR eapd_btl3$[rsp], eax

; 310  : 	codec_query (_ihd_audio.output->codec, 4,VERB_SET_EAPD_BTL |eapd_btl3 | 0x2);

	mov	eax, DWORD PTR eapd_btl3$[rsp]
	or	eax, 461824				; 00070c00H
	or	eax, 2
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR [rcx]
	mov	r8d, eax
	mov	edx, 4
	call	?codec_query@@YAIHHI@Z			; codec_query

; 311  : 	uint32_t eapd_btl4 = codec_query (_ihd_audio.output->codec, 5, VERB_GET_EAPD_BTL);	

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	eax, BYTE PTR [rax]
	mov	r8d, 986112				; 000f0c00H
	mov	edx, 5
	mov	ecx, eax
	call	?codec_query@@YAIHHI@Z			; codec_query
	mov	DWORD PTR eapd_btl4$[rsp], eax

; 312  : 	codec_query (_ihd_audio.output->codec, 5,VERB_SET_EAPD_BTL |eapd_btl4 | 0x2);

	mov	eax, DWORD PTR eapd_btl4$[rsp]
	or	eax, 461824				; 00070c00H
	or	eax, 2
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR [rcx]
	mov	r8d, eax
	mov	edx, 5
	call	?codec_query@@YAIHHI@Z			; codec_query

; 313  : 	uint32_t eapd_btl5 = codec_query (_ihd_audio.output->codec, 6, VERB_GET_EAPD_BTL);	

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	eax, BYTE PTR [rax]
	mov	r8d, 986112				; 000f0c00H
	mov	edx, 6
	mov	ecx, eax
	call	?codec_query@@YAIHHI@Z			; codec_query
	mov	DWORD PTR eapd_btl5$[rsp], eax

; 314  : 	codec_query (_ihd_audio.output->codec, 6,VERB_SET_EAPD_BTL |eapd_btl5 | 0x2);

	mov	eax, DWORD PTR eapd_btl5$[rsp]
	or	eax, 461824				; 00070c00H
	or	eax, 2
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR [rcx]
	mov	r8d, eax
	mov	edx, 6
	call	?codec_query@@YAIHHI@Z			; codec_query

; 315  : 
; 316  : 	//!Set Pin control : enable the output bit
; 317  : 	uint32_t ctl = codec_query(_ihd_audio.output->codec, _ihd_audio.output->nid, VERB_GET_PIN_CONTROL);

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	eax, WORD PTR [rax+2]
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR [rcx]
	mov	r8d, 984832				; 000f0700H
	mov	edx, eax
	call	?codec_query@@YAIHHI@Z			; codec_query
	mov	DWORD PTR ctl$[rsp], eax

; 318  : 	ctl |= (1<<6);

	mov	eax, DWORD PTR ctl$[rsp]
	or	eax, 64					; 00000040H
	mov	DWORD PTR ctl$[rsp], eax

; 319  : 	ctl |= (1<<7);

	mov	eax, DWORD PTR ctl$[rsp]
	bts	eax, 7
	mov	DWORD PTR ctl$[rsp], eax

; 320  : 
; 321  : 	codec_query (_ihd_audio.output->codec, 2, VERB_SET_PIN_CONTROL | 0xc0);

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	eax, BYTE PTR [rax]
	mov	r8d, 460736				; 000707c0H
	mov	edx, 2
	mov	ecx, eax
	call	?codec_query@@YAIHHI@Z			; codec_query

; 322  : 	codec_query (_ihd_audio.output->codec, 3, VERB_SET_PIN_CONTROL | 0xc0);

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	eax, BYTE PTR [rax]
	mov	r8d, 460736				; 000707c0H
	mov	edx, 3
	mov	ecx, eax
	call	?codec_query@@YAIHHI@Z			; codec_query

; 323  : 	codec_query (_ihd_audio.output->codec, 4, VERB_SET_PIN_CONTROL | 0xc0);

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	eax, BYTE PTR [rax]
	mov	r8d, 460736				; 000707c0H
	mov	edx, 4
	mov	ecx, eax
	call	?codec_query@@YAIHHI@Z			; codec_query

; 324  : 	codec_query (_ihd_audio.output->codec, 5, VERB_SET_PIN_CONTROL | 0xc0);

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	eax, BYTE PTR [rax]
	mov	r8d, 460736				; 000707c0H
	mov	edx, 5
	mov	ecx, eax
	call	?codec_query@@YAIHHI@Z			; codec_query

; 325  : 	codec_query (_ihd_audio.output->codec, 6, VERB_SET_PIN_CONTROL | 0xc0);

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	eax, BYTE PTR [rax]
	mov	r8d, 460736				; 000707c0H
	mov	edx, 6
	mov	ecx, eax
	call	?codec_query@@YAIHHI@Z			; codec_query

; 326  : 
; 327  : 	//codec_query(_ihd_audio.output->codec, _ihd_audio.output->nid, VERB_SET_POWER_STATE | 0x0000);
; 328  : 	//_aud_outl_(SSYNC,(1<<4));
; 329  : 
; 330  : 	//uint16_t format = (0<<14)  | (1<<4) | 1;  // (0<<14) | (0<<11) | (0<<8) | (1<<4) | 1;
; 331  : }

	add	rsp, 72					; 00000048H
	ret	0
?init_output@@YAXXZ ENDP				; init_output
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\drivers\hda\hda.cpp
_TEXT	SEGMENT
rirb_status$ = 32
verb$ = 36
icount$ = 40
response$ = 48
codec$ = 80
nid$ = 88
payload$ = 96
?codec_query@@YAIHHI@Z PROC				; codec_query

; 233  : static uint32_t codec_query (int codec, int nid, uint32_t payload) {

	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 72					; 00000048H

; 234  : 	uint64_t response;// = (uint32_t)pmmngr_alloc();
; 235  : 	uint32_t icount = 10000;

	mov	DWORD PTR icount$[rsp], 10000		; 00002710H

; 236  : 	uint32_t verb = ((codec & 0xf) << 28) | 
; 237  : 		((nid & 0xff) << 20) | 
; 238  : 		(payload & 0xfffff);

	mov	eax, DWORD PTR codec$[rsp]
	and	eax, 15
	shl	eax, 28
	mov	ecx, DWORD PTR nid$[rsp]
	and	ecx, 255				; 000000ffH
	shl	ecx, 20
	or	eax, ecx
	mov	ecx, DWORD PTR payload$[rsp]
	and	ecx, 1048575				; 000fffffH
	or	eax, ecx
	mov	DWORD PTR verb$[rsp], eax

; 239  : 
; 240  : 	//printf ("RIRB Status -> %d\n", (_aud_inl_(RIRBSTS >> 0)) & 0xff);
; 241  : 	corb_write(verb);

	mov	ecx, DWORD PTR verb$[rsp]
	call	?corb_write@@YAXI@Z			; corb_write
$LN3@codec_quer:

; 242  : 	uint8_t rirb_status;
; 243  : 	do {
; 244  : 		rirb_status = _aud_inb_(RIRBSTS);

	mov	ecx, 93					; 0000005dH
	call	?_aud_inb_@@YAEH@Z			; _aud_inb_
	mov	BYTE PTR rirb_status$[rsp], al

; 245  : 	}while ((rirb_status & 1) == 0);

	movzx	eax, BYTE PTR rirb_status$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN3@codec_quer

; 246  : 
; 247  : 
; 248  : 	rirb_read(&response);

	lea	rcx, QWORD PTR response$[rsp]
	call	?rirb_read@@YAXPEA_K@Z			; rirb_read

; 249  : 	//_aud_outb_(RIRBSTS, 0);
; 250  : 	return response & 0xffffffff;

	mov	eax, -1					; ffffffffH
	mov	rcx, QWORD PTR response$[rsp]
	and	rcx, rax
	mov	rax, rcx

; 251  : }

	add	rsp, 72					; 00000048H
	ret	0
?codec_query@@YAIHHI@Z ENDP				; codec_query
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\drivers\hda\hda.cpp
_TEXT	SEGMENT
rp$ = 32
wp$ = 36
old_rp$ = 40
response$ = 64
?rirb_read@@YAXPEA_K@Z PROC				; rirb_read

; 204  : static void rirb_read (uint64_t *response) {

	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 205  : 	uint16_t wp = _aud_inb_ (RIRBWP);

	mov	ecx, 88					; 00000058H
	call	?_aud_inb_@@YAEH@Z			; _aud_inb_
	movzx	eax, al
	mov	WORD PTR wp$[rsp], ax

; 206  : 	uint16_t rp = rirbrp;

	movzx	eax, WORD PTR ?rirbrp@@3GA		; rirbrp
	mov	WORD PTR rp$[rsp], ax

; 207  : 	uint16_t old_rp = rp;

	movzx	eax, WORD PTR rp$[rsp]
	mov	WORD PTR old_rp$[rsp], ax
$LN2@rirb_read:

; 208  : 
; 209  : 
; 210  : 	/*Wait for an unread entry in the RIRB */
; 211  : 	while (rirbrp == wp) {

	movzx	eax, WORD PTR ?rirbrp@@3GA		; rirbrp
	movzx	ecx, WORD PTR wp$[rsp]
	cmp	eax, ecx
	jne	SHORT $LN1@rirb_read

; 212  : 		wp = _aud_inw_(RIRBWP);  //_aud_inb_(RIRBWP);

	mov	ecx, 88					; 00000058H
	call	?_aud_inw_@@YAGH@Z			; _aud_inw_
	mov	WORD PTR wp$[rsp], ax

; 213  : 	}

	jmp	SHORT $LN2@rirb_read
$LN1@rirb_read:

; 214  : 
; 215  : 	/*while (rp != wp) {	
; 216  : 		rp++;
; 217  : 		rp %= _ihd_audio.rirb_entries;
; 218  : 		rirbrp = rp;
; 219  : 		*response = _ihd_audio.rirb[rirbrp];
; 220  : 	}*/
; 221  : 
; 222  : 	rp = (rp + 1) % _ihd_audio.rirb_entries;

	movzx	eax, WORD PTR rp$[rsp]
	inc	eax
	xor	edx, edx
	div	DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+24
	mov	eax, edx
	mov	WORD PTR rp$[rsp], ax

; 223  : 	rirbrp = rp;

	movzx	eax, WORD PTR rp$[rsp]
	mov	WORD PTR ?rirbrp@@3GA, ax		; rirbrp

; 224  : 	*response = _ihd_audio.rirb[rp];

	movzx	eax, WORD PTR rp$[rsp]
	mov	rcx, QWORD PTR response$[rsp]
	mov	rdx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+16
	mov	rax, QWORD PTR [rdx+rax*8]
	mov	QWORD PTR [rcx], rax

; 225  : 	_aud_outb_ (RIRBSTS, 0x5);

	mov	dl, 5
	mov	ecx, 93					; 0000005dH
	call	?_aud_outb_@@YAXHE@Z			; _aud_outb_

; 226  : 	return;
; 227  : }

	add	rsp, 56					; 00000038H
	ret	0
?rirb_read@@YAXPEA_K@Z ENDP				; rirb_read
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\drivers\hda\hda.cpp
_TEXT	SEGMENT
rp$ = 32
wp$ = 36
verb$ = 64
?corb_write@@YAXI@Z PROC				; corb_write

; 170  : static void corb_write (uint32_t verb) {

	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 56					; 00000038H

; 171  : 
; 172  : 	//! Check for immediate use
; 173  : 	if (_ihd_audio.immediate_use) {

	movzx	eax, BYTE PTR ?_ihd_audio@@3U_hd_audio_@@A+32
	test	eax, eax
	je	SHORT $LN4@corb_write

; 174  : 		_aud_outl_(ICOI,verb);

	mov	edx, DWORD PTR verb$[rsp]
	mov	ecx, 96					; 00000060H
	call	?_aud_outl_@@YAXHI@Z			; _aud_outl_

; 175  : 		_aud_outl_(ICIS,1);

	mov	edx, 1
	mov	ecx, 104				; 00000068H
	call	?_aud_outl_@@YAXHI@Z			; _aud_outl_

; 176  : 		return;

	jmp	$LN5@corb_write
$LN4@corb_write:

; 177  : 	}
; 178  : 
; 179  : 	//! else use standard command transmitting method
; 180  : 	uint16_t wp = _aud_inw_(CORBWP) & 0xff;

	mov	ecx, 72					; 00000048H
	call	?_aud_inw_@@YAGH@Z			; _aud_inw_
	movzx	eax, ax
	and	eax, 255				; 000000ffH
	mov	WORD PTR wp$[rsp], ax

; 181  : 	uint16_t rp = _aud_inw_(CORBRP) & 0xff;

	mov	ecx, 74					; 0000004aH
	call	?_aud_inw_@@YAGH@Z			; _aud_inw_
	movzx	eax, ax
	and	eax, 255				; 000000ffH
	mov	WORD PTR rp$[rsp], ax

; 182  :     corbwp = 0;

	xor	eax, eax
	mov	WORD PTR ?corbwp@@3GA, ax		; corbwp

; 183  : 	corbwp = (rp + 1);

	movzx	eax, WORD PTR rp$[rsp]
	inc	eax
	mov	WORD PTR ?corbwp@@3GA, ax		; corbwp

; 184  : 	corbwp %= _ihd_audio.corb_entries;

	movzx	eax, WORD PTR ?corbwp@@3GA		; corbwp
	xor	edx, edx
	div	DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+28
	mov	eax, edx
	mov	WORD PTR ?corbwp@@3GA, ax		; corbwp
$LN3@corb_write:

; 185  : 	
; 186  : 	/*Wait until there's a free entry in the CORB */
; 187  : 	do {
; 188  : 		rp = _aud_inw_(CORBRP) & 0xff;

	mov	ecx, 74					; 0000004aH
	call	?_aud_inw_@@YAGH@Z			; _aud_inw_
	movzx	eax, ax
	and	eax, 255				; 000000ffH
	mov	WORD PTR rp$[rsp], ax

; 189  : 	}while (rp == corbwp);

	movzx	eax, WORD PTR rp$[rsp]
	movzx	ecx, WORD PTR ?corbwp@@3GA		; corbwp
	cmp	eax, ecx
	je	SHORT $LN3@corb_write

; 190  : 
; 191  : 	
; 192  : 	/* Write to CORB */	
; 193  : 	_ihd_audio.corb[corbwp] = verb;	

	movzx	eax, WORD PTR ?corbwp@@3GA		; corbwp
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+8
	mov	edx, DWORD PTR verb$[rsp]
	mov	DWORD PTR [rcx+rax*4], edx

; 194  :     _aud_outw_(CORBWP, corbwp);

	movzx	edx, WORD PTR ?corbwp@@3GA		; corbwp
	mov	ecx, 72					; 00000048H
	call	?_aud_outw_@@YAXHG@Z			; _aud_outw_
$LN5@corb_write:

; 195  : 
; 196  : }

	add	rsp, 56					; 00000038H
	ret	0
?corb_write@@YAXI@Z ENDP				; corb_write
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\drivers\hda\hda.cpp
_TEXT	SEGMENT
reg$ = 32
rirbctl$ = 36
rirb_entries$ = 40
rirb_base$ = 48
?setup_rirb@@YAXXZ PROC					; setup_rirb

; 120  : void setup_rirb() {

$LN9:
	sub	rsp, 72					; 00000048H

; 121  : 
; 122  : 	uint8_t reg;
; 123  : 	uint64_t rirb_base;
; 124  : 	uint32_t rirb_entries = 0;

	mov	DWORD PTR rirb_entries$[rsp], 0

; 125  : 
; 126  : 	
; 127  : 	//_aud_outw_(RIRBCTL, 0);
; 128  : 
; 129  : 	reg = _aud_inb_ (RIRBSIZE);

	mov	ecx, 94					; 0000005eH
	call	?_aud_inb_@@YAEH@Z			; _aud_inb_
	mov	BYTE PTR reg$[rsp], al

; 130  : 	/* Check RIRB size capabilities and choose the largest size */
; 131  : 	if (reg & (1 << 6)) {

	movzx	eax, BYTE PTR reg$[rsp]
	and	eax, 64					; 00000040H
	test	eax, eax
	je	SHORT $LN6@setup_rirb

; 132  : 		_ihd_audio.rirb_entries = 256;

	mov	DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+24, 256 ; 00000100H

; 133  : 		reg |= 0x2;

	movzx	eax, BYTE PTR reg$[rsp]
	or	eax, 2
	mov	BYTE PTR reg$[rsp], al
	jmp	SHORT $LN5@setup_rirb
$LN6@setup_rirb:

; 134  : 	} else if (reg & (1 << 5)) {

	movzx	eax, BYTE PTR reg$[rsp]
	and	eax, 32					; 00000020H
	test	eax, eax
	je	SHORT $LN4@setup_rirb

; 135  : 		_ihd_audio.rirb_entries = 16;

	mov	DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+24, 16

; 136  : 		reg |= 0x1;

	movzx	eax, BYTE PTR reg$[rsp]
	or	eax, 1
	mov	BYTE PTR reg$[rsp], al
	jmp	SHORT $LN3@setup_rirb
$LN4@setup_rirb:

; 137  : 	}else if (reg & (1 << 4)) {

	movzx	eax, BYTE PTR reg$[rsp]
	and	eax, 16
	test	eax, eax
	je	SHORT $LN2@setup_rirb

; 138  : 		_ihd_audio.rirb_entries = 2;

	mov	DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+24, 2

; 139  : 		reg |= 0x0;

	movzx	eax, BYTE PTR reg$[rsp]
	mov	BYTE PTR reg$[rsp], al

; 140  : 	}else {

	jmp	SHORT $LN1@setup_rirb
$LN2@setup_rirb:

; 141  : 		printf ("HD Audio: No supported RIRB size !!\n");

	lea	rcx, OFFSET FLAT:$SG3467
	call	?printf@@YAXPEBDZZ			; printf

; 142  : 		_ihd_audio.rirb_entries = 256;

	mov	DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+24, 256 ; 00000100H

; 143  : 		reg |= 0x2;

	movzx	eax, BYTE PTR reg$[rsp]
	or	eax, 2
	mov	BYTE PTR reg$[rsp], al
$LN1@setup_rirb:
$LN3@setup_rirb:
$LN5@setup_rirb:

; 144  : 	}
; 145  : 
; 146  : 	_aud_outb_(RIRBSIZE,reg);

	movzx	edx, BYTE PTR reg$[rsp]
	mov	ecx, 94					; 0000005eH
	call	?_aud_outb_@@YAXHE@Z			; _aud_outb_

; 147  : 
; 148  : 	/* Set RIRB Base address */
; 149  : 	rirb_base = (uint64_t)_ihd_audio.rirb;

	mov	rax, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+16
	mov	QWORD PTR rirb_base$[rsp], rax

; 150  : 	_aud_outl_(RIRBLBASE, rirb_base);

	mov	edx, DWORD PTR rirb_base$[rsp]
	mov	ecx, 80					; 00000050H
	call	?_aud_outl_@@YAXHI@Z			; _aud_outl_

; 151  : 	_aud_outl_(RIRBUBASE, rirb_base >> 32);

	mov	rax, QWORD PTR rirb_base$[rsp]
	shr	rax, 32					; 00000020H
	mov	edx, eax
	mov	ecx, 84					; 00000054H
	call	?_aud_outl_@@YAXHI@Z			; _aud_outl_

; 152  : 
; 153  : 	_aud_outw_ (RIRBWP, 0x8000);

	mov	dx, 32768				; 00008000H
	mov	ecx, 88					; 00000058H
	call	?_aud_outw_@@YAXHG@Z			; _aud_outw_

; 154  : 	/*for (int i = 0; i < 1000; i++)
; 155  : 		;*/
; 156  : 	_aud_outw_(RINTCNT, _ihd_audio.rirb_entries / 2);

	xor	edx, edx
	mov	eax, DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+24
	mov	ecx, 2
	div	ecx
	movzx	edx, ax
	mov	ecx, 90					; 0000005aH
	call	?_aud_outw_@@YAXHG@Z			; _aud_outw_

; 157  : 
; 158  : 	_aud_outb_ (RIRBCTL,0x1);

	mov	dl, 1
	mov	ecx, 92					; 0000005cH
	call	?_aud_outb_@@YAXHE@Z			; _aud_outb_

; 159  : 	/* Start DMA Engine */
; 160  : 	uint32_t rirbctl = _aud_inb_ (RIRBCTL);

	mov	ecx, 92					; 0000005cH
	call	?_aud_inb_@@YAEH@Z			; _aud_inb_
	movzx	eax, al
	mov	DWORD PTR rirbctl$[rsp], eax

; 161  : 	rirbctl |= 0x2;

	mov	eax, DWORD PTR rirbctl$[rsp]
	or	eax, 2
	mov	DWORD PTR rirbctl$[rsp], eax

; 162  : 	_aud_outb_ (RIRBCTL,rirbctl);

	movzx	edx, BYTE PTR rirbctl$[rsp]
	mov	ecx, 92					; 0000005cH
	call	?_aud_outb_@@YAXHE@Z			; _aud_outb_

; 163  : 
; 164  : }

	add	rsp, 72					; 00000048H
	ret	0
?setup_rirb@@YAXXZ ENDP					; setup_rirb
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\drivers\hda\hda.cpp
_TEXT	SEGMENT
reg$ = 32
corbctl$ = 36
corb_entries$ = 40
corb_base$ = 48
?setup_corb@@YAXXZ PROC					; setup_corb

; 77   : void setup_corb () {

$LN9:
	sub	rsp, 72					; 00000048H

; 78   : 	
; 79   : 	uint8_t reg;
; 80   : 	uint64_t corb_base;
; 81   : 	unsigned int corb_entries = 0;

	mov	DWORD PTR corb_entries$[rsp], 0

; 82   : 
; 83   : 	reg = _aud_inb_(CORBSIZE);

	mov	ecx, 78					; 0000004eH
	call	?_aud_inb_@@YAEH@Z			; _aud_inb_
	mov	BYTE PTR reg$[rsp], al

; 84   : 	/* Check CORB size capabilities and choose the largest size */
; 85   : 	if (reg & (1 << 6)) {

	movzx	eax, BYTE PTR reg$[rsp]
	and	eax, 64					; 00000040H
	test	eax, eax
	je	SHORT $LN6@setup_corb

; 86   : 		_ihd_audio.corb_entries = 256;

	mov	DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+28, 256 ; 00000100H

; 87   : 		reg |= 0x2;

	movzx	eax, BYTE PTR reg$[rsp]
	or	eax, 2
	mov	BYTE PTR reg$[rsp], al
	jmp	SHORT $LN5@setup_corb
$LN6@setup_corb:

; 88   : 	} else if (reg & (1 << 5)) {

	movzx	eax, BYTE PTR reg$[rsp]
	and	eax, 32					; 00000020H
	test	eax, eax
	je	SHORT $LN4@setup_corb

; 89   : 		_ihd_audio.corb_entries = 16;

	mov	DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+28, 16

; 90   : 		reg |= 0x1;

	movzx	eax, BYTE PTR reg$[rsp]
	or	eax, 1
	mov	BYTE PTR reg$[rsp], al
	jmp	SHORT $LN3@setup_corb
$LN4@setup_corb:

; 91   : 	} else if (reg & (1 << 4)) {

	movzx	eax, BYTE PTR reg$[rsp]
	and	eax, 16
	test	eax, eax
	je	SHORT $LN2@setup_corb

; 92   : 		_ihd_audio.corb_entries = 2;

	mov	DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+28, 2

; 93   : 		reg |= 0x0;

	movzx	eax, BYTE PTR reg$[rsp]
	mov	BYTE PTR reg$[rsp], al

; 94   : 	} else {

	jmp	SHORT $LN1@setup_corb
$LN2@setup_corb:

; 95   : 		_ihd_audio.corb_entries = 256;

	mov	DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+28, 256 ; 00000100H

; 96   : 		reg |= 0x2;

	movzx	eax, BYTE PTR reg$[rsp]
	or	eax, 2
	mov	BYTE PTR reg$[rsp], al
$LN1@setup_corb:
$LN3@setup_corb:
$LN5@setup_corb:

; 97   : 	}
; 98   : 
; 99   : 	_aud_outb_(CORBSIZE, reg);

	movzx	edx, BYTE PTR reg$[rsp]
	mov	ecx, 78					; 0000004eH
	call	?_aud_outb_@@YAXHE@Z			; _aud_outb_

; 100  : 
; 101  : 
; 102  : 	/* Set CORB Base Address */
; 103  : 	corb_base = (uintptr_t)_ihd_audio.corb;

	mov	eax, DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+8
	mov	QWORD PTR corb_base$[rsp], rax

; 104  : 	_aud_outl_(CORBLBASE, corb_base);

	mov	edx, DWORD PTR corb_base$[rsp]
	mov	ecx, 64					; 00000040H
	call	?_aud_outl_@@YAXHI@Z			; _aud_outl_

; 105  : 	_aud_outl_(CORBUBASE, corb_base >> 32);

	mov	rax, QWORD PTR corb_base$[rsp]
	shr	rax, 32					; 00000020H
	mov	edx, eax
	mov	ecx, 68					; 00000044H
	call	?_aud_outl_@@YAXHI@Z			; _aud_outl_

; 106  : 
; 107  : 	_aud_outw_ (CORBWP, corbwp);

	movzx	edx, WORD PTR ?corbwp@@3GA		; corbwp
	mov	ecx, 72					; 00000048H
	call	?_aud_outw_@@YAXHG@Z			; _aud_outw_

; 108  : 	_aud_outw_ (CORBRP, 0x8000);

	mov	dx, 32768				; 00008000H
	mov	ecx, 74					; 0000004aH
	call	?_aud_outw_@@YAXHG@Z			; _aud_outw_

; 109  : 	_aud_outw_ (CORBRP, 0x0);

	xor	edx, edx
	mov	ecx, 74					; 0000004aH
	call	?_aud_outw_@@YAXHG@Z			; _aud_outw_

; 110  : 	
; 111  : 	/* Start DMA engine */
; 112  : 	_aud_outb_(CORBCTL, 0x1);

	mov	dl, 1
	mov	ecx, 76					; 0000004cH
	call	?_aud_outb_@@YAXHE@Z			; _aud_outb_

; 113  : 	uint32_t corbctl = _aud_inb_(CORBCTL);

	mov	ecx, 76					; 0000004cH
	call	?_aud_inb_@@YAEH@Z			; _aud_inb_
	movzx	eax, al
	mov	DWORD PTR corbctl$[rsp], eax

; 114  : 	corbctl |= 0x2;

	mov	eax, DWORD PTR corbctl$[rsp]
	or	eax, 2
	mov	DWORD PTR corbctl$[rsp], eax

; 115  : 	_aud_outb_ (CORBCTL, corbctl);

	movzx	edx, BYTE PTR corbctl$[rsp]
	mov	ecx, 76					; 0000004cH
	call	?_aud_outb_@@YAXHE@Z			; _aud_outb_

; 116  : }

	add	rsp, 72					; 00000048H
	ret	0
?setup_corb@@YAXXZ ENDP					; setup_corb
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\drivers\hda\hda.cpp
_TEXT	SEGMENT
v$ = 48
p$ = 56
?hda_handler@@YAX_KPEAX@Z PROC				; hda_handler

; 68   : void hda_handler (size_t v, void* p) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 69   : 	printf ("HD-Audio Interrupt fired++\n");

	lea	rcx, OFFSET FLAT:$SG3442
	call	?printf@@YAXPEBDZZ			; printf

; 70   : 	//apic_local_eoi();
; 71   : 	interrupt_end(0);

	xor	ecx, ecx
	call	?interrupt_end@@YAXI@Z			; interrupt_end

; 72   : }

	add	rsp, 40					; 00000028H
	ret	0
?hda_handler@@YAX_KPEAX@Z ENDP				; hda_handler
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\drivers\hda\hda.cpp
_TEXT	SEGMENT
mmio$ = 0
reg$ = 32
?_aud_inb_@@YAEH@Z PROC					; _aud_inb_

; 57   : uint8_t _aud_inb_ (int reg) {

$LN3:
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 24

; 58   : 	volatile uint8_t* mmio = (uint8_t*)(_ihd_audio.mmio + reg);

	movsxd	rax, DWORD PTR reg$[rsp]
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR mmio$[rsp], rax

; 59   : 	return *mmio;

	mov	rax, QWORD PTR mmio$[rsp]
	movzx	eax, BYTE PTR [rax]

; 60   : }

	add	rsp, 24
	ret	0
?_aud_inb_@@YAEH@Z ENDP					; _aud_inb_
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\drivers\hda\hda.cpp
_TEXT	SEGMENT
mmio$ = 0
reg$ = 32
value$ = 40
?_aud_outb_@@YAXHE@Z PROC				; _aud_outb_

; 51   : void _aud_outb_ (int reg, uint8_t value) {

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 24

; 52   : 	 volatile uint8_t* mmio = (uint8_t*)(_ihd_audio.mmio + reg);

	movsxd	rax, DWORD PTR reg$[rsp]
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR mmio$[rsp], rax

; 53   : 	*mmio = value;

	mov	rax, QWORD PTR mmio$[rsp]
	movzx	ecx, BYTE PTR value$[rsp]
	mov	BYTE PTR [rax], cl

; 54   : }

	add	rsp, 24
	ret	0
?_aud_outb_@@YAXHE@Z ENDP				; _aud_outb_
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\drivers\hda\hda.cpp
_TEXT	SEGMENT
mmio$ = 0
reg$ = 32
?_aud_inw_@@YAGH@Z PROC					; _aud_inw_

; 45   : uint16_t _aud_inw_(int reg) {

$LN3:
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 24

; 46   : 	volatile uint16_t* mmio = (uint16_t*)(_ihd_audio.mmio + reg);

	movsxd	rax, DWORD PTR reg$[rsp]
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR mmio$[rsp], rax

; 47   : 	return *mmio;

	mov	rax, QWORD PTR mmio$[rsp]
	movzx	eax, WORD PTR [rax]

; 48   : }

	add	rsp, 24
	ret	0
?_aud_inw_@@YAGH@Z ENDP					; _aud_inw_
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\drivers\hda\hda.cpp
_TEXT	SEGMENT
mmio$ = 0
reg$ = 32
value$ = 40
?_aud_outw_@@YAXHG@Z PROC				; _aud_outw_

; 39   : void _aud_outw_ (int reg, uint16_t value) {

$LN3:
	mov	WORD PTR [rsp+16], dx
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 24

; 40   : 	volatile uint16_t* mmio = (uint16_t*)(_ihd_audio.mmio + reg);

	movsxd	rax, DWORD PTR reg$[rsp]
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR mmio$[rsp], rax

; 41   : 	*mmio = value;

	mov	rax, QWORD PTR mmio$[rsp]
	movzx	ecx, WORD PTR value$[rsp]
	mov	WORD PTR [rax], cx

; 42   : }

	add	rsp, 24
	ret	0
?_aud_outw_@@YAXHG@Z ENDP				; _aud_outw_
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\drivers\hda\hda.cpp
_TEXT	SEGMENT
mmio$ = 0
reg$ = 32
?_aud_inl_@@YAIH@Z PROC					; _aud_inl_

; 33   : uint32_t _aud_inl_ (int reg) {

$LN3:
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 24

; 34   :     volatile uint32_t* mmio = (uint32_t*)(_ihd_audio.mmio + reg);

	movsxd	rax, DWORD PTR reg$[rsp]
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR mmio$[rsp], rax

; 35   : 	return *mmio;

	mov	rax, QWORD PTR mmio$[rsp]
	mov	eax, DWORD PTR [rax]

; 36   : }

	add	rsp, 24
	ret	0
?_aud_inl_@@YAIH@Z ENDP					; _aud_inl_
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\drivers\hda\hda.cpp
_TEXT	SEGMENT
mmio$ = 0
reg$ = 32
value$ = 40
?_aud_outl_@@YAXHI@Z PROC				; _aud_outl_

; 27   : void _aud_outl_(int reg, uint32_t value) {

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 24

; 28   : 	 volatile uint32_t* mmio = (uint32_t*)(_ihd_audio.mmio + reg);

	movsxd	rax, DWORD PTR reg$[rsp]
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR mmio$[rsp], rax

; 29   : 	*mmio = value;

	mov	rax, QWORD PTR mmio$[rsp]
	mov	ecx, DWORD PTR value$[rsp]
	mov	DWORD PTR [rax], ecx

; 30   : }

	add	rsp, 24
	ret	0
?_aud_outl_@@YAXHI@Z ENDP				; _aud_outl_
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\drivers\hda\hda.cpp
_TEXT	SEGMENT
meta$ = 32
volume$ = 64
?hda_set_volume@@YAXE@Z PROC				; hda_set_volume

; 255  : void hda_set_volume (uint8_t volume) {

$LN5:
	mov	BYTE PTR [rsp+8], cl
	sub	rsp, 56					; 00000038H

; 256  : 	int meta = 0xb000;

	mov	DWORD PTR meta$[rsp], 45056		; 0000b000H

; 257  : 	if (volume == 0)

	movzx	eax, BYTE PTR volume$[rsp]
	test	eax, eax
	jne	SHORT $LN2@hda_set_vo

; 258  : 		volume = 0x80;  //mute bit

	mov	BYTE PTR volume$[rsp], 128		; 00000080H

; 259  : 	else

	jmp	SHORT $LN1@hda_set_vo
$LN2@hda_set_vo:

; 260  : 		volume = volume * 127 / 255;

	movzx	eax, BYTE PTR volume$[rsp]
	imul	eax, 127				; 0000007fH
	cdq
	mov	ecx, 255				; 000000ffH
	idiv	ecx
	mov	BYTE PTR volume$[rsp], al
$LN1@hda_set_vo:

; 261  : 	//codec_query (_ihd_audio.output->codec, _ihd_audio.output->nid, VERB_SET_AMP_GAIN_MUTE | 0xb000 | volume);
; 262  : 		
; 263  : 	codec_query (_ihd_audio.output->codec, 2, 0x39000 | volume);

	movzx	eax, BYTE PTR volume$[rsp]
	or	eax, 233472				; 00039000H
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR [rcx]
	mov	r8d, eax
	mov	edx, 2
	call	?codec_query@@YAIHHI@Z			; codec_query

; 264  : 	codec_query (_ihd_audio.output->codec, 2, 0x3A000 | volume );

	movzx	eax, BYTE PTR volume$[rsp]
	or	eax, 237568				; 0003a000H
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR [rcx]
	mov	r8d, eax
	mov	edx, 2
	call	?codec_query@@YAIHHI@Z			; codec_query

; 265  : 	codec_query (_ihd_audio.output->codec, 3, 0x39000 | volume);

	movzx	eax, BYTE PTR volume$[rsp]
	or	eax, 233472				; 00039000H
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR [rcx]
	mov	r8d, eax
	mov	edx, 3
	call	?codec_query@@YAIHHI@Z			; codec_query

; 266  : 	codec_query (_ihd_audio.output->codec, 3, 0x3A000 | volume);

	movzx	eax, BYTE PTR volume$[rsp]
	or	eax, 237568				; 0003a000H
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR [rcx]
	mov	r8d, eax
	mov	edx, 3
	call	?codec_query@@YAIHHI@Z			; codec_query

; 267  : 	codec_query (_ihd_audio.output->codec, 4, 0x39000 | volume);

	movzx	eax, BYTE PTR volume$[rsp]
	or	eax, 233472				; 00039000H
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR [rcx]
	mov	r8d, eax
	mov	edx, 4
	call	?codec_query@@YAIHHI@Z			; codec_query

; 268  : 	codec_query (_ihd_audio.output->codec, 4, 0x3A000 | volume);

	movzx	eax, BYTE PTR volume$[rsp]
	or	eax, 237568				; 0003a000H
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR [rcx]
	mov	r8d, eax
	mov	edx, 4
	call	?codec_query@@YAIHHI@Z			; codec_query

; 269  : 	codec_query (_ihd_audio.output->codec, 5, 0x39000 | volume);

	movzx	eax, BYTE PTR volume$[rsp]
	or	eax, 233472				; 00039000H
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR [rcx]
	mov	r8d, eax
	mov	edx, 5
	call	?codec_query@@YAIHHI@Z			; codec_query

; 270  : 	codec_query (_ihd_audio.output->codec, 5, 0x3A000 | volume);

	movzx	eax, BYTE PTR volume$[rsp]
	or	eax, 237568				; 0003a000H
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR [rcx]
	mov	r8d, eax
	mov	edx, 5
	call	?codec_query@@YAIHHI@Z			; codec_query

; 271  : 	codec_query (_ihd_audio.output->codec, 6, 0x39000 | volume);

	movzx	eax, BYTE PTR volume$[rsp]
	or	eax, 233472				; 00039000H
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR [rcx]
	mov	r8d, eax
	mov	edx, 6
	call	?codec_query@@YAIHHI@Z			; codec_query

; 272  : 	codec_query (_ihd_audio.output->codec, 6, 0x3A000 | volume);

	movzx	eax, BYTE PTR volume$[rsp]
	or	eax, 237568				; 0003a000H
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	movzx	ecx, BYTE PTR [rcx]
	mov	r8d, eax
	mov	edx, 6
	call	?codec_query@@YAIHHI@Z			; codec_query

; 273  : 
; 274  : }

	add	rsp, 56					; 00000038H
	ret	0
?hda_set_volume@@YAXE@Z ENDP				; hda_set_volume
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\drivers\hda\hda.cpp
_TEXT	SEGMENT
pci_status$ = 48
gcap$ = 52
i$1 = 56
i$2 = 60
statests$ = 64
bus$ = 68
dev$ = 72
func$ = 76
vol$ = 80
tv147 = 88
pos$ = 96
pci_dev$ = 112
?hda_initialize@@YAXXZ PROC				; hda_initialize

; 610  : void hda_initialize () {

$LN14:
	sub	rsp, 376				; 00000178H

; 611  : 	pci_device_info pci_dev;
; 612  : 	int bus, dev, func;
; 613  : 
; 614  : 	if (!pci_find_device_class (0x04, 0x03, &pci_dev, &bus, &dev, &func)){

	lea	rax, QWORD PTR func$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR dev$[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR bus$[rsp]
	lea	r8, QWORD PTR pci_dev$[rsp]
	mov	dl, 3
	mov	cl, 4
	call	?pci_find_device_class@@YA_NEEPEATpci_device_info@@PEAH11@Z ; pci_find_device_class
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN11@hda_initia

; 615  : 		printf ("No HD-Audio was found\n");

	lea	rcx, OFFSET FLAT:$SG3646
	call	?printf@@YAXPEBDZZ			; printf

; 616  : 		return;

	jmp	$LN12@hda_initia
$LN11@hda_initia:

; 617  : 	}
; 618  : 
; 619  : 	x64_cli();

	call	x64_cli

; 620  : 	_ihd_audio.output = (hda_output*)pmmngr_alloc();

	call	?pmmngr_alloc@@YAPEAXXZ			; pmmngr_alloc
	mov	QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33, rax

; 621  : 	_ihd_audio.vol = (hda_volume*)pmmngr_alloc();

	call	?pmmngr_alloc@@YAPEAXXZ			; pmmngr_alloc
	mov	QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+41, rax

; 622  : 	memset (_ihd_audio.output, 0, 4096);

	mov	r8d, 4096				; 00001000H
	xor	edx, edx
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+33
	call	?memset@@YAXPEAXEI@Z			; memset

; 623  : 
; 624  : 	printf ("HD Audio found vendor -> %x, device -> %x\n", pci_dev.device.vendorID, pci_dev.device.deviceID);

	movzx	eax, WORD PTR pci_dev$[rsp+2]
	movzx	ecx, WORD PTR pci_dev$[rsp]
	mov	r8d, eax
	mov	edx, ecx
	lea	rcx, OFFSET FLAT:$SG3649
	call	?printf@@YAXPEBDZZ			; printf

; 625  : 	printf ("HD-Audio interrupt line -> %d\n", pci_dev.device.nonBridge.interruptLine);

	movzx	eax, BYTE PTR pci_dev$[rsp+60]
	mov	edx, eax
	lea	rcx, OFFSET FLAT:$SG3650
	call	?printf@@YAXPEBDZZ			; printf

; 626  : 
; 627  : 
; 628  : 	bool pci_status = pci_alloc_msi (func, dev, bus, hda_handler);

	lea	r9, OFFSET FLAT:?hda_handler@@YAX_KPEAX@Z ; hda_handler
	mov	r8d, DWORD PTR bus$[rsp]
	mov	edx, DWORD PTR dev$[rsp]
	mov	ecx, DWORD PTR func$[rsp]
	call	?pci_alloc_msi@@YA_NHHHP6AX_KPEAX@Z@Z	; pci_alloc_msi
	mov	BYTE PTR pci_status$[rsp], al

; 629  : 	if (!pci_status) {

	movzx	eax, BYTE PTR pci_status$[rsp]
	test	eax, eax
	jne	SHORT $LN10@hda_initia

; 630  : 		//! fall to legacy interrupt handling mode
; 631  : 		interrupt_set (10, hda_handler, pci_dev.device.nonBridge.interruptLine);

	movzx	r8d, BYTE PTR pci_dev$[rsp+60]
	lea	rdx, OFFSET FLAT:?hda_handler@@YAX_KPEAX@Z ; hda_handler
	mov	ecx, 10
	call	?interrupt_set@@YAX_KP6AX0PEAX@ZE@Z	; interrupt_set
$LN10@hda_initia:

; 632  : 	}
; 633  : 
; 634  : 
; 635  : 	_ihd_audio.mmio = pci_dev.device.nonBridge.baseAddress[0] & ~3;

	mov	eax, 4
	imul	rax, 0
	mov	eax, DWORD PTR pci_dev$[rsp+rax+16]
	and	eax, -4					; fffffffcH
	mov	eax, eax
	mov	QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A, rax

; 636  : 	_ihd_audio.corb = (uint32_t*)pmmngr_alloc(); //for 256 entries only 1 kb will be used

	call	?pmmngr_alloc@@YAPEAXXZ			; pmmngr_alloc
	mov	QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+8, rax

; 637  : 	_ihd_audio.rirb = (uint64_t*)pmmngr_alloc(); //(ring_address + 1024);

	call	?pmmngr_alloc@@YAPEAXXZ			; pmmngr_alloc
	mov	QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+16, rax

; 638  : 	memset (_ihd_audio.corb, 0, 4096);

	mov	r8d, 4096				; 00001000H
	xor	edx, edx
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+8
	call	?memset@@YAXPEAXEI@Z			; memset

; 639  : 	memset (_ihd_audio.rirb, 0, 4096);

	mov	r8d, 4096				; 00001000H
	xor	edx, edx
	mov	rcx, QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+16
	call	?memset@@YAXPEAXEI@Z			; memset

; 640  : 
; 641  : 	uint64_t pos = 0xFFFFE00000100000;

	mov	rax, -35184371040256			; ffffe00000100000H
	mov	QWORD PTR pos$[rsp], rax

; 642  : 	for (int i = 0; i < 4*0x10000 / 4096; i++) {

	mov	DWORD PTR i$2[rsp], 0
	jmp	SHORT $LN9@hda_initia
$LN8@hda_initia:
	mov	eax, DWORD PTR i$2[rsp]
	inc	eax
	mov	DWORD PTR i$2[rsp], eax
$LN9@hda_initia:
	cmp	DWORD PTR i$2[rsp], 64			; 00000040H
	jge	SHORT $LN7@hda_initia

; 643  : 		map_page ((uint64_t)pmmngr_alloc(),pos + i * 4096, 0);

	mov	eax, DWORD PTR i$2[rsp]
	imul	eax, 4096				; 00001000H
	cdqe
	mov	rcx, QWORD PTR pos$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tv147[rsp], rax
	call	?pmmngr_alloc@@YAPEAXXZ			; pmmngr_alloc
	xor	r8d, r8d
	mov	rcx, QWORD PTR tv147[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?map_page@@YA_N_K0E@Z			; map_page

; 644  : 	}

	jmp	SHORT $LN8@hda_initia
$LN7@hda_initia:

; 645  : 
; 646  : 	_ihd_audio.buffer = (uint64_t*)0xFFFFE00000100000;

	mov	rax, -35184371040256			; ffffe00000100000H
	mov	QWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+61, rax

; 647  : 
; 648  : 	//memset (_ihd_audio.buffer, 0, 4*0x10000);
; 649  : 	if (_aud_inw_ (GCAP) & 1) {

	xor	ecx, ecx
	call	?_aud_inw_@@YAGH@Z			; _aud_inw_
	movzx	eax, ax
	and	eax, 1
	test	eax, eax
	je	SHORT $LN6@hda_initia

; 650  : 		printf ("HD-Audio 64-OK\n");

	lea	rcx, OFFSET FLAT:$SG3663
	call	?printf@@YAXPEBDZZ			; printf
$LN6@hda_initia:

; 651  : 	}
; 652  : 
; 653  : 
; 654  : 	hda_reset();

	call	?hda_reset@@YAXXZ			; hda_reset

; 655  : 
; 656  :      uint16_t gcap = _aud_inw_(GCAP);

	xor	ecx, ecx
	call	?_aud_inw_@@YAGH@Z			; _aud_inw_
	mov	WORD PTR gcap$[rsp], ax

; 657  : 	_ihd_audio.num_oss = HDA_GCAP_OSS(gcap);

	movzx	eax, WORD PTR gcap$[rsp]
	and	eax, 61440				; 0000f000H
	sar	eax, 12
	mov	WORD PTR ?_ihd_audio@@3U_hd_audio_@@A+51, ax

; 658  : 	_ihd_audio.num_iss = HDA_GCAP_ISS(gcap);

	movzx	eax, WORD PTR gcap$[rsp]
	and	eax, 3840				; 00000f00H
	sar	eax, 8
	mov	WORD PTR ?_ihd_audio@@3U_hd_audio_@@A+49, ax

; 659  : 	_ihd_audio.stream_0_x = 0x80 + (_ihd_audio.num_iss * 0x20);

	movzx	eax, WORD PTR ?_ihd_audio@@3U_hd_audio_@@A+49
	imul	eax, 32					; 00000020H
	add	eax, 128				; 00000080H
	mov	DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+53, eax

; 660  : 	_ihd_audio.stream_0_y = 0x80 + (_ihd_audio.num_iss * 0x20) + (_ihd_audio.num_oss * 0x20);

	movzx	eax, WORD PTR ?_ihd_audio@@3U_hd_audio_@@A+49
	imul	eax, 32					; 00000020H
	movzx	ecx, WORD PTR ?_ihd_audio@@3U_hd_audio_@@A+51
	imul	ecx, 32					; 00000020H
	lea	eax, DWORD PTR [rax+rcx+128]
	mov	DWORD PTR ?_ihd_audio@@3U_hd_audio_@@A+57, eax

; 661  : 	
; 662  : 	
; 663  :     
; 664  : 	
; 665  : 
; 666  : 	uint16_t statests = _aud_inw_ (STATESTS);

	mov	ecx, 14
	call	?_aud_inw_@@YAGH@Z			; _aud_inw_
	mov	WORD PTR statests$[rsp], ax

; 667  : 	for (int i = 0; i < 15; i++) {

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN5@hda_initia
$LN4@hda_initia:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN5@hda_initia:
	cmp	DWORD PTR i$1[rsp], 15
	jge	SHORT $LN3@hda_initia

; 668  : 		if (statests & (1 >> i)){

	movzx	eax, WORD PTR statests$[rsp]
	mov	ecx, DWORD PTR i$1[rsp]
	mov	edx, 1
	sar	edx, cl
	mov	ecx, edx
	and	eax, ecx
	test	eax, eax
	je	SHORT $LN2@hda_initia

; 669  : 			if (codec_enumerate_widgets(i)) {

	mov	ecx, DWORD PTR i$1[rsp]
	call	?codec_enumerate_widgets@@YAHH@Z	; codec_enumerate_widgets
	test	eax, eax
	je	SHORT $LN1@hda_initia

; 670  : 				break;

	jmp	SHORT $LN3@hda_initia
$LN1@hda_initia:
$LN2@hda_initia:

; 671  : 			}
; 672  : 		}
; 673  : 	} 

	jmp	SHORT $LN4@hda_initia
$LN3@hda_initia:

; 674  : 	
; 675  : 	init_output();

	call	?init_output@@YAXXZ			; init_output

; 676  : 	hda_init_output_stream();

	call	?hda_init_output_stream@@YAXXZ		; hda_init_output_stream

; 677  : 	//
; 678  : 	hda_output_start();

	call	?hda_output_start@@YAXXZ		; hda_output_start

; 679  : 	hda_set_volume (0); //mute

	mov	DWORD PTR vol$[rsp], 0

; 680  : 	

	xor	ecx, ecx
	call	?hda_set_volume@@YAXE@Z			; hda_set_volume

; 681  : 
; 682  : 	
; 683  : 	x64_sti();
; 684  : 	printf ("IHD Audio Initialized successfully\n");

	call	x64_sti

; 685  : }

	lea	rcx, OFFSET FLAT:$SG3673
	call	?printf@@YAXPEBDZZ			; printf
$LN12@hda_initia:

; 686  : 

	add	rsp, 376				; 00000178H
	ret	0
?hda_initialize@@YAXXZ ENDP				; hda_initialize
_TEXT	ENDS
END
