; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?mouse_img_i@@3PAIA				; mouse_img_i
_DATA	SEGMENT
?mouse_img_i@@3PAIA DD 0ff000000H			; mouse_img_i
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ff000000H
	DD	0ff000000H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ff000000H
	DD	0ffffffffH
	DD	0ff000000H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ff000000H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ff000000H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ff000000H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ff000000H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ff000000H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ff000000H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ff000000H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ff000000H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ff000000H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ff000000H
	DD	00H
	DD	00H
	DD	00H
	DD	0ff000000H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ff000000H
	DD	00H
	DD	00H
	DD	0ff000000H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ff000000H
	DD	00H
	DD	0ff000000H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ff000000H
	DD	0ff000000H
	DD	0ff000000H
	DD	0ff000000H
	DD	0ff000000H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ff000000H
	DD	0ff000000H
	DD	0ff000000H
	DD	0ff000000H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ff000000H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ff000000H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ff000000H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ff000000H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ff000000H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ff000000H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ff000000H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ff000000H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ff000000H
	DD	0ffffffffH
	DD	0ff000000H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ff000000H
	DD	0ff000000H
	DD	00H
	DD	00H
_DATA	ENDS
PUBLIC	?hw_move_cursor@@YAXPEAIII@Z			; hw_move_cursor
EXTRN	x64_cli:PROC
EXTRN	?svga_fifo_commit_all@@YAXXZ:PROC		; svga_fifo_commit_all
EXTRN	?svga_begin_define_alpha_cursor@@YAXPEBUSVGAFifoCmdDefineAlphaCursor@@PEAPEAX@Z:PROC ; svga_begin_define_alpha_cursor
EXTRN	?svga_move_cursor@@YAXIIII@Z:PROC		; svga_move_cursor
pdata	SEGMENT
$pdata$?hw_move_cursor@@YAXPEAIII@Z DD imagerel $LN13
	DD	imagerel $LN13+305
	DD	imagerel $unwind$?hw_move_cursor@@YAXPEAIII@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?hw_move_cursor@@YAXPEAIII@Z DD 011201H
	DD	0a212H
xdata	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\hwcursor.cpp
_TEXT	SEGMENT
_y$1 = 32
_x$2 = 36
and_data$ = 40
cursor$ = 48
mouse_image$ = 96
xcoord$ = 104
ycoord$ = 112
?hw_move_cursor@@YAXPEAIII@Z PROC			; hw_move_cursor

; 40   : void hw_move_cursor (uint32_t *mouse_image, uint32_t xcoord, uint32_t ycoord) {

$LN13:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H

; 41   : 	x64_cli();

	call	x64_cli

; 42   : 
; 43   : 	
; 44   : 	SVGAFifoCmdDefineAlphaCursor cursor;
; 45   : 	cursor.id = 0;

	mov	DWORD PTR cursor$[rsp], 0

; 46   : 	cursor.hotspotX = 0;

	mov	DWORD PTR cursor$[rsp+4], 0

; 47   : 	cursor.hotspotY = 0;

	mov	DWORD PTR cursor$[rsp+8], 0

; 48   : 	if (mouse_image == NULL){

	cmp	QWORD PTR mouse_image$[rsp], 0
	jne	SHORT $LN10@hw_move_cu

; 49   : 		cursor.width = 11;

	mov	DWORD PTR cursor$[rsp+12], 11

; 50   : 		cursor.height = 18;

	mov	DWORD PTR cursor$[rsp+16], 18

; 51   : 	}else{

	jmp	SHORT $LN9@hw_move_cu
$LN10@hw_move_cu:

; 52   : 		cursor.width = 24;

	mov	DWORD PTR cursor$[rsp+12], 24

; 53   : 		cursor.height = 24;

	mov	DWORD PTR cursor$[rsp+16], 24
$LN9@hw_move_cu:

; 54   : 	}
; 55   : 
; 56   : 
; 57   : 	uint32_t *and_data;
; 58   : 	svga_begin_define_alpha_cursor (&cursor, (void**)&and_data);

	lea	rdx, QWORD PTR and_data$[rsp]
	lea	rcx, QWORD PTR cursor$[rsp]
	call	?svga_begin_define_alpha_cursor@@YAXPEBUSVGAFifoCmdDefineAlphaCursor@@PEAPEAX@Z ; svga_begin_define_alpha_cursor

; 59   : 
; 60   : 	for (int _y = 0; _y < cursor.height; _y++) {

	mov	DWORD PTR _y$1[rsp], 0
	jmp	SHORT $LN8@hw_move_cu
$LN7@hw_move_cu:
	mov	eax, DWORD PTR _y$1[rsp]
	inc	eax
	mov	DWORD PTR _y$1[rsp], eax
$LN8@hw_move_cu:
	mov	eax, DWORD PTR cursor$[rsp+16]
	cmp	DWORD PTR _y$1[rsp], eax
	jae	$LN6@hw_move_cu

; 61   : 		for ( int _x = 0; _x < cursor.width; _x++) {

	mov	DWORD PTR _x$2[rsp], 0
	jmp	SHORT $LN5@hw_move_cu
$LN4@hw_move_cu:
	mov	eax, DWORD PTR _x$2[rsp]
	inc	eax
	mov	DWORD PTR _x$2[rsp], eax
$LN5@hw_move_cu:
	mov	eax, DWORD PTR cursor$[rsp+12]
	cmp	DWORD PTR _x$2[rsp], eax
	jae	SHORT $LN3@hw_move_cu

; 62   : 			//if ( mouse_img_i[_y * 11 + _x] & 0xFF000000){
; 63   : 			if (mouse_image == NULL)

	cmp	QWORD PTR mouse_image$[rsp], 0
	jne	SHORT $LN2@hw_move_cu

; 64   : 				*(and_data++) = mouse_img_i[_y * 11 + _x];

	mov	eax, DWORD PTR _y$1[rsp]
	imul	eax, 11
	add	eax, DWORD PTR _x$2[rsp]
	cdqe
	lea	rcx, OFFSET FLAT:?mouse_img_i@@3PAIA	; mouse_img_i
	mov	rdx, QWORD PTR and_data$[rsp]
	mov	eax, DWORD PTR [rcx+rax*4]
	mov	DWORD PTR [rdx], eax
	mov	rax, QWORD PTR and_data$[rsp]
	add	rax, 4
	mov	QWORD PTR and_data$[rsp], rax

; 65   : 			else 

	jmp	SHORT $LN1@hw_move_cu
$LN2@hw_move_cu:

; 66   : 				*(and_data++) = mouse_image[_y * cursor.width + _x];

	mov	eax, DWORD PTR _y$1[rsp]
	imul	eax, DWORD PTR cursor$[rsp+12]
	add	eax, DWORD PTR _x$2[rsp]
	mov	eax, eax
	mov	rcx, QWORD PTR and_data$[rsp]
	mov	rdx, QWORD PTR mouse_image$[rsp]
	mov	eax, DWORD PTR [rdx+rax*4]
	mov	DWORD PTR [rcx], eax
	mov	rax, QWORD PTR and_data$[rsp]
	add	rax, 4
	mov	QWORD PTR and_data$[rsp], rax
$LN1@hw_move_cu:

; 67   : 			//	*(xor_data++) = _y * 127;
; 68   : 			//}
; 69   : 		}

	jmp	SHORT $LN4@hw_move_cu
$LN3@hw_move_cu:

; 70   : 	}

	jmp	$LN7@hw_move_cu
$LN6@hw_move_cu:

; 71   :     svga_move_cursor(true, xcoord,ycoord,0);

	xor	r9d, r9d
	mov	r8d, DWORD PTR ycoord$[rsp]
	mov	edx, DWORD PTR xcoord$[rsp]
	mov	ecx, 1
	call	?svga_move_cursor@@YAXIIII@Z		; svga_move_cursor

; 72   : 	svga_fifo_commit_all();

	call	?svga_fifo_commit_all@@YAXXZ		; svga_fifo_commit_all

; 73   : 	
; 74   : }

	add	rsp, 88					; 00000058H
	ret	0
?hw_move_cursor@@YAXPEAIII@Z ENDP			; hw_move_cursor
_TEXT	ENDS
END
