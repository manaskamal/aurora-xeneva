; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?AuARPRequestMAC@@YAXXZ				; AuARPRequestMAC
EXTRN	memset:PROC
EXTRN	memcpy:PROC
EXTRN	?AuGetNetTuple@@YAPEAU_au_net_@@XZ:PROC		; AuGetNetTuple
EXTRN	?ethernet_send@@YAXPEAX_KGPEAE@Z:PROC		; ethernet_send
pdata	SEGMENT
$pdata$?AuARPRequestMAC@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+197
	DD	imagerel $unwind$?AuARPRequestMAC@@YAXXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?AuARPRequestMAC@@YAXXZ DD 010401H
	DD	0a204H
xdata	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\net\arp.cpp
_TEXT	SEGMENT
mac$ = 32
arp$ = 40
?AuARPRequestMAC@@YAXXZ PROC				; AuARPRequestMAC

; 34   : void AuARPRequestMAC() {

$LN3:
	sub	rsp, 88					; 00000058H

; 35   : 	arp_t arp;
; 36   : 	arp.hw_address_type = 0x0100; //rthernet

	mov	eax, 256				; 00000100H
	mov	WORD PTR arp$[rsp], ax

; 37   : 	arp.hw_protocol_type = 0x0008; //IPV4

	mov	eax, 8
	mov	WORD PTR arp$[rsp+2], ax

; 38   : 	arp.hw_address_size = 6; //mac

	mov	BYTE PTR arp$[rsp+4], 6

; 39   : 	arp.protocol_size = 4; //ipv4

	mov	BYTE PTR arp$[rsp+5], 4

; 40   : 	arp.operation = ARP_OPERATION_REQUEST; 

	mov	eax, 256				; 00000100H
	mov	WORD PTR arp$[rsp+6], ax

; 41   : 
; 42   : 	uint8_t *mac = AuGetNetTuple()->mac;

	call	?AuGetNetTuple@@YAPEAU_au_net_@@XZ	; AuGetNetTuple
	mov	QWORD PTR mac$[rsp], rax

; 43   : 	memcpy(arp.src_mac,mac, 6);

	mov	r8d, 6
	mov	rdx, QWORD PTR mac$[rsp]
	lea	rcx, QWORD PTR arp$[rsp+8]
	call	memcpy

; 44   : 	arp.src_ip[0] = 192;

	mov	eax, 1
	imul	rax, 0
	mov	BYTE PTR arp$[rsp+rax+14], 192		; 000000c0H

; 45   : 	arp.src_ip[1] = 168;

	mov	eax, 1
	imul	rax, 1
	mov	BYTE PTR arp$[rsp+rax+14], 168		; 000000a8H

; 46   : 	arp.src_ip[2] = 0;

	mov	eax, 1
	imul	rax, 2
	mov	BYTE PTR arp$[rsp+rax+14], 0

; 47   : 	arp.src_ip[3] = 0;

	mov	eax, 1
	imul	rax, 3
	mov	BYTE PTR arp$[rsp+rax+14], 0

; 48   : 	
; 49   : 	memset(arp.dest_mac, 0xff, 6);

	mov	r8d, 6
	mov	dl, 255					; 000000ffH
	lea	rcx, QWORD PTR arp$[rsp+18]
	call	memset

; 50   : 	memset(arp.dest_ip, 0xff, 4);

	mov	r8d, 4
	mov	dl, 255					; 000000ffH
	lea	rcx, QWORD PTR arp$[rsp+24]
	call	memset

; 51   : 	ethernet_send(&arp,sizeof(arp_t),ETHERNET_TYPE_ARP,arp.dest_mac);

	lea	r9, QWORD PTR arp$[rsp+18]
	mov	r8w, 2054				; 00000806H
	mov	edx, 28
	lea	rcx, QWORD PTR arp$[rsp]
	call	?ethernet_send@@YAXPEAX_KGPEAE@Z	; ethernet_send

; 52   : }

	add	rsp, 88					; 00000058H
	ret	0
?AuARPRequestMAC@@YAXXZ ENDP				; AuARPRequestMAC
_TEXT	ENDS
END
