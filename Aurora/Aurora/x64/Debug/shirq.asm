; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?shdevice@@3PAPEAU_shirq_@@A			; shdevice
PUBLIC	?shdevice_count@@3_KA				; shdevice_count
PUBLIC	?SharedHandlerInstalled@@3_NA			; SharedHandlerInstalled
_BSS	SEGMENT
?shdevice@@3PAPEAU_shirq_@@A DQ 0100H DUP (?)		; shdevice
?shdevice_count@@3_KA DQ 01H DUP (?)			; shdevice_count
?SharedHandlerInstalled@@3_NA DB 01H DUP (?)		; SharedHandlerInstalled
_BSS	ENDS
CONST	SEGMENT
$SG2996	DB	'SharedIRQHandler called ', 0aH, 00H
CONST	ENDS
PUBLIC	?AuSharedDeviceInit@@YAXXZ			; AuSharedDeviceInit
PUBLIC	AuSharedDeviceRegister
PUBLIC	AuInstallSharedHandler
PUBLIC	AuCheckSharedDevice
PUBLIC	?AuSharedHandler@@YAX_KPEAX@Z			; AuSharedHandler
EXTRN	AuInterruptEnd:PROC
EXTRN	AuInterruptSet:PROC
EXTRN	printf:PROC
pdata	SEGMENT
$pdata$?AuSharedDeviceInit@@YAXXZ DD imagerel $LN6
	DD	imagerel $LN6+74
	DD	imagerel $unwind$?AuSharedDeviceInit@@YAXXZ
$pdata$AuInstallSharedHandler DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$AuInstallSharedHandler
$pdata$AuCheckSharedDevice DD imagerel $LN7
	DD	imagerel $LN7+106
	DD	imagerel $unwind$AuCheckSharedDevice
$pdata$?AuSharedHandler@@YAX_KPEAX@Z DD imagerel $LN7
	DD	imagerel $LN7+125
	DD	imagerel $unwind$?AuSharedHandler@@YAX_KPEAX@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?AuSharedDeviceInit@@YAXXZ DD 010401H
	DD	02204H
$unwind$AuInstallSharedHandler DD 010801H
	DD	04208H
$unwind$AuCheckSharedDevice DD 010c01H
	DD	0220cH
$unwind$?AuSharedHandler@@YAX_KPEAX@Z DD 010e01H
	DD	0620eH
xdata	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\shirq.cpp
_TEXT	SEGMENT
i$1 = 32
device$2 = 40
v$ = 64
p$ = 72
?AuSharedHandler@@YAX_KPEAX@Z PROC			; AuSharedHandler

; 79   : void AuSharedHandler(size_t v, void* p) {

$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 80   : 	printf ("SharedIRQHandler called \n");

	lea	rcx, OFFSET FLAT:$SG2996
	call	printf

; 81   : 	/* Call each IRQHandler */
; 82   : 	for (int i = 0; i < shdevice_count; i++){

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@AuSharedHa
$LN3@AuSharedHa:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@AuSharedHa:
	movsxd	rax, DWORD PTR i$1[rsp]
	cmp	rax, QWORD PTR ?shdevice_count@@3_KA	; shdevice_count
	jae	SHORT $LN2@AuSharedHa

; 83   : 		shirq_t *device = shdevice[i];

	movsxd	rax, DWORD PTR i$1[rsp]
	lea	rcx, OFFSET FLAT:?shdevice@@3PAPEAU_shirq_@@A ; shdevice
	mov	rax, QWORD PTR [rcx+rax*8]
	mov	QWORD PTR device$2[rsp], rax

; 84   : 		if (device->IrqHandler)

	mov	rax, QWORD PTR device$2[rsp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN1@AuSharedHa

; 85   : 			device->IrqHandler(v,p);

	mov	rdx, QWORD PTR p$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	mov	rax, QWORD PTR device$2[rsp]
	call	QWORD PTR [rax+16]
$LN1@AuSharedHa:

; 86   : 	}

	jmp	SHORT $LN3@AuSharedHa
$LN2@AuSharedHa:

; 87   : 
; 88   : 	AuInterruptEnd(0);

	xor	ecx, ecx
	call	AuInterruptEnd

; 89   : }

	add	rsp, 56					; 00000038H
	ret	0
?AuSharedHandler@@YAX_KPEAX@Z ENDP			; AuSharedHandler
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\shirq.cpp
_TEXT	SEGMENT
i$1 = 0
shdev$2 = 8
irq$ = 32
device_id$ = 40
AuCheckSharedDevice PROC

; 66   : bool AuCheckSharedDevice(uint8_t irq, uint32_t device_id) {

$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	BYTE PTR [rsp+8], cl
	sub	rsp, 24

; 67   : 	for (int i = 0; i < shdevice_count; i++) {

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@AuCheckSha
$LN3@AuCheckSha:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@AuCheckSha:
	movsxd	rax, DWORD PTR i$1[rsp]
	cmp	rax, QWORD PTR ?shdevice_count@@3_KA	; shdevice_count
	jae	SHORT $LN2@AuCheckSha

; 68   : 		shirq_t *shdev = shdevice[i];

	movsxd	rax, DWORD PTR i$1[rsp]
	lea	rcx, OFFSET FLAT:?shdevice@@3PAPEAU_shirq_@@A ; shdevice
	mov	rax, QWORD PTR [rcx+rax*8]
	mov	QWORD PTR shdev$2[rsp], rax

; 69   : 		if (shdev->irq == irq && shdev->device_id != device_id)

	mov	rax, QWORD PTR shdev$2[rsp]
	movzx	eax, BYTE PTR [rax]
	movzx	ecx, BYTE PTR irq$[rsp]
	cmp	eax, ecx
	jne	SHORT $LN1@AuCheckSha
	mov	rax, QWORD PTR shdev$2[rsp]
	mov	ecx, DWORD PTR device_id$[rsp]
	cmp	DWORD PTR [rax+4], ecx
	je	SHORT $LN1@AuCheckSha

; 70   : 			return true;

	mov	al, 1
	jmp	SHORT $LN5@AuCheckSha
$LN1@AuCheckSha:

; 71   : 	}

	jmp	SHORT $LN3@AuCheckSha
$LN2@AuCheckSha:

; 72   : 	return false;

	xor	al, al
$LN5@AuCheckSha:

; 73   : }

	add	rsp, 24
	ret	0
AuCheckSharedDevice ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\shirq.cpp
_TEXT	SEGMENT
irq$ = 48
AuInstallSharedHandler PROC

; 95   : void AuInstallSharedHandler (uint8_t irq) {

$LN4:
	mov	BYTE PTR [rsp+8], cl
	sub	rsp, 40					; 00000028H

; 96   : 	if (SharedHandlerInstalled)

	movzx	eax, BYTE PTR ?SharedHandlerInstalled@@3_NA ; SharedHandlerInstalled
	test	eax, eax
	je	SHORT $LN1@AuInstallS

; 97   : 		return;

	jmp	SHORT $LN2@AuInstallS
$LN1@AuInstallS:

; 98   : 	AuInterruptSet(irq,AuSharedHandler, irq);

	movzx	eax, BYTE PTR irq$[rsp]
	movzx	r8d, BYTE PTR irq$[rsp]
	lea	rdx, OFFSET FLAT:?AuSharedHandler@@YAX_KPEAX@Z ; AuSharedHandler
	mov	ecx, eax
	call	AuInterruptSet

; 99   : 	SharedHandlerInstalled = true;

	mov	BYTE PTR ?SharedHandlerInstalled@@3_NA, 1 ; SharedHandlerInstalled
$LN2@AuInstallS:

; 100  : }

	add	rsp, 40					; 00000028H
	ret	0
AuInstallSharedHandler ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\shirq.cpp
_TEXT	SEGMENT
shdev$ = 8
AuSharedDeviceRegister PROC

; 52   : void AuSharedDeviceRegister (shirq_t *shdev) {

	mov	QWORD PTR [rsp+8], rcx

; 53   : 	shdevice[shdevice_count] = shdev;

	lea	rax, OFFSET FLAT:?shdevice@@3PAPEAU_shirq_@@A ; shdevice
	mov	rcx, QWORD PTR ?shdevice_count@@3_KA	; shdevice_count
	mov	rdx, QWORD PTR shdev$[rsp]
	mov	QWORD PTR [rax+rcx*8], rdx

; 54   : 	shdevice_count++;

	mov	rax, QWORD PTR ?shdevice_count@@3_KA	; shdevice_count
	inc	rax
	mov	QWORD PTR ?shdevice_count@@3_KA, rax	; shdevice_count

; 55   : }

	ret	0
AuSharedDeviceRegister ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\shirq.cpp
_TEXT	SEGMENT
i$1 = 0
?AuSharedDeviceInit@@YAXXZ PROC				; AuSharedDeviceInit

; 40   : void AuSharedDeviceInit () {

$LN6:
	sub	rsp, 24

; 41   : 	shdevice_count = 0;

	mov	QWORD PTR ?shdevice_count@@3_KA, 0	; shdevice_count

; 42   : 	for (int i = 0; i < 256; i++)

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN3@AuSharedDe
$LN2@AuSharedDe:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN3@AuSharedDe:
	cmp	DWORD PTR i$1[rsp], 256			; 00000100H
	jge	SHORT $LN1@AuSharedDe

; 43   : 		shdevice[i] = 0;

	movsxd	rax, DWORD PTR i$1[rsp]
	lea	rcx, OFFSET FLAT:?shdevice@@3PAPEAU_shirq_@@A ; shdevice
	mov	QWORD PTR [rcx+rax*8], 0
	jmp	SHORT $LN2@AuSharedDe
$LN1@AuSharedDe:

; 44   : 	SharedHandlerInstalled = false;

	mov	BYTE PTR ?SharedHandlerInstalled@@3_NA, 0 ; SharedHandlerInstalled

; 45   : }

	add	rsp, 24
	ret	0
?AuSharedDeviceInit@@YAXXZ ENDP				; AuSharedDeviceInit
_TEXT	ENDS
END
