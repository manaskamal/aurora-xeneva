; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?map_shared_memory@@YAXG_K0@Z			; map_shared_memory
PUBLIC	?unmap_shared_memory@@YAXG_K0@Z			; unmap_shared_memory
PUBLIC	?sys_get_used_ram@@YA_KXZ			; sys_get_used_ram
PUBLIC	?sys_get_free_ram@@YA_KXZ			; sys_get_free_ram
EXTRN	?pmmngr_alloc@@YAPEAXXZ:PROC			; pmmngr_alloc
EXTRN	?pmmngr_get_free_ram@@YA_KXZ:PROC		; pmmngr_get_free_ram
EXTRN	?pmmngr_get_used_ram@@YA_KXZ:PROC		; pmmngr_get_used_ram
EXTRN	x64_cli:PROC
EXTRN	?pml4_index@@YA_K_K@Z:PROC			; pml4_index
EXTRN	?map_page@@YA_N_K0@Z:PROC			; map_page
EXTRN	?unmap_page@@YAX_K@Z:PROC			; unmap_page
EXTRN	?get_current_thread@@YAPEAU_thread_@@XZ:PROC	; get_current_thread
EXTRN	?thread_iterate_ready_list@@YAPEAU_thread_@@G@Z:PROC ; thread_iterate_ready_list
EXTRN	?thread_iterate_block_list@@YAPEAU_thread_@@H@Z:PROC ; thread_iterate_block_list
pdata	SEGMENT
$pdata$?map_shared_memory@@YAXG_K0@Z DD imagerel $LN10
	DD	imagerel $LN10+363
	DD	imagerel $unwind$?map_shared_memory@@YAXG_K0@Z
$pdata$?unmap_shared_memory@@YAXG_K0@Z DD imagerel $LN6
	DD	imagerel $LN6+117
	DD	imagerel $unwind$?unmap_shared_memory@@YAXG_K0@Z
$pdata$?sys_get_used_ram@@YA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+19
	DD	imagerel $unwind$?sys_get_used_ram@@YA_KXZ
$pdata$?sys_get_free_ram@@YA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+19
	DD	imagerel $unwind$?sys_get_free_ram@@YA_KXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?map_shared_memory@@YAXG_K0@Z DD 011301H
	DD	0c213H
$unwind$?unmap_shared_memory@@YAXG_K0@Z DD 011301H
	DD	06213H
$unwind$?sys_get_used_ram@@YA_KXZ DD 010401H
	DD	04204H
$unwind$?sys_get_free_ram@@YA_KXZ DD 010401H
	DD	04204H
xdata	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\sysserv\sysmem.cpp
_TEXT	SEGMENT
?sys_get_free_ram@@YA_KXZ PROC				; sys_get_free_ram

; 61   : uint64_t sys_get_free_ram () {

$LN3:
	sub	rsp, 40					; 00000028H

; 62   : 	x64_cli ();

	call	x64_cli

; 63   : 	return pmmngr_get_free_ram ();

	call	?pmmngr_get_free_ram@@YA_KXZ		; pmmngr_get_free_ram

; 64   : }

	add	rsp, 40					; 00000028H
	ret	0
?sys_get_free_ram@@YA_KXZ ENDP				; sys_get_free_ram
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\sysserv\sysmem.cpp
_TEXT	SEGMENT
?sys_get_used_ram@@YA_KXZ PROC				; sys_get_used_ram

; 56   : uint64_t sys_get_used_ram () {

$LN3:
	sub	rsp, 40					; 00000028H

; 57   : 	x64_cli ();

	call	x64_cli

; 58   : 	return pmmngr_get_used_ram ();

	call	?pmmngr_get_used_ram@@YA_KXZ		; pmmngr_get_used_ram

; 59   : }

	add	rsp, 40					; 00000028H
	ret	0
?sys_get_used_ram@@YA_KXZ ENDP				; sys_get_used_ram
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\sysserv\sysmem.cpp
_TEXT	SEGMENT
i$1 = 32
tv65 = 40
dest_id$ = 64
pos$ = 72
size$ = 80
?unmap_shared_memory@@YAXG_K0@Z PROC			; unmap_shared_memory

; 37   : void unmap_shared_memory (uint16_t dest_id, uint64_t pos, size_t size) {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	WORD PTR [rsp+8], cx
	sub	rsp, 56					; 00000038H

; 38   : 	x64_cli ();

	call	x64_cli

; 39   : 
; 40   : 	
; 41   : 	for (int i = 0; i < size/4096; i++)

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN3@unmap_shar
$LN2@unmap_shar:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN3@unmap_shar:
	movsxd	rax, DWORD PTR i$1[rsp]
	mov	QWORD PTR tv65[rsp], rax
	xor	edx, edx
	mov	rax, QWORD PTR size$[rsp]
	mov	ecx, 4096				; 00001000H
	div	rcx
	mov	rcx, QWORD PTR tv65[rsp]
	cmp	rcx, rax
	jae	SHORT $LN1@unmap_shar

; 42   : 		unmap_page (pos + size * 4096);

	mov	rax, QWORD PTR size$[rsp]
	imul	rax, 4096				; 00001000H
	mov	rcx, QWORD PTR pos$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	?unmap_page@@YAX_K@Z			; unmap_page
	jmp	SHORT $LN2@unmap_shar
$LN1@unmap_shar:

; 43   : 
; 44   : 
; 45   : 	/*thread_t* t = thread_iterate_ready_list (dest_id);
; 46   : 	if (t == NULL) {
; 47   : 		t = thread_iterate_block_list(dest_id);
; 48   : 	}
; 49   : 	uint64_t *cr3 = (uint64_t*)t->cr3;
; 50   : 
; 51   : 	for (int i = 0; i < size / 4096; i++)
; 52   : 		unmap_page_ex(cr3,pos + size * 4096);*/
; 53   : }

	add	rsp, 56					; 00000038H
	ret	0
?unmap_shared_memory@@YAXG_K0@Z ENDP			; unmap_shared_memory
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\sysserv\sysmem.cpp
_TEXT	SEGMENT
i$1 = 32
i$2 = 36
t$ = 40
tv71 = 48
cr3$ = 56
tv65 = 64
current_cr3$ = 72
tv84 = 80
tv94 = 88
dest_id$ = 112
pos$ = 120
size$ = 128
?map_shared_memory@@YAXG_K0@Z PROC			; map_shared_memory

; 18   : void map_shared_memory (uint16_t dest_id,uint64_t pos, size_t size) {

$LN10:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	WORD PTR [rsp+8], cx
	sub	rsp, 104				; 00000068H

; 19   : 	x64_cli ();

	call	x64_cli

; 20   : 
; 21   : 	
; 22   : 	for (int i = 0; i < size/4096; i++)

	mov	DWORD PTR i$2[rsp], 0
	jmp	SHORT $LN7@map_shared
$LN6@map_shared:
	mov	eax, DWORD PTR i$2[rsp]
	inc	eax
	mov	DWORD PTR i$2[rsp], eax
$LN7@map_shared:
	movsxd	rax, DWORD PTR i$2[rsp]
	mov	QWORD PTR tv65[rsp], rax
	xor	edx, edx
	mov	rax, QWORD PTR size$[rsp]
	mov	ecx, 4096				; 00001000H
	div	rcx
	mov	rcx, QWORD PTR tv65[rsp]
	cmp	rcx, rax
	jae	SHORT $LN5@map_shared

; 23   : 		map_page ((uint64_t)pmmngr_alloc(),pos + i * 4096);

	mov	eax, DWORD PTR i$2[rsp]
	imul	eax, 4096				; 00001000H
	cdqe
	mov	rcx, QWORD PTR pos$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tv71[rsp], rax
	call	?pmmngr_alloc@@YAPEAXXZ			; pmmngr_alloc
	mov	rcx, QWORD PTR tv71[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?map_page@@YA_N_K0@Z			; map_page
	jmp	SHORT $LN6@map_shared
$LN5@map_shared:

; 24   : 
; 25   : 	thread_t* t = thread_iterate_ready_list (dest_id);

	movzx	ecx, WORD PTR dest_id$[rsp]
	call	?thread_iterate_ready_list@@YAPEAU_thread_@@G@Z ; thread_iterate_ready_list
	mov	QWORD PTR t$[rsp], rax

; 26   : 	if (t == NULL) {

	cmp	QWORD PTR t$[rsp], 0
	jne	SHORT $LN4@map_shared

; 27   : 		t = thread_iterate_block_list(dest_id);

	movzx	eax, WORD PTR dest_id$[rsp]
	mov	ecx, eax
	call	?thread_iterate_block_list@@YAPEAU_thread_@@H@Z ; thread_iterate_block_list
	mov	QWORD PTR t$[rsp], rax
$LN4@map_shared:

; 28   : 	}
; 29   : 	uint64_t *cr3 = (uint64_t*)t->cr3;

	mov	rax, QWORD PTR t$[rsp]
	mov	rax, QWORD PTR [rax+192]
	mov	QWORD PTR cr3$[rsp], rax

; 30   : 	uint64_t *current_cr3 = (uint64_t*)get_current_thread()->cr3;

	call	?get_current_thread@@YAPEAU_thread_@@XZ	; get_current_thread
	mov	rax, QWORD PTR [rax+192]
	mov	QWORD PTR current_cr3$[rsp], rax

; 31   : 
; 32   : 	for (int i = 0; i < size / 4096; i++)

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN3@map_shared
$LN2@map_shared:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN3@map_shared:
	movsxd	rax, DWORD PTR i$1[rsp]
	mov	QWORD PTR tv84[rsp], rax
	xor	edx, edx
	mov	rax, QWORD PTR size$[rsp]
	mov	ecx, 4096				; 00001000H
	div	rcx
	mov	rcx, QWORD PTR tv84[rsp]
	cmp	rcx, rax
	jae	SHORT $LN1@map_shared

; 33   : 		cr3[pml4_index(pos + i * 4096)] = current_cr3[pml4_index(pos + i * 4096)];

	mov	eax, DWORD PTR i$1[rsp]
	imul	eax, 4096				; 00001000H
	cdqe
	mov	rcx, QWORD PTR pos$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	?pml4_index@@YA_K_K@Z			; pml4_index
	mov	QWORD PTR tv94[rsp], rax
	mov	ecx, DWORD PTR i$1[rsp]
	imul	ecx, 4096				; 00001000H
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR pos$[rsp]
	add	rdx, rcx
	mov	rcx, rdx
	call	?pml4_index@@YA_K_K@Z			; pml4_index
	mov	rcx, QWORD PTR cr3$[rsp]
	mov	rdx, QWORD PTR current_cr3$[rsp]
	mov	r8, QWORD PTR tv94[rsp]
	mov	rdx, QWORD PTR [rdx+r8*8]
	mov	QWORD PTR [rcx+rax*8], rdx
	jmp	$LN2@map_shared
$LN1@map_shared:

; 34   : }

	add	rsp, 104				; 00000068H
	ret	0
?map_shared_memory@@YAXG_K0@Z ENDP			; map_shared_memory
_TEXT	ENDS
END
