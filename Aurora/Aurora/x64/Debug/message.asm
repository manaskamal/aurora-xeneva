; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?message_init@@YAXXZ				; message_init
PUBLIC	?message_send@@YAXGPEAU_message_@@@Z		; message_send
PUBLIC	?message_receive@@YAXPEAU_message_@@@Z		; message_receive
PUBLIC	?is_message_queue_empty@@YA_NXZ			; is_message_queue_empty
EXTRN	memcpy:PROC
EXTRN	?pmmngr_alloc@@YAPEAXXZ:PROC			; pmmngr_alloc
EXTRN	?pmmngr_free@@YAXPEAX@Z:PROC			; pmmngr_free
EXTRN	x64_cli:PROC
EXTRN	?unblock_thread@@YAXPEAU_thread_@@@Z:PROC	; unblock_thread
EXTRN	?get_current_thread@@YAPEAU_thread_@@XZ:PROC	; get_current_thread
EXTRN	?thread_iterate_ready_list@@YAPEAU_thread_@@G@Z:PROC ; thread_iterate_ready_list
EXTRN	?thread_iterate_block_list@@YAPEAU_thread_@@H@Z:PROC ; thread_iterate_block_list
_BSS	SEGMENT
top	DQ	01H DUP (?)
_BSS	ENDS
pdata	SEGMENT
$pdata$?message_send@@YAXGPEAU_message_@@@Z DD imagerel $LN5
	DD	imagerel $LN5+158
	DD	imagerel $unwind$?message_send@@YAXGPEAU_message_@@@Z
$pdata$?message_receive@@YAXPEAU_message_@@@Z DD imagerel $LN6
	DD	imagerel $LN6+143
	DD	imagerel $unwind$?message_receive@@YAXPEAU_message_@@@Z
$pdata$?is_message_queue_empty@@YA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+39
	DD	imagerel $unwind$?is_message_queue_empty@@YA_NXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?message_send@@YAXGPEAU_message_@@@Z DD 010e01H
	DD	0820eH
$unwind$?message_receive@@YAXPEAU_message_@@@Z DD 010901H
	DD	06209H
$unwind$?is_message_queue_empty@@YA_NXZ DD 010401H
	DD	02204H
xdata	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\ipc\message.cpp
_TEXT	SEGMENT
tv65 = 0
?is_message_queue_empty@@YA_NXZ PROC			; is_message_queue_empty

; 25   : bool is_message_queue_empty () {

$LN5:
	sub	rsp, 24

; 26   : 	return top == NULL;

	cmp	QWORD PTR top, 0
	jne	SHORT $LN3@is_message
	mov	DWORD PTR tv65[rsp], 1
	jmp	SHORT $LN4@is_message
$LN3@is_message:
	mov	DWORD PTR tv65[rsp], 0
$LN4@is_message:
	movzx	eax, BYTE PTR tv65[rsp]

; 27   : }

	add	rsp, 24
	ret	0
?is_message_queue_empty@@YA_NXZ ENDP			; is_message_queue_empty
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\ipc\message.cpp
_TEXT	SEGMENT
tv67 = 32
temp$ = 40
msg$ = 64
?message_receive@@YAXPEAU_message_@@@Z PROC		; message_receive

; 57   : void message_receive (message_t* msg) {

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 58   : 	x64_cli ();

	call	x64_cli

; 59   : 
; 60   : 	kernel_message_queue_t *temp;
; 61   : 
; 62   : 	if (top == NULL) 

	cmp	QWORD PTR top, 0
	jne	SHORT $LN3@message_re

; 63   : 		return;

	jmp	SHORT $LN4@message_re

; 64   : 	else {

	jmp	SHORT $LN2@message_re
$LN3@message_re:

; 65   : 		temp = top;

	mov	rax, QWORD PTR top
	mov	QWORD PTR temp$[rsp], rax

; 66   : 		if (temp->msg.dest_id == get_current_thread()->id) {

	mov	rax, QWORD PTR temp$[rsp]
	movzx	eax, WORD PTR [rax+58]
	mov	DWORD PTR tv67[rsp], eax
	call	?get_current_thread@@YAPEAU_thread_@@XZ	; get_current_thread
	movzx	eax, WORD PTR [rax+234]
	mov	ecx, DWORD PTR tv67[rsp]
	cmp	ecx, eax
	jne	SHORT $LN1@message_re

; 67   : 			top = top->link;

	mov	rax, QWORD PTR top
	mov	rax, QWORD PTR [rax+112]
	mov	QWORD PTR top, rax

; 68   : 			temp->link = NULL;

	mov	rax, QWORD PTR temp$[rsp]
	mov	QWORD PTR [rax+112], 0

; 69   : 			memcpy (msg, &temp->msg,sizeof(message_t));

	mov	rax, QWORD PTR temp$[rsp]
	mov	r8d, 112				; 00000070H
	mov	rdx, rax
	mov	rcx, QWORD PTR msg$[rsp]
	call	memcpy

; 70   : 			pmmngr_free(temp);

	mov	rcx, QWORD PTR temp$[rsp]
	call	?pmmngr_free@@YAXPEAX@Z			; pmmngr_free
$LN1@message_re:
$LN2@message_re:
$LN4@message_re:

; 71   : 		}
; 72   : 	}
; 73   : 
; 74   : }

	add	rsp, 56					; 00000038H
	ret	0
?message_receive@@YAXPEAU_message_@@@Z ENDP		; message_receive
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\ipc\message.cpp
_TEXT	SEGMENT
temp$ = 32
blocked_thread$1 = 40
dest_thread$ = 48
dest_id$ = 80
msg$ = 88
?message_send@@YAXGPEAU_message_@@@Z PROC		; message_send

; 31   : void message_send (uint16_t dest_id, message_t *msg) {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	WORD PTR [rsp+8], cx
	sub	rsp, 72					; 00000048H

; 32   : 	x64_cli ();

	call	x64_cli

; 33   : 
; 34   : 	thread_t * dest_thread = thread_iterate_ready_list (dest_id);

	movzx	ecx, WORD PTR dest_id$[rsp]
	call	?thread_iterate_ready_list@@YAPEAU_thread_@@G@Z ; thread_iterate_ready_list
	mov	QWORD PTR dest_thread$[rsp], rax

; 35   : 	if (!dest_thread) {

	cmp	QWORD PTR dest_thread$[rsp], 0
	jne	SHORT $LN2@message_se

; 36   : 		thread_t * blocked_thread = thread_iterate_block_list (dest_id);

	movzx	eax, WORD PTR dest_id$[rsp]
	mov	ecx, eax
	call	?thread_iterate_block_list@@YAPEAU_thread_@@H@Z ; thread_iterate_block_list
	mov	QWORD PTR blocked_thread$1[rsp], rax

; 37   : 		if (blocked_thread  != NULL){

	cmp	QWORD PTR blocked_thread$1[rsp], 0
	je	SHORT $LN1@message_se

; 38   : 			unblock_thread (blocked_thread);

	mov	rcx, QWORD PTR blocked_thread$1[rsp]
	call	?unblock_thread@@YAXPEAU_thread_@@@Z	; unblock_thread
$LN1@message_se:
$LN2@message_se:

; 39   : 		}
; 40   : 	}
; 41   : 
; 42   : 	msg->dest_id = dest_id;

	mov	rax, QWORD PTR msg$[rsp]
	movzx	ecx, WORD PTR dest_id$[rsp]
	mov	WORD PTR [rax+58], cx

; 43   : 	//!Actuall Message model
; 44   : 	kernel_message_queue_t * temp = (kernel_message_queue_t*)pmmngr_alloc();

	call	?pmmngr_alloc@@YAPEAXXZ			; pmmngr_alloc
	mov	QWORD PTR temp$[rsp], rax

; 45   : 
; 46   : 	memcpy (&temp->msg, msg, sizeof(message_t));

	mov	rax, QWORD PTR temp$[rsp]
	mov	r8d, 112				; 00000070H
	mov	rdx, QWORD PTR msg$[rsp]
	mov	rcx, rax
	call	memcpy

; 47   : 	temp->link = top;

	mov	rax, QWORD PTR temp$[rsp]
	mov	rcx, QWORD PTR top
	mov	QWORD PTR [rax+112], rcx

; 48   : 	top = temp;

	mov	rax, QWORD PTR temp$[rsp]
	mov	QWORD PTR top, rax

; 49   : 
; 50   : }

	add	rsp, 72					; 00000048H
	ret	0
?message_send@@YAXGPEAU_message_@@@Z ENDP		; message_send
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\xeneva\aurora\aurora\ipc\message.cpp
_TEXT	SEGMENT
?message_init@@YAXXZ PROC				; message_init

; 22   : 	//queue->prev == NULL;
; 23   : }

	ret	0
?message_init@@YAXXZ ENDP				; message_init
_TEXT	ENDS
END
